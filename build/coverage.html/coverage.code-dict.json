{"/home/travis/build/npmtest/node-npmtest-pickadate/test.js":"/* istanbul instrument in package npmtest_pickadate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pickadate/lib.npmtest_pickadate.js":"/* istanbul instrument in package npmtest_pickadate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_pickadate = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_pickadate = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-pickadate/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-pickadate && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_pickadate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_pickadate\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_pickadate.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_pickadate.rollup.js'] =\n            local.assetsDict['/assets.npmtest_pickadate.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_pickadate.__dirname + '/lib.npmtest_pickadate.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/Gruntfile.js":"\n/*!\n * This Gruntfile is used to build the project files.\n */\n\n/*jshint\n    node: true\n */\n\n\nmodule.exports = function( grunt ) {\n\n    // Read the package manifest.\n    var packageJSON = grunt.file.readJSON( 'package.json' )\n\n\n    // Load the NPM tasks.\n    grunt.loadNpmTasks( 'grunt-contrib-watch' )\n    grunt.loadNpmTasks( 'grunt-contrib-jshint' )\n    grunt.loadNpmTasks( 'grunt-contrib-qunit' )\n    grunt.loadNpmTasks( 'grunt-contrib-less' )\n    grunt.loadNpmTasks( 'grunt-contrib-cssmin' )\n    grunt.loadNpmTasks( 'grunt-contrib-uglify' )\n    grunt.loadNpmTasks( 'grunt-autoprefixer' )\n\n\n    // Setup the initial configurations.\n    grunt.initConfig({\n\n\n        // Add the package data.\n        pkg: packageJSON,\n\n\n        // Set up the directories.\n        dirs: {\n            tests: 'tests',\n            lib: {\n                src: 'lib',\n                min: 'lib/compressed'\n            },\n            themes: {\n                src: 'lib/themes-source',\n                dest: 'lib/themes',\n                min: 'lib/compressed/themes'\n            },\n            translations: {\n                src: 'lib/translations',\n                min: 'lib/compressed/translations'\n            },\n        },\n\n\n        // Compile LESS into CSS.\n        less: {\n            options: {\n                style: 'expanded'\n            },\n            themes: {\n                files: {\n                    '<%= dirs.themes.dest %>/default.css': [ '<%= dirs.themes.src %>/base.less', '<%= dirs.themes.src %>/default.less' ],\n                    '<%= dirs.themes.dest %>/classic.css': [ '<%= dirs.themes.src %>/base.less', '<%= dirs.themes.src %>/classic.less' ],\n                    '<%= dirs.themes.dest %>/default.date.css': [ '<%= dirs.themes.src %>/base.date.less', '<%= dirs.themes.src %>/default.date.less' ],\n                    '<%= dirs.themes.dest %>/default.time.css': [ '<%= dirs.themes.src %>/base.time.less', '<%= dirs.themes.src %>/default.time.less' ],\n                    '<%= dirs.themes.dest %>/classic.date.css': [ '<%= dirs.themes.src %>/base.date.less', '<%= dirs.themes.src %>/classic.date.less' ],\n                    '<%= dirs.themes.dest %>/classic.time.css': [ '<%= dirs.themes.src %>/base.time.less', '<%= dirs.themes.src %>/classic.time.less' ],\n                    '<%= dirs.themes.dest %>/rtl.css': [ '<%= dirs.themes.src %>/rtl.less' ]\n                }\n            }\n        },\n\n\n        // Lint the files.\n        jshint: {\n            options: {\n                jshintrc: true\n            },\n            gruntfile: 'Gruntfile.js',\n            lib: [\n                '<%= dirs.tests %>/units/*.js',\n                '<%= dirs.lib.src %>/**/*.js',\n\n                // Ignore the legacy and minified files.\n                '!<%= dirs.lib.src %>/legacy.js',\n                '!<%= dirs.lib.src %>/compressed/**/*.js'\n            ]\n        },\n\n\n        // Minify all the things!\n        uglify: {\n            options: {\n                preserveComments: 'some'\n            },\n            lib: {\n                files: [\n                    {\n                        expand : true,\n                        cwd : '<%= dirs.lib.src %>',\n                        src   : [ '**/*.js', '!compressed/**/*.js' ],\n                        dest : '<%= dirs.lib.min %>'\n                    }\n                ]\n            }\n        },\n        cssmin: {\n            lib: {\n                expand: true,\n                cwd: '<%= dirs.themes.dest %>',\n                src: [ '**/*.css', '!compressed/**/*.css' ],\n                dest: '<%= dirs.themes.min %>'\n            }\n        },\n\n\n        // Prefix the styles.\n        autoprefixer: {\n            options: {\n                browsers: [ '> 5%', 'last 2 versions', 'ie 8', 'ie 9' ]\n            },\n            themes: {\n                src: '<%= dirs.themes.dest %>/**/*.css'\n            },\n        },\n\n\n        // Unit test the files.\n        qunit: {\n            lib: [ '<%= dirs.tests %>/units/all.htm' ]\n        },\n\n\n        // Watch the project files.\n        watch: {\n            develop: {\n                files: [\n                    '<%= dirs.themes.src %>/**/*.less'\n                ],\n                tasks: [ 'develop-once' ]\n            },\n        }\n\n    }) //grunt.initConfig\n\n\n    // Register the tasks.\n    grunt.registerTask( 'default', [ 'develop' ] )\n\n    grunt.registerTask( 'develop', [ 'develop-once', 'watch:develop' ] )\n    grunt.registerTask( 'develop-once', [ 'less:themes', 'autoprefixer:themes' ] )\n\n    grunt.registerTask( 'package', [ 'develop-once', 'uglify', 'cssmin' ] )\n\n    grunt.registerTask( 'test', [ 'jshint', 'qunit' ] )\n\n} //module.exports\n\n\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/legacy.js":"\n/*jshint\n   asi: true,\n   unused: true,\n   boss: true,\n   loopfunc: true,\n   eqnull: true\n */\n\n\n/*!\n * Legacy browser support\n */\n\n\n// Map array support\nif ( ![].map ) {\n    Array.prototype.map = function ( callback, self ) {\n        var array = this, len = array.length, newArray = new Array( len )\n        for ( var i = 0; i < len; i++ ) {\n            if ( i in array ) {\n                newArray[ i ] = callback.call( self, array[ i ], i, array )\n            }\n        }\n        return newArray\n    }\n}\n\n\n// Filter array support\nif ( ![].filter ) {\n    Array.prototype.filter = function( callback ) {\n        if ( this == null ) throw new TypeError()\n        var t = Object( this ), len = t.length >>> 0\n        if ( typeof callback != 'function' ) throw new TypeError()\n        var newArray = [], thisp = arguments[ 1 ]\n        for ( var i = 0; i < len; i++ ) {\n          if ( i in t ) {\n            var val = t[ i ]\n            if ( callback.call( thisp, val, i, t ) ) newArray.push( val )\n          }\n        }\n        return newArray\n    }\n}\n\n\n// Index of array support\nif ( ![].indexOf ) {\n    Array.prototype.indexOf = function( searchElement ) {\n        if ( this == null ) throw new TypeError()\n        var t = Object( this ), len = t.length >>> 0\n        if ( len === 0 ) return -1\n        var n = 0\n        if ( arguments.length > 1 ) {\n            n = Number( arguments[ 1 ] )\n            if ( n != n ) {\n                n = 0\n            }\n            else if ( n !== 0 && n != Infinity && n != -Infinity ) {\n                n = ( n > 0 || -1 ) * Math.floor( Math.abs( n ) )\n            }\n        }\n        if ( n >= len ) return -1\n        var k = n >= 0 ? n : Math.max( len - Math.abs( n ), 0 )\n        for ( ; k < len; k++ ) {\n            if ( k in t && t[ k ] === searchElement ) return k\n        }\n        return -1\n    }\n}\n\n\n/*!\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n * http://blog.stevenlevithan.com/archives/cross-browser-split\n */\nvar nativeSplit = String.prototype.split, compliantExecNpcg = /()??/.exec('')[1] === undefined\nString.prototype.split = function(separator, limit) {\n    var str = this\n    if (Object.prototype.toString.call(separator) !== '[object RegExp]') {\n        return nativeSplit.call(str, separator, limit)\n    }\n    var output = [],\n        flags = (separator.ignoreCase ? 'i' : '') +\n                (separator.multiline  ? 'm' : '') +\n                (separator.extended   ? 'x' : '') +\n                (separator.sticky     ? 'y' : ''),\n        lastLastIndex = 0,\n        separator2, match, lastIndex, lastLength\n    separator = new RegExp(separator.source, flags + 'g')\n    str += ''\n    if (!compliantExecNpcg) {\n        separator2 = new RegExp('^' + separator.source + '$(?!\\\\s)', flags)\n    }\n    limit = limit === undefined ? -1 >>> 0 : limit >>> 0\n    while (match = separator.exec(str)) {\n        lastIndex = match.index + match[0].length\n        if (lastIndex > lastLastIndex) {\n            output.push(str.slice(lastLastIndex, match.index))\n            if (!compliantExecNpcg && match.length > 1) {\n                match[0].replace(separator2, function () {\n                    for (var i = 1; i < arguments.length - 2; i++) {\n                        if (arguments[i] === undefined) {\n                            match[i] = undefined\n                        }\n                    }\n                })\n            }\n            if (match.length > 1 && match.index < str.length) {\n                Array.prototype.push.apply(output, match.slice(1))\n            }\n            lastLength = match[0].length\n            lastLastIndex = lastIndex\n            if (output.length >= limit) {\n                break\n            }\n        }\n        if (separator.lastIndex === match.index) {\n            separator.lastIndex++\n        }\n    }\n    if (lastLastIndex === str.length) {\n        if (lastLength || !separator.test('')) {\n            output.push('')\n        }\n    } else {\n        output.push(str.slice(lastLastIndex))\n    }\n    return output.length > limit ? output.slice(0, limit) : output\n};\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/picker.date.js":"/*!\n * Date picker for pickadate.js v3.5.6\n * http://amsul.github.io/pickadate.js/date.htm\n */\n\n(function ( factory ) {\n\n    // AMD.\n    if ( typeof define == 'function' && define.amd )\n        define( ['picker', 'jquery'], factory )\n\n    // Node.js/browserify.\n    else if ( typeof exports == 'object' )\n        module.exports = factory( require('./picker.js'), require('jquery') )\n\n    // Browser globals.\n    else factory( Picker, jQuery )\n\n}(function( Picker, $ ) {\n\n\n/**\n * Globals and constants\n */\nvar DAYS_IN_WEEK = 7,\n    WEEKS_IN_CALENDAR = 6,\n    _ = Picker._\n\n\n\n/**\n * The date picker constructor\n */\nfunction DatePicker( picker, settings ) {\n\n    var calendar = this,\n        element = picker.$node[ 0 ],\n        elementValue = element.value,\n        elementDataValue = picker.$node.data( 'value' ),\n        valueString = elementDataValue || elementValue,\n        formatString = elementDataValue ? settings.formatSubmit : settings.format,\n        isRTL = function() {\n\n            return element.currentStyle ?\n\n                // For IE.\n                element.currentStyle.direction == 'rtl' :\n\n                // For normal browsers.\n                getComputedStyle( picker.$root[0] ).direction == 'rtl'\n        }\n\n    calendar.settings = settings\n    calendar.$node = picker.$node\n\n    // The queue of methods that will be used to build item objects.\n    calendar.queue = {\n        min: 'measure create',\n        max: 'measure create',\n        now: 'now create',\n        select: 'parse create validate',\n        highlight: 'parse navigate create validate',\n        view: 'parse create validate viewset',\n        disable: 'deactivate',\n        enable: 'activate'\n    }\n\n    // The component's item object.\n    calendar.item = {}\n\n    calendar.item.clear = null\n    calendar.item.disable = ( settings.disable || [] ).slice( 0 )\n    calendar.item.enable = -(function( collectionDisabled ) {\n        return collectionDisabled[ 0 ] === true ? collectionDisabled.shift() : -1\n    })( calendar.item.disable )\n\n    calendar.\n        set( 'min', settings.min ).\n        set( 'max', settings.max ).\n        set( 'now' )\n\n    // When there’s a value, set the `select`, which in turn\n    // also sets the `highlight` and `view`.\n    if ( valueString ) {\n        calendar.set( 'select', valueString, {\n            format: formatString,\n            defaultValue: true\n        })\n    }\n\n    // If there’s no value, default to highlighting “today”.\n    else {\n        calendar.\n            set( 'select', null ).\n            set( 'highlight', calendar.item.now )\n    }\n\n\n    // The keycode to movement mapping.\n    calendar.key = {\n        40: 7, // Down\n        38: -7, // Up\n        39: function() { return isRTL() ? -1 : 1 }, // Right\n        37: function() { return isRTL() ? 1 : -1 }, // Left\n        go: function( timeChange ) {\n            var highlightedObject = calendar.item.highlight,\n                targetDate = new Date( highlightedObject.year, highlightedObject.month, highlightedObject.date + timeChange )\n            calendar.set(\n                'highlight',\n                targetDate,\n                { interval: timeChange }\n            )\n            this.render()\n        }\n    }\n\n\n    // Bind some picker events.\n    picker.\n        on( 'render', function() {\n            picker.$root.find( '.' + settings.klass.selectMonth ).on( 'change', function() {\n                var value = this.value\n                if ( value ) {\n                    picker.set( 'highlight', [ picker.get( 'view' ).year, value, picker.get( 'highlight' ).date ] )\n                    picker.$root.find( '.' + settings.klass.selectMonth ).trigger( 'focus' )\n                }\n            })\n            picker.$root.find( '.' + settings.klass.selectYear ).on( 'change', function() {\n                var value = this.value\n                if ( value ) {\n                    picker.set( 'highlight', [ value, picker.get( 'view' ).month, picker.get( 'highlight' ).date ] )\n                    picker.$root.find( '.' + settings.klass.selectYear ).trigger( 'focus' )\n                }\n            })\n        }, 1 ).\n        on( 'open', function() {\n            var includeToday = ''\n            if ( calendar.disabled( calendar.get('now') ) ) {\n                includeToday = ':not(.' + settings.klass.buttonToday + ')'\n            }\n            picker.$root.find( 'button' + includeToday + ', select' ).attr( 'disabled', false )\n        }, 1 ).\n        on( 'close', function() {\n            picker.$root.find( 'button, select' ).attr( 'disabled', true )\n        }, 1 )\n\n} //DatePicker\n\n\n/**\n * Set a datepicker item object.\n */\nDatePicker.prototype.set = function( type, value, options ) {\n\n    var calendar = this,\n        calendarItem = calendar.item\n\n    // If the value is `null` just set it immediately.\n    if ( value === null ) {\n        if ( type == 'clear' ) type = 'select'\n        calendarItem[ type ] = value\n        return calendar\n    }\n\n    // Otherwise go through the queue of methods, and invoke the functions.\n    // Update this as the time unit, and set the final value as this item.\n    // * In the case of `enable`, keep the queue but set `disable` instead.\n    //   And in the case of `flip`, keep the queue but set `enable` instead.\n    calendarItem[ ( type == 'enable' ? 'disable' : type == 'flip' ? 'enable' : type ) ] = calendar.queue[ type ].split( ' ' ).map( function( method ) {\n        value = calendar[ method ]( type, value, options )\n        return value\n    }).pop()\n\n    // Check if we need to cascade through more updates.\n    if ( type == 'select' ) {\n        calendar.set( 'highlight', calendarItem.select, options )\n    }\n    else if ( type == 'highlight' ) {\n        calendar.set( 'view', calendarItem.highlight, options )\n    }\n    else if ( type.match( /^(flip|min|max|disable|enable)$/ ) ) {\n        if ( calendarItem.select && calendar.disabled( calendarItem.select ) ) {\n            calendar.set( 'select', calendarItem.select, options )\n        }\n        if ( calendarItem.highlight && calendar.disabled( calendarItem.highlight ) ) {\n            calendar.set( 'highlight', calendarItem.highlight, options )\n        }\n    }\n\n    return calendar\n} //DatePicker.prototype.set\n\n\n/**\n * Get a datepicker item object.\n */\nDatePicker.prototype.get = function( type ) {\n    return this.item[ type ]\n} //DatePicker.prototype.get\n\n\n/**\n * Create a picker date object.\n */\nDatePicker.prototype.create = function( type, value, options ) {\n\n    var isInfiniteValue,\n        calendar = this\n\n    // If there’s no value, use the type as the value.\n    value = value === undefined ? type : value\n\n\n    // If it’s infinity, update the value.\n    if ( value == -Infinity || value == Infinity ) {\n        isInfiniteValue = value\n    }\n\n    // If it’s an object, use the native date object.\n    else if ( $.isPlainObject( value ) && _.isInteger( value.pick ) ) {\n        value = value.obj\n    }\n\n    // If it’s an array, convert it into a date and make sure\n    // that it’s a valid date – otherwise default to today.\n    else if ( $.isArray( value ) ) {\n        value = new Date( value[ 0 ], value[ 1 ], value[ 2 ] )\n        value = _.isDate( value ) ? value : calendar.create().obj\n    }\n\n    // If it’s a number or date object, make a normalized date.\n    else if ( _.isInteger( value ) || _.isDate( value ) ) {\n        value = calendar.normalize( new Date( value ), options )\n    }\n\n    // If it’s a literal true or any other case, set it to now.\n    else /*if ( value === true )*/ {\n        value = calendar.now( type, value, options )\n    }\n\n    // Return the compiled object.\n    return {\n        year: isInfiniteValue || value.getFullYear(),\n        month: isInfiniteValue || value.getMonth(),\n        date: isInfiniteValue || value.getDate(),\n        day: isInfiniteValue || value.getDay(),\n        obj: isInfiniteValue || value,\n        pick: isInfiniteValue || value.getTime()\n    }\n} //DatePicker.prototype.create\n\n\n/**\n * Create a range limit object using an array, date object,\n * literal “true”, or integer relative to another time.\n */\nDatePicker.prototype.createRange = function( from, to ) {\n\n    var calendar = this,\n        createDate = function( date ) {\n            if ( date === true || $.isArray( date ) || _.isDate( date ) ) {\n                return calendar.create( date )\n            }\n            return date\n        }\n\n    // Create objects if possible.\n    if ( !_.isInteger( from ) ) {\n        from = createDate( from )\n    }\n    if ( !_.isInteger( to ) ) {\n        to = createDate( to )\n    }\n\n    // Create relative dates.\n    if ( _.isInteger( from ) && $.isPlainObject( to ) ) {\n        from = [ to.year, to.month, to.date + from ];\n    }\n    else if ( _.isInteger( to ) && $.isPlainObject( from ) ) {\n        to = [ from.year, from.month, from.date + to ];\n    }\n\n    return {\n        from: createDate( from ),\n        to: createDate( to )\n    }\n} //DatePicker.prototype.createRange\n\n\n/**\n * Check if a date unit falls within a date range object.\n */\nDatePicker.prototype.withinRange = function( range, dateUnit ) {\n    range = this.createRange(range.from, range.to)\n    return dateUnit.pick >= range.from.pick && dateUnit.pick <= range.to.pick\n}\n\n\n/**\n * Check if two date range objects overlap.\n */\nDatePicker.prototype.overlapRanges = function( one, two ) {\n\n    var calendar = this\n\n    // Convert the ranges into comparable dates.\n    one = calendar.createRange( one.from, one.to )\n    two = calendar.createRange( two.from, two.to )\n\n    return calendar.withinRange( one, two.from ) || calendar.withinRange( one, two.to ) ||\n        calendar.withinRange( two, one.from ) || calendar.withinRange( two, one.to )\n}\n\n\n/**\n * Get the date today.\n */\nDatePicker.prototype.now = function( type, value, options ) {\n    value = new Date()\n    if ( options && options.rel ) {\n        value.setDate( value.getDate() + options.rel )\n    }\n    return this.normalize( value, options )\n}\n\n\n/**\n * Navigate to next/prev month.\n */\nDatePicker.prototype.navigate = function( type, value, options ) {\n\n    var targetDateObject,\n        targetYear,\n        targetMonth,\n        targetDate,\n        isTargetArray = $.isArray( value ),\n        isTargetObject = $.isPlainObject( value ),\n        viewsetObject = this.item.view/*,\n        safety = 100*/\n\n\n    if ( isTargetArray || isTargetObject ) {\n\n        if ( isTargetObject ) {\n            targetYear = value.year\n            targetMonth = value.month\n            targetDate = value.date\n        }\n        else {\n            targetYear = +value[0]\n            targetMonth = +value[1]\n            targetDate = +value[2]\n        }\n\n        // If we’re navigating months but the view is in a different\n        // month, navigate to the view’s year and month.\n        if ( options && options.nav && viewsetObject && viewsetObject.month !== targetMonth ) {\n            targetYear = viewsetObject.year\n            targetMonth = viewsetObject.month\n        }\n\n        // Figure out the expected target year and month.\n        targetDateObject = new Date( targetYear, targetMonth + ( options && options.nav ? options.nav : 0 ), 1 )\n        targetYear = targetDateObject.getFullYear()\n        targetMonth = targetDateObject.getMonth()\n\n        // If the month we’re going to doesn’t have enough days,\n        // keep decreasing the date until we reach the month’s last date.\n        while ( /*safety &&*/ new Date( targetYear, targetMonth, targetDate ).getMonth() !== targetMonth ) {\n            targetDate -= 1\n            /*safety -= 1\n            if ( !safety ) {\n                throw 'Fell into an infinite loop while navigating to ' + new Date( targetYear, targetMonth, targetDate ) + '.'\n            }*/\n        }\n\n        value = [ targetYear, targetMonth, targetDate ]\n    }\n\n    return value\n} //DatePicker.prototype.navigate\n\n\n/**\n * Normalize a date by setting the hours to midnight.\n */\nDatePicker.prototype.normalize = function( value/*, options*/ ) {\n    value.setHours( 0, 0, 0, 0 )\n    return value\n}\n\n\n/**\n * Measure the range of dates.\n */\nDatePicker.prototype.measure = function( type, value/*, options*/ ) {\n\n    var calendar = this\n\n    // If it’s anything false-y, remove the limits.\n    if ( !value ) {\n        value = type == 'min' ? -Infinity : Infinity\n    }\n\n    // If it’s a string, parse it.\n    else if ( typeof value == 'string' ) {\n        value = calendar.parse( type, value )\n    }\n\n    // If it's an integer, get a date relative to today.\n    else if ( _.isInteger( value ) ) {\n        value = calendar.now( type, value, { rel: value } )\n    }\n\n    return value\n} ///DatePicker.prototype.measure\n\n\n/**\n * Create a viewset object based on navigation.\n */\nDatePicker.prototype.viewset = function( type, dateObject/*, options*/ ) {\n    return this.create([ dateObject.year, dateObject.month, 1 ])\n}\n\n\n/**\n * Validate a date as enabled and shift if needed.\n */\nDatePicker.prototype.validate = function( type, dateObject, options ) {\n\n    var calendar = this,\n\n        // Keep a reference to the original date.\n        originalDateObject = dateObject,\n\n        // Make sure we have an interval.\n        interval = options && options.interval ? options.interval : 1,\n\n        // Check if the calendar enabled dates are inverted.\n        isFlippedBase = calendar.item.enable === -1,\n\n        // Check if we have any enabled dates after/before now.\n        hasEnabledBeforeTarget, hasEnabledAfterTarget,\n\n        // The min & max limits.\n        minLimitObject = calendar.item.min,\n        maxLimitObject = calendar.item.max,\n\n        // Check if we’ve reached the limit during shifting.\n        reachedMin, reachedMax,\n\n        // Check if the calendar is inverted and at least one weekday is enabled.\n        hasEnabledWeekdays = isFlippedBase && calendar.item.disable.filter( function( value ) {\n\n            // If there’s a date, check where it is relative to the target.\n            if ( $.isArray( value ) ) {\n                var dateTime = calendar.create( value ).pick\n                if ( dateTime < dateObject.pick ) hasEnabledBeforeTarget = true\n                else if ( dateTime > dateObject.pick ) hasEnabledAfterTarget = true\n            }\n\n            // Return only integers for enabled weekdays.\n            return _.isInteger( value )\n        }).length/*,\n\n        safety = 100*/\n\n\n\n    // Cases to validate for:\n    // [1] Not inverted and date disabled.\n    // [2] Inverted and some dates enabled.\n    // [3] Not inverted and out of range.\n    //\n    // Cases to **not** validate for:\n    // • Navigating months.\n    // • Not inverted and date enabled.\n    // • Inverted and all dates disabled.\n    // • ..and anything else.\n    if ( !options || (!options.nav && !options.defaultValue) ) if (\n        /* 1 */ ( !isFlippedBase && calendar.disabled( dateObject ) ) ||\n        /* 2 */ ( isFlippedBase && calendar.disabled( dateObject ) && ( hasEnabledWeekdays || hasEnabledBeforeTarget || hasEnabledAfterTarget ) ) ||\n        /* 3 */ ( !isFlippedBase && (dateObject.pick <= minLimitObject.pick || dateObject.pick >= maxLimitObject.pick) )\n    ) {\n\n\n        // When inverted, flip the direction if there aren’t any enabled weekdays\n        // and there are no enabled dates in the direction of the interval.\n        if ( isFlippedBase && !hasEnabledWeekdays && ( ( !hasEnabledAfterTarget && interval > 0 ) || ( !hasEnabledBeforeTarget && interval < 0 ) ) ) {\n            interval *= -1\n        }\n\n\n        // Keep looping until we reach an enabled date.\n        while ( /*safety &&*/ calendar.disabled( dateObject ) ) {\n\n            /*safety -= 1\n            if ( !safety ) {\n                throw 'Fell into an infinite loop while validating ' + dateObject.obj + '.'\n            }*/\n\n\n            // If we’ve looped into the next/prev month with a large interval, return to the original date and flatten the interval.\n            if ( Math.abs( interval ) > 1 && ( dateObject.month < originalDateObject.month || dateObject.month > originalDateObject.month ) ) {\n                dateObject = originalDateObject\n                interval = interval > 0 ? 1 : -1\n            }\n\n\n            // If we’ve reached the min/max limit, reverse the direction, flatten the interval and set it to the limit.\n            if ( dateObject.pick <= minLimitObject.pick ) {\n                reachedMin = true\n                interval = 1\n                dateObject = calendar.create([\n                    minLimitObject.year,\n                    minLimitObject.month,\n                    minLimitObject.date + (dateObject.pick === minLimitObject.pick ? 0 : -1)\n                ])\n            }\n            else if ( dateObject.pick >= maxLimitObject.pick ) {\n                reachedMax = true\n                interval = -1\n                dateObject = calendar.create([\n                    maxLimitObject.year,\n                    maxLimitObject.month,\n                    maxLimitObject.date + (dateObject.pick === maxLimitObject.pick ? 0 : 1)\n                ])\n            }\n\n\n            // If we’ve reached both limits, just break out of the loop.\n            if ( reachedMin && reachedMax ) {\n                break\n            }\n\n\n            // Finally, create the shifted date using the interval and keep looping.\n            dateObject = calendar.create([ dateObject.year, dateObject.month, dateObject.date + interval ])\n        }\n\n    } //endif\n\n\n    // Return the date object settled on.\n    return dateObject\n} //DatePicker.prototype.validate\n\n\n/**\n * Check if a date is disabled.\n */\nDatePicker.prototype.disabled = function( dateToVerify ) {\n\n    var\n        calendar = this,\n\n        // Filter through the disabled dates to check if this is one.\n        isDisabledMatch = calendar.item.disable.filter( function( dateToDisable ) {\n\n            // If the date is a number, match the weekday with 0index and `firstDay` check.\n            if ( _.isInteger( dateToDisable ) ) {\n                return dateToVerify.day === ( calendar.settings.firstDay ? dateToDisable : dateToDisable - 1 ) % 7\n            }\n\n            // If it’s an array or a native JS date, create and match the exact date.\n            if ( $.isArray( dateToDisable ) || _.isDate( dateToDisable ) ) {\n                return dateToVerify.pick === calendar.create( dateToDisable ).pick\n            }\n\n            // If it’s an object, match a date within the “from” and “to” range.\n            if ( $.isPlainObject( dateToDisable ) ) {\n                return calendar.withinRange( dateToDisable, dateToVerify )\n            }\n        })\n\n    // If this date matches a disabled date, confirm it’s not inverted.\n    isDisabledMatch = isDisabledMatch.length && !isDisabledMatch.filter(function( dateToDisable ) {\n        return $.isArray( dateToDisable ) && dateToDisable[3] == 'inverted' ||\n            $.isPlainObject( dateToDisable ) && dateToDisable.inverted\n    }).length\n\n    // Check the calendar “enabled” flag and respectively flip the\n    // disabled state. Then also check if it’s beyond the min/max limits.\n    return calendar.item.enable === -1 ? !isDisabledMatch : isDisabledMatch ||\n        dateToVerify.pick < calendar.item.min.pick ||\n        dateToVerify.pick > calendar.item.max.pick\n\n} //DatePicker.prototype.disabled\n\n\n/**\n * Parse a string into a usable type.\n */\nDatePicker.prototype.parse = function( type, value, options ) {\n\n    var calendar = this,\n        parsingObject = {}\n\n    // If it’s already parsed, we’re good.\n    if ( !value || typeof value != 'string' ) {\n        return value\n    }\n\n    // We need a `.format` to parse the value with.\n    if ( !( options && options.format ) ) {\n        options = options || {}\n        options.format = calendar.settings.format\n    }\n\n    // Convert the format into an array and then map through it.\n    calendar.formats.toArray( options.format ).map( function( label ) {\n\n        var\n            // Grab the formatting label.\n            formattingLabel = calendar.formats[ label ],\n\n            // The format length is from the formatting label function or the\n            // label length without the escaping exclamation (!) mark.\n            formatLength = formattingLabel ? _.trigger( formattingLabel, calendar, [ value, parsingObject ] ) : label.replace( /^!/, '' ).length\n\n        // If there's a format label, split the value up to the format length.\n        // Then add it to the parsing object with appropriate label.\n        if ( formattingLabel ) {\n            parsingObject[ label ] = value.substr( 0, formatLength )\n        }\n\n        // Update the value as the substring from format length to end.\n        value = value.substr( formatLength )\n    })\n\n    // Compensate for month 0index.\n    return [\n        parsingObject.yyyy || parsingObject.yy,\n        +( parsingObject.mm || parsingObject.m ) - 1,\n        parsingObject.dd || parsingObject.d\n    ]\n} //DatePicker.prototype.parse\n\n\n/**\n * Various formats to display the object in.\n */\nDatePicker.prototype.formats = (function() {\n\n    // Return the length of the first word in a collection.\n    function getWordLengthFromCollection( string, collection, dateObject ) {\n\n        // Grab the first word from the string.\n        // Regex pattern from http://stackoverflow.com/q/150033\n        var word = string.match( /[^\\x00-\\x7F]+|\\w+/ )[ 0 ]\n\n        // If there's no month index, add it to the date object\n        if ( !dateObject.mm && !dateObject.m ) {\n            dateObject.m = collection.indexOf( word ) + 1\n        }\n\n        // Return the length of the word.\n        return word.length\n    }\n\n    // Get the length of the first word in a string.\n    function getFirstWordLength( string ) {\n        return string.match( /\\w+/ )[ 0 ].length\n    }\n\n    return {\n\n        d: function( string, dateObject ) {\n\n            // If there's string, then get the digits length.\n            // Otherwise return the selected date.\n            return string ? _.digits( string ) : dateObject.date\n        },\n        dd: function( string, dateObject ) {\n\n            // If there's a string, then the length is always 2.\n            // Otherwise return the selected date with a leading zero.\n            return string ? 2 : _.lead( dateObject.date )\n        },\n        ddd: function( string, dateObject ) {\n\n            // If there's a string, then get the length of the first word.\n            // Otherwise return the short selected weekday.\n            return string ? getFirstWordLength( string ) : this.settings.weekdaysShort[ dateObject.day ]\n        },\n        dddd: function( string, dateObject ) {\n\n            // If there's a string, then get the length of the first word.\n            // Otherwise return the full selected weekday.\n            return string ? getFirstWordLength( string ) : this.settings.weekdaysFull[ dateObject.day ]\n        },\n        m: function( string, dateObject ) {\n\n            // If there's a string, then get the length of the digits\n            // Otherwise return the selected month with 0index compensation.\n            return string ? _.digits( string ) : dateObject.month + 1\n        },\n        mm: function( string, dateObject ) {\n\n            // If there's a string, then the length is always 2.\n            // Otherwise return the selected month with 0index and leading zero.\n            return string ? 2 : _.lead( dateObject.month + 1 )\n        },\n        mmm: function( string, dateObject ) {\n\n            var collection = this.settings.monthsShort\n\n            // If there's a string, get length of the relevant month from the short\n            // months collection. Otherwise return the selected month from that collection.\n            return string ? getWordLengthFromCollection( string, collection, dateObject ) : collection[ dateObject.month ]\n        },\n        mmmm: function( string, dateObject ) {\n\n            var collection = this.settings.monthsFull\n\n            // If there's a string, get length of the relevant month from the full\n            // months collection. Otherwise return the selected month from that collection.\n            return string ? getWordLengthFromCollection( string, collection, dateObject ) : collection[ dateObject.month ]\n        },\n        yy: function( string, dateObject ) {\n\n            // If there's a string, then the length is always 2.\n            // Otherwise return the selected year by slicing out the first 2 digits.\n            return string ? 2 : ( '' + dateObject.year ).slice( 2 )\n        },\n        yyyy: function( string, dateObject ) {\n\n            // If there's a string, then the length is always 4.\n            // Otherwise return the selected year.\n            return string ? 4 : dateObject.year\n        },\n\n        // Create an array by splitting the formatting string passed.\n        toArray: function( formatString ) { return formatString.split( /(d{1,4}|m{1,4}|y{4}|yy|!.)/g ) },\n\n        // Format an object into a string using the formatting options.\n        toString: function ( formatString, itemObject ) {\n            var calendar = this\n            return calendar.formats.toArray( formatString ).map( function( label ) {\n                return _.trigger( calendar.formats[ label ], calendar, [ 0, itemObject ] ) || label.replace( /^!/, '' )\n            }).join( '' )\n        }\n    }\n})() //DatePicker.prototype.formats\n\n\n\n\n/**\n * Check if two date units are the exact.\n */\nDatePicker.prototype.isDateExact = function( one, two ) {\n\n    var calendar = this\n\n    // When we’re working with weekdays, do a direct comparison.\n    if (\n        ( _.isInteger( one ) && _.isInteger( two ) ) ||\n        ( typeof one == 'boolean' && typeof two == 'boolean' )\n     ) {\n        return one === two\n    }\n\n    // When we’re working with date representations, compare the “pick” value.\n    if (\n        ( _.isDate( one ) || $.isArray( one ) ) &&\n        ( _.isDate( two ) || $.isArray( two ) )\n    ) {\n        return calendar.create( one ).pick === calendar.create( two ).pick\n    }\n\n    // When we’re working with range objects, compare the “from” and “to”.\n    if ( $.isPlainObject( one ) && $.isPlainObject( two ) ) {\n        return calendar.isDateExact( one.from, two.from ) && calendar.isDateExact( one.to, two.to )\n    }\n\n    return false\n}\n\n\n/**\n * Check if two date units overlap.\n */\nDatePicker.prototype.isDateOverlap = function( one, two ) {\n\n    var calendar = this,\n        firstDay = calendar.settings.firstDay ? 1 : 0\n\n    // When we’re working with a weekday index, compare the days.\n    if ( _.isInteger( one ) && ( _.isDate( two ) || $.isArray( two ) ) ) {\n        one = one % 7 + firstDay\n        return one === calendar.create( two ).day + 1\n    }\n    if ( _.isInteger( two ) && ( _.isDate( one ) || $.isArray( one ) ) ) {\n        two = two % 7 + firstDay\n        return two === calendar.create( one ).day + 1\n    }\n\n    // When we’re working with range objects, check if the ranges overlap.\n    if ( $.isPlainObject( one ) && $.isPlainObject( two ) ) {\n        return calendar.overlapRanges( one, two )\n    }\n\n    return false\n}\n\n\n/**\n * Flip the “enabled” state.\n */\nDatePicker.prototype.flipEnable = function(val) {\n    var itemObject = this.item\n    itemObject.enable = val || (itemObject.enable == -1 ? 1 : -1)\n}\n\n\n/**\n * Mark a collection of dates as “disabled”.\n */\nDatePicker.prototype.deactivate = function( type, datesToDisable ) {\n\n    var calendar = this,\n        disabledItems = calendar.item.disable.slice(0)\n\n\n    // If we’re flipping, that’s all we need to do.\n    if ( datesToDisable == 'flip' ) {\n        calendar.flipEnable()\n    }\n\n    else if ( datesToDisable === false ) {\n        calendar.flipEnable(1)\n        disabledItems = []\n    }\n\n    else if ( datesToDisable === true ) {\n        calendar.flipEnable(-1)\n        disabledItems = []\n    }\n\n    // Otherwise go through the dates to disable.\n    else {\n\n        datesToDisable.map(function( unitToDisable ) {\n\n            var matchFound\n\n            // When we have disabled items, check for matches.\n            // If something is matched, immediately break out.\n            for ( var index = 0; index < disabledItems.length; index += 1 ) {\n                if ( calendar.isDateExact( unitToDisable, disabledItems[index] ) ) {\n                    matchFound = true\n                    break\n                }\n            }\n\n            // If nothing was found, add the validated unit to the collection.\n            if ( !matchFound ) {\n                if (\n                    _.isInteger( unitToDisable ) ||\n                    _.isDate( unitToDisable ) ||\n                    $.isArray( unitToDisable ) ||\n                    ( $.isPlainObject( unitToDisable ) && unitToDisable.from && unitToDisable.to )\n                ) {\n                    disabledItems.push( unitToDisable )\n                }\n            }\n        })\n    }\n\n    // Return the updated collection.\n    return disabledItems\n} //DatePicker.prototype.deactivate\n\n\n/**\n * Mark a collection of dates as “enabled”.\n */\nDatePicker.prototype.activate = function( type, datesToEnable ) {\n\n    var calendar = this,\n        disabledItems = calendar.item.disable,\n        disabledItemsCount = disabledItems.length\n\n    // If we’re flipping, that’s all we need to do.\n    if ( datesToEnable == 'flip' ) {\n        calendar.flipEnable()\n    }\n\n    else if ( datesToEnable === true ) {\n        calendar.flipEnable(1)\n        disabledItems = []\n    }\n\n    else if ( datesToEnable === false ) {\n        calendar.flipEnable(-1)\n        disabledItems = []\n    }\n\n    // Otherwise go through the disabled dates.\n    else {\n\n        datesToEnable.map(function( unitToEnable ) {\n\n            var matchFound,\n                disabledUnit,\n                index,\n                isExactRange\n\n            // Go through the disabled items and try to find a match.\n            for ( index = 0; index < disabledItemsCount; index += 1 ) {\n\n                disabledUnit = disabledItems[index]\n\n                // When an exact match is found, remove it from the collection.\n                if ( calendar.isDateExact( disabledUnit, unitToEnable ) ) {\n                    matchFound = disabledItems[index] = null\n                    isExactRange = true\n                    break\n                }\n\n                // When an overlapped match is found, add the “inverted” state to it.\n                else if ( calendar.isDateOverlap( disabledUnit, unitToEnable ) ) {\n                    if ( $.isPlainObject( unitToEnable ) ) {\n                        unitToEnable.inverted = true\n                        matchFound = unitToEnable\n                    }\n                    else if ( $.isArray( unitToEnable ) ) {\n                        matchFound = unitToEnable\n                        if ( !matchFound[3] ) matchFound.push( 'inverted' )\n                    }\n                    else if ( _.isDate( unitToEnable ) ) {\n                        matchFound = [ unitToEnable.getFullYear(), unitToEnable.getMonth(), unitToEnable.getDate(), 'inverted' ]\n                    }\n                    break\n                }\n            }\n\n            // If a match was found, remove a previous duplicate entry.\n            if ( matchFound ) for ( index = 0; index < disabledItemsCount; index += 1 ) {\n                if ( calendar.isDateExact( disabledItems[index], unitToEnable ) ) {\n                    disabledItems[index] = null\n                    break\n                }\n            }\n\n            // In the event that we’re dealing with an exact range of dates,\n            // make sure there are no “inverted” dates because of it.\n            if ( isExactRange ) for ( index = 0; index < disabledItemsCount; index += 1 ) {\n                if ( calendar.isDateOverlap( disabledItems[index], unitToEnable ) ) {\n                    disabledItems[index] = null\n                    break\n                }\n            }\n\n            // If something is still matched, add it into the collection.\n            if ( matchFound ) {\n                disabledItems.push( matchFound )\n            }\n        })\n    }\n\n    // Return the updated collection.\n    return disabledItems.filter(function( val ) { return val != null })\n} //DatePicker.prototype.activate\n\n\n/**\n * Create a string for the nodes in the picker.\n */\nDatePicker.prototype.nodes = function( isOpen ) {\n\n    var\n        calendar = this,\n        settings = calendar.settings,\n        calendarItem = calendar.item,\n        nowObject = calendarItem.now,\n        selectedObject = calendarItem.select,\n        highlightedObject = calendarItem.highlight,\n        viewsetObject = calendarItem.view,\n        disabledCollection = calendarItem.disable,\n        minLimitObject = calendarItem.min,\n        maxLimitObject = calendarItem.max,\n\n\n        // Create the calendar table head using a copy of weekday labels collection.\n        // * We do a copy so we don't mutate the original array.\n        tableHead = (function( collection, fullCollection ) {\n\n            // If the first day should be Monday, move Sunday to the end.\n            if ( settings.firstDay ) {\n                collection.push( collection.shift() )\n                fullCollection.push( fullCollection.shift() )\n            }\n\n            // Create and return the table head group.\n            return _.node(\n                'thead',\n                _.node(\n                    'tr',\n                    _.group({\n                        min: 0,\n                        max: DAYS_IN_WEEK - 1,\n                        i: 1,\n                        node: 'th',\n                        item: function( counter ) {\n                            return [\n                                collection[ counter ],\n                                settings.klass.weekdays,\n                                'scope=col title=\"' + fullCollection[ counter ] + '\"'\n                            ]\n                        }\n                    })\n                )\n            ) //endreturn\n        })( ( settings.showWeekdaysFull ? settings.weekdaysFull : settings.weekdaysShort ).slice( 0 ), settings.weekdaysFull.slice( 0 ) ), //tableHead\n\n\n        // Create the nav for next/prev month.\n        createMonthNav = function( next ) {\n\n            // Otherwise, return the created month tag.\n            return _.node(\n                'div',\n                ' ',\n                settings.klass[ 'nav' + ( next ? 'Next' : 'Prev' ) ] + (\n\n                    // If the focused month is outside the range, disabled the button.\n                    ( next && viewsetObject.year >= maxLimitObject.year && viewsetObject.month >= maxLimitObject.month ) ||\n                    ( !next && viewsetObject.year <= minLimitObject.year && viewsetObject.month <= minLimitObject.month ) ?\n                    ' ' + settings.klass.navDisabled : ''\n                ),\n                'data-nav=' + ( next || -1 ) + ' ' +\n                _.ariaAttr({\n                    role: 'button',\n                    controls: calendar.$node[0].id + '_table'\n                }) + ' ' +\n                'title=\"' + (next ? settings.labelMonthNext : settings.labelMonthPrev ) + '\"'\n            ) //endreturn\n        }, //createMonthNav\n\n\n        // Create the month label.\n        createMonthLabel = function() {\n\n            var monthsCollection = settings.showMonthsShort ? settings.monthsShort : settings.monthsFull\n\n            // If there are months to select, add a dropdown menu.\n            if ( settings.selectMonths ) {\n\n                return _.node( 'select',\n                    _.group({\n                        min: 0,\n                        max: 11,\n                        i: 1,\n                        node: 'option',\n                        item: function( loopedMonth ) {\n\n                            return [\n\n                                // The looped month and no classes.\n                                monthsCollection[ loopedMonth ], 0,\n\n                                // Set the value and selected index.\n                                'value=' + loopedMonth +\n                                ( viewsetObject.month == loopedMonth ? ' selected' : '' ) +\n                                (\n                                    (\n                                        ( viewsetObject.year == minLimitObject.year && loopedMonth < minLimitObject.month ) ||\n                                        ( viewsetObject.year == maxLimitObject.year && loopedMonth > maxLimitObject.month )\n                                    ) ?\n                                    ' disabled' : ''\n                                )\n                            ]\n                        }\n                    }),\n                    settings.klass.selectMonth,\n                    ( isOpen ? '' : 'disabled' ) + ' ' +\n                    _.ariaAttr({ controls: calendar.$node[0].id + '_table' }) + ' ' +\n                    'title=\"' + settings.labelMonthSelect + '\"'\n                )\n            }\n\n            // If there's a need for a month selector\n            return _.node( 'div', monthsCollection[ viewsetObject.month ], settings.klass.month )\n        }, //createMonthLabel\n\n\n        // Create the year label.\n        createYearLabel = function() {\n\n            var focusedYear = viewsetObject.year,\n\n            // If years selector is set to a literal \"true\", set it to 5. Otherwise\n            // divide in half to get half before and half after focused year.\n            numberYears = settings.selectYears === true ? 5 : ~~( settings.selectYears / 2 )\n\n            // If there are years to select, add a dropdown menu.\n            if ( numberYears ) {\n\n                var\n                    minYear = minLimitObject.year,\n                    maxYear = maxLimitObject.year,\n                    lowestYear = focusedYear - numberYears,\n                    highestYear = focusedYear + numberYears\n\n                // If the min year is greater than the lowest year, increase the highest year\n                // by the difference and set the lowest year to the min year.\n                if ( minYear > lowestYear ) {\n                    highestYear += minYear - lowestYear\n                    lowestYear = minYear\n                }\n\n                // If the max year is less than the highest year, decrease the lowest year\n                // by the lower of the two: available and needed years. Then set the\n                // highest year to the max year.\n                if ( maxYear < highestYear ) {\n\n                    var availableYears = lowestYear - minYear,\n                        neededYears = highestYear - maxYear\n\n                    lowestYear -= availableYears > neededYears ? neededYears : availableYears\n                    highestYear = maxYear\n                }\n\n                return _.node( 'select',\n                    _.group({\n                        min: lowestYear,\n                        max: highestYear,\n                        i: 1,\n                        node: 'option',\n                        item: function( loopedYear ) {\n                            return [\n\n                                // The looped year and no classes.\n                                loopedYear, 0,\n\n                                // Set the value and selected index.\n                                'value=' + loopedYear + ( focusedYear == loopedYear ? ' selected' : '' )\n                            ]\n                        }\n                    }),\n                    settings.klass.selectYear,\n                    ( isOpen ? '' : 'disabled' ) + ' ' + _.ariaAttr({ controls: calendar.$node[0].id + '_table' }) + ' ' +\n                    'title=\"' + settings.labelYearSelect + '\"'\n                )\n            }\n\n            // Otherwise just return the year focused\n            return _.node( 'div', focusedYear, settings.klass.year )\n        } //createYearLabel\n\n\n    // Create and return the entire calendar.\n    return _.node(\n        'div',\n        ( settings.selectYears ? createYearLabel() + createMonthLabel() : createMonthLabel() + createYearLabel() ) +\n        createMonthNav() + createMonthNav( 1 ),\n        settings.klass.header\n    ) + _.node(\n        'table',\n        tableHead +\n        _.node(\n            'tbody',\n            _.group({\n                min: 0,\n                max: WEEKS_IN_CALENDAR - 1,\n                i: 1,\n                node: 'tr',\n                item: function( rowCounter ) {\n\n                    // If Monday is the first day and the month starts on Sunday, shift the date back a week.\n                    var shiftDateBy = settings.firstDay && calendar.create([ viewsetObject.year, viewsetObject.month, 1 ]).day === 0 ? -7 : 0\n\n                    return [\n                        _.group({\n                            min: DAYS_IN_WEEK * rowCounter - viewsetObject.day + shiftDateBy + 1, // Add 1 for weekday 0index\n                            max: function() {\n                                return this.min + DAYS_IN_WEEK - 1\n                            },\n                            i: 1,\n                            node: 'td',\n                            item: function( targetDate ) {\n\n                                // Convert the time date from a relative date to a target date.\n                                targetDate = calendar.create([ viewsetObject.year, viewsetObject.month, targetDate + ( settings.firstDay ? 1 : 0 ) ])\n\n                                var isSelected = selectedObject && selectedObject.pick == targetDate.pick,\n                                    isHighlighted = highlightedObject && highlightedObject.pick == targetDate.pick,\n                                    isDisabled = disabledCollection && calendar.disabled( targetDate ) || targetDate.pick < minLimitObject.pick || targetDate.pick > maxLimitObject.pick,\n                                    formattedDate = _.trigger( calendar.formats.toString, calendar, [ settings.format, targetDate ] )\n\n                                return [\n                                    _.node(\n                                        'div',\n                                        targetDate.date,\n                                        (function( klasses ) {\n\n                                            // Add the `infocus` or `outfocus` classes based on month in view.\n                                            klasses.push( viewsetObject.month == targetDate.month ? settings.klass.infocus : settings.klass.outfocus )\n\n                                            // Add the `today` class if needed.\n                                            if ( nowObject.pick == targetDate.pick ) {\n                                                klasses.push( settings.klass.now )\n                                            }\n\n                                            // Add the `selected` class if something's selected and the time matches.\n                                            if ( isSelected ) {\n                                                klasses.push( settings.klass.selected )\n                                            }\n\n                                            // Add the `highlighted` class if something's highlighted and the time matches.\n                                            if ( isHighlighted ) {\n                                                klasses.push( settings.klass.highlighted )\n                                            }\n\n                                            // Add the `disabled` class if something's disabled and the object matches.\n                                            if ( isDisabled ) {\n                                                klasses.push( settings.klass.disabled )\n                                            }\n\n                                            return klasses.join( ' ' )\n                                        })([ settings.klass.day ]),\n                                        'data-pick=' + targetDate.pick + ' ' + _.ariaAttr({\n                                            role: 'gridcell',\n                                            label: formattedDate,\n                                            selected: isSelected && calendar.$node.val() === formattedDate ? true : null,\n                                            activedescendant: isHighlighted ? true : null,\n                                            disabled: isDisabled ? true : null\n                                        })\n                                    ),\n                                    '',\n                                    _.ariaAttr({ role: 'presentation' })\n                                ] //endreturn\n                            }\n                        })\n                    ] //endreturn\n                }\n            })\n        ),\n        settings.klass.table,\n        'id=\"' + calendar.$node[0].id + '_table' + '\" ' + _.ariaAttr({\n            role: 'grid',\n            controls: calendar.$node[0].id,\n            readonly: true\n        })\n    ) +\n\n    // * For Firefox forms to submit, make sure to set the buttons’ `type` attributes as “button”.\n    _.node(\n        'div',\n        _.node( 'button', settings.today, settings.klass.buttonToday,\n            'type=button data-pick=' + nowObject.pick +\n            ( isOpen && !calendar.disabled(nowObject) ? '' : ' disabled' ) + ' ' +\n            _.ariaAttr({ controls: calendar.$node[0].id }) ) +\n        _.node( 'button', settings.clear, settings.klass.buttonClear,\n            'type=button data-clear=1' +\n            ( isOpen ? '' : ' disabled' ) + ' ' +\n            _.ariaAttr({ controls: calendar.$node[0].id }) ) +\n        _.node('button', settings.close, settings.klass.buttonClose,\n            'type=button data-close=true ' +\n            ( isOpen ? '' : ' disabled' ) + ' ' +\n            _.ariaAttr({ controls: calendar.$node[0].id }) ),\n        settings.klass.footer\n    ) //endreturn\n} //DatePicker.prototype.nodes\n\n\n\n\n/**\n * The date picker defaults.\n */\nDatePicker.defaults = (function( prefix ) {\n\n    return {\n\n        // The title label to use for the month nav buttons\n        labelMonthNext: 'Next month',\n        labelMonthPrev: 'Previous month',\n\n        // The title label to use for the dropdown selectors\n        labelMonthSelect: 'Select a month',\n        labelYearSelect: 'Select a year',\n\n        // Months and weekdays\n        monthsFull: [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ],\n        monthsShort: [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ],\n        weekdaysFull: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ],\n        weekdaysShort: [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ],\n\n        // Today and clear\n        today: 'Today',\n        clear: 'Clear',\n        close: 'Close',\n\n        // Picker close behavior\n        closeOnSelect: true,\n        closeOnClear: true,\n\n        // The format to show on the `input` element\n        format: 'd mmmm, yyyy',\n\n        // Classes\n        klass: {\n\n            table: prefix + 'table',\n\n            header: prefix + 'header',\n\n            navPrev: prefix + 'nav--prev',\n            navNext: prefix + 'nav--next',\n            navDisabled: prefix + 'nav--disabled',\n\n            month: prefix + 'month',\n            year: prefix + 'year',\n\n            selectMonth: prefix + 'select--month',\n            selectYear: prefix + 'select--year',\n\n            weekdays: prefix + 'weekday',\n\n            day: prefix + 'day',\n            disabled: prefix + 'day--disabled',\n            selected: prefix + 'day--selected',\n            highlighted: prefix + 'day--highlighted',\n            now: prefix + 'day--today',\n            infocus: prefix + 'day--infocus',\n            outfocus: prefix + 'day--outfocus',\n\n            footer: prefix + 'footer',\n\n            buttonClear: prefix + 'button--clear',\n            buttonToday: prefix + 'button--today',\n            buttonClose: prefix + 'button--close'\n        }\n    }\n})( Picker.klasses().picker + '__' )\n\n\n\n\n\n/**\n * Extend the picker to add the date picker.\n */\nPicker.extend( 'pickadate', DatePicker )\n\n\n}));\n\n\n\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/picker.js":"/*!\n * pickadate.js v3.5.6, 2015/04/20\n * By Amsul, http://amsul.ca\n * Hosted on http://amsul.github.io/pickadate.js\n * Licensed under MIT\n */\n\n(function ( factory ) {\n\n    // AMD.\n    if ( typeof define == 'function' && define.amd )\n        define( 'picker', ['jquery'], factory )\n\n    // Node.js/browserify.\n    else if ( typeof exports == 'object' )\n        module.exports = factory( require('jquery') )\n\n    // Browser globals.\n    else this.Picker = factory( jQuery )\n\n}(function( $ ) {\n\nvar $window = $( window )\nvar $document = $( document )\nvar $html = $( document.documentElement )\nvar supportsTransitions = document.documentElement.style.transition != null\n\n\n/**\n * The picker constructor that creates a blank picker.\n */\nfunction PickerConstructor( ELEMENT, NAME, COMPONENT, OPTIONS ) {\n\n    // If there’s no element, return the picker constructor.\n    if ( !ELEMENT ) return PickerConstructor\n\n\n    var\n        IS_DEFAULT_THEME = false,\n\n\n        // The state of the picker.\n        STATE = {\n            id: ELEMENT.id || 'P' + Math.abs( ~~(Math.random() * new Date()) )\n        },\n\n\n        // Merge the defaults and options passed.\n        SETTINGS = COMPONENT ? $.extend( true, {}, COMPONENT.defaults, OPTIONS ) : OPTIONS || {},\n\n\n        // Merge the default classes with the settings classes.\n        CLASSES = $.extend( {}, PickerConstructor.klasses(), SETTINGS.klass ),\n\n\n        // The element node wrapper into a jQuery object.\n        $ELEMENT = $( ELEMENT ),\n\n\n        // Pseudo picker constructor.\n        PickerInstance = function() {\n            return this.start()\n        },\n\n\n        // The picker prototype.\n        P = PickerInstance.prototype = {\n\n            constructor: PickerInstance,\n\n            $node: $ELEMENT,\n\n\n            /**\n             * Initialize everything\n             */\n            start: function() {\n\n                // If it’s already started, do nothing.\n                if ( STATE && STATE.start ) return P\n\n\n                // Update the picker states.\n                STATE.methods = {}\n                STATE.start = true\n                STATE.open = false\n                STATE.type = ELEMENT.type\n\n\n                // Confirm focus state, convert into text input to remove UA stylings,\n                // and set as readonly to prevent keyboard popup.\n                ELEMENT.autofocus = ELEMENT == getActiveElement()\n                ELEMENT.readOnly = !SETTINGS.editable\n                ELEMENT.id = ELEMENT.id || STATE.id\n                if ( ELEMENT.type != 'text' ) {\n                    ELEMENT.type = 'text'\n                }\n\n\n                // Create a new picker component with the settings.\n                P.component = new COMPONENT(P, SETTINGS)\n\n\n                // Create the picker root and then prepare it.\n                P.$root = $( '<div class=\"' + CLASSES.picker + '\" id=\"' + ELEMENT.id + '_root\" />' )\n                prepareElementRoot()\n\n\n                // Create the picker holder and then prepare it.\n                P.$holder = $( createWrappedComponent() ).appendTo( P.$root )\n                prepareElementHolder()\n\n\n                // If there’s a format for the hidden input element, create the element.\n                if ( SETTINGS.formatSubmit ) {\n                    prepareElementHidden()\n                }\n\n\n                // Prepare the input element.\n                prepareElement()\n\n\n                // Insert the hidden input as specified in the settings.\n                if ( SETTINGS.containerHidden ) $( SETTINGS.containerHidden ).append( P._hidden )\n                else $ELEMENT.after( P._hidden )\n\n\n                // Insert the root as specified in the settings.\n                if ( SETTINGS.container ) $( SETTINGS.container ).append( P.$root )\n                else $ELEMENT.after( P.$root )\n\n\n                // Bind the default component and settings events.\n                P.on({\n                    start: P.component.onStart,\n                    render: P.component.onRender,\n                    stop: P.component.onStop,\n                    open: P.component.onOpen,\n                    close: P.component.onClose,\n                    set: P.component.onSet\n                }).on({\n                    start: SETTINGS.onStart,\n                    render: SETTINGS.onRender,\n                    stop: SETTINGS.onStop,\n                    open: SETTINGS.onOpen,\n                    close: SETTINGS.onClose,\n                    set: SETTINGS.onSet\n                })\n\n\n                // Once we’re all set, check the theme in use.\n                IS_DEFAULT_THEME = isUsingDefaultTheme( P.$holder[0] )\n\n\n                // If the element has autofocus, open the picker.\n                if ( ELEMENT.autofocus ) {\n                    P.open()\n                }\n\n\n                // Trigger queued the “start” and “render” events.\n                return P.trigger( 'start' ).trigger( 'render' )\n            }, //start\n\n\n            /**\n             * Render a new picker\n             */\n            render: function( entireComponent ) {\n\n                // Insert a new component holder in the root or box.\n                if ( entireComponent ) {\n                    P.$holder = $( createWrappedComponent() )\n                    prepareElementHolder()\n                    P.$root.html( P.$holder )\n                }\n                else P.$root.find( '.' + CLASSES.box ).html( P.component.nodes( STATE.open ) )\n\n                // Trigger the queued “render” events.\n                return P.trigger( 'render' )\n            }, //render\n\n\n            /**\n             * Destroy everything\n             */\n            stop: function() {\n\n                // If it’s already stopped, do nothing.\n                if ( !STATE.start ) return P\n\n                // Then close the picker.\n                P.close()\n\n                // Remove the hidden field.\n                if ( P._hidden ) {\n                    P._hidden.parentNode.removeChild( P._hidden )\n                }\n\n                // Remove the root.\n                P.$root.remove()\n\n                // Remove the input class, remove the stored data, and unbind\n                // the events (after a tick for IE - see `P.close`).\n                $ELEMENT.removeClass( CLASSES.input ).removeData( NAME )\n                setTimeout( function() {\n                    $ELEMENT.off( '.' + STATE.id )\n                }, 0)\n\n                // Restore the element state\n                ELEMENT.type = STATE.type\n                ELEMENT.readOnly = false\n\n                // Trigger the queued “stop” events.\n                P.trigger( 'stop' )\n\n                // Reset the picker states.\n                STATE.methods = {}\n                STATE.start = false\n\n                return P\n            }, //stop\n\n\n            /**\n             * Open up the picker\n             */\n            open: function( dontGiveFocus ) {\n\n                // If it’s already open, do nothing.\n                if ( STATE.open ) return P\n\n                // Add the “active” class.\n                $ELEMENT.addClass( CLASSES.active )\n                aria( ELEMENT, 'expanded', true )\n\n                // * A Firefox bug, when `html` has `overflow:hidden`, results in\n                //   killing transitions :(. So add the “opened” state on the next tick.\n                //   Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=625289\n                setTimeout( function() {\n\n                    // Add the “opened” class to the picker root.\n                    P.$root.addClass( CLASSES.opened )\n                    aria( P.$root[0], 'hidden', false )\n\n                }, 0 )\n\n                // If we have to give focus, bind the element and doc events.\n                if ( dontGiveFocus !== false ) {\n\n                    // Set it as open.\n                    STATE.open = true\n\n                    // Prevent the page from scrolling.\n                    if ( IS_DEFAULT_THEME ) {\n                        $html.\n                            css( 'overflow', 'hidden' ).\n                            css( 'padding-right', '+=' + getScrollbarWidth() )\n                    }\n\n                    // Pass focus to the root element’s jQuery object.\n                    focusPickerOnceOpened()\n\n                    // Bind the document events.\n                    $document.on( 'click.' + STATE.id + ' focusin.' + STATE.id, function( event ) {\n\n                        var target = event.target\n\n                        // If the target of the event is not the element, close the picker picker.\n                        // * Don’t worry about clicks or focusins on the root because those don’t bubble up.\n                        //   Also, for Firefox, a click on an `option` element bubbles up directly\n                        //   to the doc. So make sure the target wasn't the doc.\n                        // * In Firefox stopPropagation() doesn’t prevent right-click events from bubbling,\n                        //   which causes the picker to unexpectedly close when right-clicking it. So make\n                        //   sure the event wasn’t a right-click.\n                        if ( target != ELEMENT && target != document && event.which != 3 ) {\n\n                            // If the target was the holder that covers the screen,\n                            // keep the element focused to maintain tabindex.\n                            P.close( target === P.$holder[0] )\n                        }\n\n                    }).on( 'keydown.' + STATE.id, function( event ) {\n\n                        var\n                            // Get the keycode.\n                            keycode = event.keyCode,\n\n                            // Translate that to a selection change.\n                            keycodeToMove = P.component.key[ keycode ],\n\n                            // Grab the target.\n                            target = event.target\n\n\n                        // On escape, close the picker and give focus.\n                        if ( keycode == 27 ) {\n                            P.close( true )\n                        }\n\n\n                        // Check if there is a key movement or “enter” keypress on the element.\n                        else if ( target == P.$holder[0] && ( keycodeToMove || keycode == 13 ) ) {\n\n                            // Prevent the default action to stop page movement.\n                            event.preventDefault()\n\n                            // Trigger the key movement action.\n                            if ( keycodeToMove ) {\n                                PickerConstructor._.trigger( P.component.key.go, P, [ PickerConstructor._.trigger( keycodeToMove ) ] )\n                            }\n\n                            // On “enter”, if the highlighted item isn’t disabled, set the value and close.\n                            else if ( !P.$root.find( '.' + CLASSES.highlighted ).hasClass( CLASSES.disabled ) ) {\n                                P.set( 'select', P.component.item.highlight )\n                                if ( SETTINGS.closeOnSelect ) {\n                                    P.close( true )\n                                }\n                            }\n                        }\n\n\n                        // If the target is within the root and “enter” is pressed,\n                        // prevent the default action and trigger a click on the target instead.\n                        else if ( $.contains( P.$root[0], target ) && keycode == 13 ) {\n                            event.preventDefault()\n                            target.click()\n                        }\n                    })\n                }\n\n                // Trigger the queued “open” events.\n                return P.trigger( 'open' )\n            }, //open\n\n\n            /**\n             * Close the picker\n             */\n            close: function( giveFocus ) {\n\n                // If we need to give focus, do it before changing states.\n                if ( giveFocus ) {\n                    if ( SETTINGS.editable ) {\n                        ELEMENT.focus()\n                    }\n                    else {\n                        // ....ah yes! It would’ve been incomplete without a crazy workaround for IE :|\n                        // The focus is triggered *after* the close has completed - causing it\n                        // to open again. So unbind and rebind the event at the next tick.\n                        P.$holder.off( 'focus.toOpen' ).focus()\n                        setTimeout( function() {\n                            P.$holder.on( 'focus.toOpen', handleFocusToOpenEvent )\n                        }, 0 )\n                    }\n                }\n\n                // Remove the “active” class.\n                $ELEMENT.removeClass( CLASSES.active )\n                aria( ELEMENT, 'expanded', false )\n\n                // * A Firefox bug, when `html` has `overflow:hidden`, results in\n                //   killing transitions :(. So remove the “opened” state on the next tick.\n                //   Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=625289\n                setTimeout( function() {\n\n                    // Remove the “opened” and “focused” class from the picker root.\n                    P.$root.removeClass( CLASSES.opened + ' ' + CLASSES.focused )\n                    aria( P.$root[0], 'hidden', true )\n\n                }, 0 )\n\n                // If it’s already closed, do nothing more.\n                if ( !STATE.open ) return P\n\n                // Set it as closed.\n                STATE.open = false\n\n                // Allow the page to scroll.\n                if ( IS_DEFAULT_THEME ) {\n                    $html.\n                        css( 'overflow', '' ).\n                        css( 'padding-right', '-=' + getScrollbarWidth() )\n                }\n\n                // Unbind the document events.\n                $document.off( '.' + STATE.id )\n\n                // Trigger the queued “close” events.\n                return P.trigger( 'close' )\n            }, //close\n\n\n            /**\n             * Clear the values\n             */\n            clear: function( options ) {\n                return P.set( 'clear', null, options )\n            }, //clear\n\n\n            /**\n             * Set something\n             */\n            set: function( thing, value, options ) {\n\n                var thingItem, thingValue,\n                    thingIsObject = $.isPlainObject( thing ),\n                    thingObject = thingIsObject ? thing : {}\n\n                // Make sure we have usable options.\n                options = thingIsObject && $.isPlainObject( value ) ? value : options || {}\n\n                if ( thing ) {\n\n                    // If the thing isn’t an object, make it one.\n                    if ( !thingIsObject ) {\n                        thingObject[ thing ] = value\n                    }\n\n                    // Go through the things of items to set.\n                    for ( thingItem in thingObject ) {\n\n                        // Grab the value of the thing.\n                        thingValue = thingObject[ thingItem ]\n\n                        // First, if the item exists and there’s a value, set it.\n                        if ( thingItem in P.component.item ) {\n                            if ( thingValue === undefined ) thingValue = null\n                            P.component.set( thingItem, thingValue, options )\n                        }\n\n                        // Then, check to update the element value and broadcast a change.\n                        if ( thingItem == 'select' || thingItem == 'clear' ) {\n                            $ELEMENT.\n                                val( thingItem == 'clear' ? '' : P.get( thingItem, SETTINGS.format ) ).\n                                trigger( 'change' )\n                        }\n                    }\n\n                    // Render a new picker.\n                    P.render()\n                }\n\n                // When the method isn’t muted, trigger queued “set” events and pass the `thingObject`.\n                return options.muted ? P : P.trigger( 'set', thingObject )\n            }, //set\n\n\n            /**\n             * Get something\n             */\n            get: function( thing, format ) {\n\n                // Make sure there’s something to get.\n                thing = thing || 'value'\n\n                // If a picker state exists, return that.\n                if ( STATE[ thing ] != null ) {\n                    return STATE[ thing ]\n                }\n\n                // Return the submission value, if that.\n                if ( thing == 'valueSubmit' ) {\n                    if ( P._hidden ) {\n                        return P._hidden.value\n                    }\n                    thing = 'value'\n                }\n\n                // Return the value, if that.\n                if ( thing == 'value' ) {\n                    return ELEMENT.value\n                }\n\n                // Check if a component item exists, return that.\n                if ( thing in P.component.item ) {\n                    if ( typeof format == 'string' ) {\n                        var thingValue = P.component.get( thing )\n                        return thingValue ?\n                            PickerConstructor._.trigger(\n                                P.component.formats.toString,\n                                P.component,\n                                [ format, thingValue ]\n                            ) : ''\n                    }\n                    return P.component.get( thing )\n                }\n            }, //get\n\n\n\n            /**\n             * Bind events on the things.\n             */\n            on: function( thing, method, internal ) {\n\n                var thingName, thingMethod,\n                    thingIsObject = $.isPlainObject( thing ),\n                    thingObject = thingIsObject ? thing : {}\n\n                if ( thing ) {\n\n                    // If the thing isn’t an object, make it one.\n                    if ( !thingIsObject ) {\n                        thingObject[ thing ] = method\n                    }\n\n                    // Go through the things to bind to.\n                    for ( thingName in thingObject ) {\n\n                        // Grab the method of the thing.\n                        thingMethod = thingObject[ thingName ]\n\n                        // If it was an internal binding, prefix it.\n                        if ( internal ) {\n                            thingName = '_' + thingName\n                        }\n\n                        // Make sure the thing methods collection exists.\n                        STATE.methods[ thingName ] = STATE.methods[ thingName ] || []\n\n                        // Add the method to the relative method collection.\n                        STATE.methods[ thingName ].push( thingMethod )\n                    }\n                }\n\n                return P\n            }, //on\n\n\n\n            /**\n             * Unbind events on the things.\n             */\n            off: function() {\n                var i, thingName,\n                    names = arguments;\n                for ( i = 0, namesCount = names.length; i < namesCount; i += 1 ) {\n                    thingName = names[i]\n                    if ( thingName in STATE.methods ) {\n                        delete STATE.methods[thingName]\n                    }\n                }\n                return P\n            },\n\n\n            /**\n             * Fire off method events.\n             */\n            trigger: function( name, data ) {\n                var _trigger = function( name ) {\n                    var methodList = STATE.methods[ name ]\n                    if ( methodList ) {\n                        methodList.map( function( method ) {\n                            PickerConstructor._.trigger( method, P, [ data ] )\n                        })\n                    }\n                }\n                _trigger( '_' + name )\n                _trigger( name )\n                return P\n            } //trigger\n        } //PickerInstance.prototype\n\n\n    /**\n     * Wrap the picker holder components together.\n     */\n    function createWrappedComponent() {\n\n        // Create a picker wrapper holder\n        return PickerConstructor._.node( 'div',\n\n            // Create a picker wrapper node\n            PickerConstructor._.node( 'div',\n\n                // Create a picker frame\n                PickerConstructor._.node( 'div',\n\n                    // Create a picker box node\n                    PickerConstructor._.node( 'div',\n\n                        // Create the components nodes.\n                        P.component.nodes( STATE.open ),\n\n                        // The picker box class\n                        CLASSES.box\n                    ),\n\n                    // Picker wrap class\n                    CLASSES.wrap\n                ),\n\n                // Picker frame class\n                CLASSES.frame\n            ),\n\n            // Picker holder class\n            CLASSES.holder,\n\n            'tabindex=\"-1\"'\n        ) //endreturn\n    } //createWrappedComponent\n\n\n\n    /**\n     * Prepare the input element with all bindings.\n     */\n    function prepareElement() {\n\n        $ELEMENT.\n\n            // Store the picker data by component name.\n            data(NAME, P).\n\n            // Add the “input” class name.\n            addClass(CLASSES.input).\n\n            // If there’s a `data-value`, update the value of the element.\n            val( $ELEMENT.data('value') ?\n                P.get('select', SETTINGS.format) :\n                ELEMENT.value\n            )\n\n\n        // Only bind keydown events if the element isn’t editable.\n        if ( !SETTINGS.editable ) {\n\n            $ELEMENT.\n\n                // On focus/click, open the picker.\n                on( 'focus.' + STATE.id + ' click.' + STATE.id, function(event) {\n                    event.preventDefault()\n                    P.open()\n                }).\n\n                // Handle keyboard event based on the picker being opened or not.\n                on( 'keydown.' + STATE.id, handleKeydownEvent )\n        }\n\n\n        // Update the aria attributes.\n        aria(ELEMENT, {\n            haspopup: true,\n            expanded: false,\n            readonly: false,\n            owns: ELEMENT.id + '_root'\n        })\n    }\n\n\n    /**\n     * Prepare the root picker element with all bindings.\n     */\n    function prepareElementRoot() {\n        aria( P.$root[0], 'hidden', true )\n    }\n\n\n     /**\n      * Prepare the holder picker element with all bindings.\n      */\n    function prepareElementHolder() {\n\n        P.$holder.\n\n            on({\n\n                // For iOS8.\n                keydown: handleKeydownEvent,\n\n                'focus.toOpen': handleFocusToOpenEvent,\n\n                blur: function() {\n                    // Remove the “target” class.\n                    $ELEMENT.removeClass( CLASSES.target )\n                },\n\n                // When something within the holder is focused, stop from bubbling\n                // to the doc and remove the “focused” state from the root.\n                focusin: function( event ) {\n                    P.$root.removeClass( CLASSES.focused )\n                    event.stopPropagation()\n                },\n\n                // When something within the holder is clicked, stop it\n                // from bubbling to the doc.\n                'mousedown click': function( event ) {\n\n                    var target = event.target\n\n                    // Make sure the target isn’t the root holder so it can bubble up.\n                    if ( target != P.$holder[0] ) {\n\n                        event.stopPropagation()\n\n                        // * For mousedown events, cancel the default action in order to\n                        //   prevent cases where focus is shifted onto external elements\n                        //   when using things like jQuery mobile or MagnificPopup (ref: #249 & #120).\n                        //   Also, for Firefox, don’t prevent action on the `option` element.\n                        if ( event.type == 'mousedown' && !$( target ).is( 'input, select, textarea, button, option' )) {\n\n                            event.preventDefault()\n\n                            // Re-focus onto the holder so that users can click away\n                            // from elements focused within the picker.\n                            P.$holder[0].focus()\n                        }\n                    }\n                }\n\n            }).\n\n            // If there’s a click on an actionable element, carry out the actions.\n            on( 'click', '[data-pick], [data-nav], [data-clear], [data-close]', function() {\n\n                var $target = $( this ),\n                    targetData = $target.data(),\n                    targetDisabled = $target.hasClass( CLASSES.navDisabled ) || $target.hasClass( CLASSES.disabled ),\n\n                    // * For IE, non-focusable elements can be active elements as well\n                    //   (http://stackoverflow.com/a/2684561).\n                    activeElement = getActiveElement()\n                    activeElement = activeElement && ( activeElement.type || activeElement.href )\n\n                // If it’s disabled or nothing inside is actively focused, re-focus the element.\n                if ( targetDisabled || activeElement && !$.contains( P.$root[0], activeElement ) ) {\n                    P.$holder[0].focus()\n                }\n\n                // If something is superficially changed, update the `highlight` based on the `nav`.\n                if ( !targetDisabled && targetData.nav ) {\n                    P.set( 'highlight', P.component.item.highlight, { nav: targetData.nav } )\n                }\n\n                // If something is picked, set `select` then close with focus.\n                else if ( !targetDisabled && 'pick' in targetData ) {\n                    P.set( 'select', targetData.pick )\n                    if ( SETTINGS.closeOnSelect ) {\n                        P.close( true )\n                    }\n                }\n\n                // If a “clear” button is pressed, empty the values and close with focus.\n                else if ( targetData.clear ) {\n                    P.clear()\n                    if ( SETTINGS.closeOnClear ) {\n                        P.close( true )\n                    }\n                }\n\n                else if ( targetData.close ) {\n                    P.close( true )\n                }\n\n            }) //P.$holder\n\n    }\n\n\n     /**\n      * Prepare the hidden input element along with all bindings.\n      */\n    function prepareElementHidden() {\n\n        var name\n\n        if ( SETTINGS.hiddenName === true ) {\n            name = ELEMENT.name\n            ELEMENT.name = ''\n        }\n        else {\n            name = [\n                typeof SETTINGS.hiddenPrefix == 'string' ? SETTINGS.hiddenPrefix : '',\n                typeof SETTINGS.hiddenSuffix == 'string' ? SETTINGS.hiddenSuffix : '_submit'\n            ]\n            name = name[0] + ELEMENT.name + name[1]\n        }\n\n        P._hidden = $(\n            '<input ' +\n            'type=hidden ' +\n\n            // Create the name using the original input’s with a prefix and suffix.\n            'name=\"' + name + '\"' +\n\n            // If the element has a value, set the hidden value as well.\n            (\n                $ELEMENT.data('value') || ELEMENT.value ?\n                    ' value=\"' + P.get('select', SETTINGS.formatSubmit) + '\"' :\n                    ''\n            ) +\n            '>'\n        )[0]\n\n        $ELEMENT.\n\n            // If the value changes, update the hidden input with the correct format.\n            on('change.' + STATE.id, function() {\n                P._hidden.value = ELEMENT.value ?\n                    P.get('select', SETTINGS.formatSubmit) :\n                    ''\n            })\n    }\n\n\n    // Wait for transitions to end before focusing the holder. Otherwise, while\n    // using the `container` option, the view jumps to the container.\n    function focusPickerOnceOpened() {\n\n        if (IS_DEFAULT_THEME && supportsTransitions) {\n            P.$holder.find('.' + CLASSES.frame).one('transitionend', function() {\n                P.$holder[0].focus()\n            })\n        }\n        else {\n            P.$holder[0].focus()\n        }\n    }\n\n\n    function handleFocusToOpenEvent(event) {\n\n        // Stop the event from propagating to the doc.\n        event.stopPropagation()\n\n        // Add the “target” class.\n        $ELEMENT.addClass( CLASSES.target )\n\n        // Add the “focused” class to the root.\n        P.$root.addClass( CLASSES.focused )\n\n        // And then finally open the picker.\n        P.open()\n    }\n\n\n    // For iOS8.\n    function handleKeydownEvent( event ) {\n\n        var keycode = event.keyCode,\n\n            // Check if one of the delete keys was pressed.\n            isKeycodeDelete = /^(8|46)$/.test(keycode)\n\n        // For some reason IE clears the input value on “escape”.\n        if ( keycode == 27 ) {\n            P.close( true )\n            return false\n        }\n\n        // Check if `space` or `delete` was pressed or the picker is closed with a key movement.\n        if ( keycode == 32 || isKeycodeDelete || !STATE.open && P.component.key[keycode] ) {\n\n            // Prevent it from moving the page and bubbling to doc.\n            event.preventDefault()\n            event.stopPropagation()\n\n            // If `delete` was pressed, clear the values and close the picker.\n            // Otherwise open the picker.\n            if ( isKeycodeDelete ) { P.clear().close() }\n            else { P.open() }\n        }\n    }\n\n\n    // Return a new picker instance.\n    return new PickerInstance()\n} //PickerConstructor\n\n\n\n/**\n * The default classes and prefix to use for the HTML classes.\n */\nPickerConstructor.klasses = function( prefix ) {\n    prefix = prefix || 'picker'\n    return {\n\n        picker: prefix,\n        opened: prefix + '--opened',\n        focused: prefix + '--focused',\n\n        input: prefix + '__input',\n        active: prefix + '__input--active',\n        target: prefix + '__input--target',\n\n        holder: prefix + '__holder',\n\n        frame: prefix + '__frame',\n        wrap: prefix + '__wrap',\n\n        box: prefix + '__box'\n    }\n} //PickerConstructor.klasses\n\n\n\n/**\n * Check if the default theme is being used.\n */\nfunction isUsingDefaultTheme( element ) {\n\n    var theme,\n        prop = 'position'\n\n    // For IE.\n    if ( element.currentStyle ) {\n        theme = element.currentStyle[prop]\n    }\n\n    // For normal browsers.\n    else if ( window.getComputedStyle ) {\n        theme = getComputedStyle( element )[prop]\n    }\n\n    return theme == 'fixed'\n}\n\n\n\n/**\n * Get the width of the browser’s scrollbar.\n * Taken from: https://github.com/VodkaBears/Remodal/blob/master/src/jquery.remodal.js\n */\nfunction getScrollbarWidth() {\n\n    if ( $html.height() <= $window.height() ) {\n        return 0\n    }\n\n    var $outer = $( '<div style=\"visibility:hidden;width:100px\" />' ).\n        appendTo( 'body' )\n\n    // Get the width without scrollbars.\n    var widthWithoutScroll = $outer[0].offsetWidth\n\n    // Force adding scrollbars.\n    $outer.css( 'overflow', 'scroll' )\n\n    // Add the inner div.\n    var $inner = $( '<div style=\"width:100%\" />' ).appendTo( $outer )\n\n    // Get the width with scrollbars.\n    var widthWithScroll = $inner[0].offsetWidth\n\n    // Remove the divs.\n    $outer.remove()\n\n    // Return the difference between the widths.\n    return widthWithoutScroll - widthWithScroll\n}\n\n\n\n/**\n * PickerConstructor helper methods.\n */\nPickerConstructor._ = {\n\n    /**\n     * Create a group of nodes. Expects:\n     * `\n        {\n            min:    {Integer},\n            max:    {Integer},\n            i:      {Integer},\n            node:   {String},\n            item:   {Function}\n        }\n     * `\n     */\n    group: function( groupObject ) {\n\n        var\n            // Scope for the looped object\n            loopObjectScope,\n\n            // Create the nodes list\n            nodesList = '',\n\n            // The counter starts from the `min`\n            counter = PickerConstructor._.trigger( groupObject.min, groupObject )\n\n\n        // Loop from the `min` to `max`, incrementing by `i`\n        for ( ; counter <= PickerConstructor._.trigger( groupObject.max, groupObject, [ counter ] ); counter += groupObject.i ) {\n\n            // Trigger the `item` function within scope of the object\n            loopObjectScope = PickerConstructor._.trigger( groupObject.item, groupObject, [ counter ] )\n\n            // Splice the subgroup and create nodes out of the sub nodes\n            nodesList += PickerConstructor._.node(\n                groupObject.node,\n                loopObjectScope[ 0 ],   // the node\n                loopObjectScope[ 1 ],   // the classes\n                loopObjectScope[ 2 ]    // the attributes\n            )\n        }\n\n        // Return the list of nodes\n        return nodesList\n    }, //group\n\n\n    /**\n     * Create a dom node string\n     */\n    node: function( wrapper, item, klass, attribute ) {\n\n        // If the item is false-y, just return an empty string\n        if ( !item ) return ''\n\n        // If the item is an array, do a join\n        item = $.isArray( item ) ? item.join( '' ) : item\n\n        // Check for the class\n        klass = klass ? ' class=\"' + klass + '\"' : ''\n\n        // Check for any attributes\n        attribute = attribute ? ' ' + attribute : ''\n\n        // Return the wrapped item\n        return '<' + wrapper + klass + attribute + '>' + item + '</' + wrapper + '>'\n    }, //node\n\n\n    /**\n     * Lead numbers below 10 with a zero.\n     */\n    lead: function( number ) {\n        return ( number < 10 ? '0': '' ) + number\n    },\n\n\n    /**\n     * Trigger a function otherwise return the value.\n     */\n    trigger: function( callback, scope, args ) {\n        return typeof callback == 'function' ? callback.apply( scope, args || [] ) : callback\n    },\n\n\n    /**\n     * If the second character is a digit, length is 2 otherwise 1.\n     */\n    digits: function( string ) {\n        return ( /\\d/ ).test( string[ 1 ] ) ? 2 : 1\n    },\n\n\n    /**\n     * Tell if something is a date object.\n     */\n    isDate: function( value ) {\n        return {}.toString.call( value ).indexOf( 'Date' ) > -1 && this.isInteger( value.getDate() )\n    },\n\n\n    /**\n     * Tell if something is an integer.\n     */\n    isInteger: function( value ) {\n        return {}.toString.call( value ).indexOf( 'Number' ) > -1 && value % 1 === 0\n    },\n\n\n    /**\n     * Create ARIA attribute strings.\n     */\n    ariaAttr: ariaAttr\n} //PickerConstructor._\n\n\n\n/**\n * Extend the picker with a component and defaults.\n */\nPickerConstructor.extend = function( name, Component ) {\n\n    // Extend jQuery.\n    $.fn[ name ] = function( options, action ) {\n\n        // Grab the component data.\n        var componentData = this.data( name )\n\n        // If the picker is requested, return the data object.\n        if ( options == 'picker' ) {\n            return componentData\n        }\n\n        // If the component data exists and `options` is a string, carry out the action.\n        if ( componentData && typeof options == 'string' ) {\n            return PickerConstructor._.trigger( componentData[ options ], componentData, [ action ] )\n        }\n\n        // Otherwise go through each matched element and if the component\n        // doesn’t exist, create a new picker using `this` element\n        // and merging the defaults and options with a deep copy.\n        return this.each( function() {\n            var $this = $( this )\n            if ( !$this.data( name ) ) {\n                new PickerConstructor( this, name, Component, options )\n            }\n        })\n    }\n\n    // Set the defaults.\n    $.fn[ name ].defaults = Component.defaults\n} //PickerConstructor.extend\n\n\n\nfunction aria(element, attribute, value) {\n    if ( $.isPlainObject(attribute) ) {\n        for ( var key in attribute ) {\n            ariaSet(element, key, attribute[key])\n        }\n    }\n    else {\n        ariaSet(element, attribute, value)\n    }\n}\nfunction ariaSet(element, attribute, value) {\n    element.setAttribute(\n        (attribute == 'role' ? '' : 'aria-') + attribute,\n        value\n    )\n}\nfunction ariaAttr(attribute, data) {\n    if ( !$.isPlainObject(attribute) ) {\n        attribute = { attribute: data }\n    }\n    data = ''\n    for ( var key in attribute ) {\n        var attr = (key == 'role' ? '' : 'aria-') + key,\n            attrVal = attribute[key]\n        data += attrVal == null ? '' : attr + '=\"' + attribute[key] + '\"'\n    }\n    return data\n}\n\n// IE8 bug throws an error for activeElements within iframes.\nfunction getActiveElement() {\n    try {\n        return document.activeElement\n    } catch ( err ) { }\n}\n\n\n\n// Expose the picker constructor.\nreturn PickerConstructor\n\n\n}));\n\n\n\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/picker.time.js":"/*!\n * Time picker for pickadate.js v3.5.6\n * http://amsul.github.io/pickadate.js/time.htm\n */\n\n(function ( factory ) {\n\n    // AMD.\n    if ( typeof define == 'function' && define.amd )\n        define( ['picker', 'jquery'], factory )\n\n    // Node.js/browserify.\n    else if ( typeof exports == 'object' )\n        module.exports = factory( require('./picker.js'), require('jquery') )\n\n    // Browser globals.\n    else factory( Picker, jQuery )\n\n}(function( Picker, $ ) {\n\n\n/**\n * Globals and constants\n */\nvar HOURS_IN_DAY = 24,\n    MINUTES_IN_HOUR = 60,\n    HOURS_TO_NOON = 12,\n    MINUTES_IN_DAY = HOURS_IN_DAY * MINUTES_IN_HOUR,\n    _ = Picker._\n\n\n\n/**\n * The time picker constructor\n */\nfunction TimePicker( picker, settings ) {\n\n    var clock = this,\n        elementValue = picker.$node[ 0 ].value,\n        elementDataValue = picker.$node.data( 'value' ),\n        valueString = elementDataValue || elementValue,\n        formatString = elementDataValue ? settings.formatSubmit : settings.format\n\n    clock.settings = settings\n    clock.$node = picker.$node\n\n    // The queue of methods that will be used to build item objects.\n    clock.queue = {\n        interval: 'i',\n        min: 'measure create',\n        max: 'measure create',\n        now: 'now create',\n        select: 'parse create validate',\n        highlight: 'parse create validate',\n        view: 'parse create validate',\n        disable: 'deactivate',\n        enable: 'activate'\n    }\n\n    // The component's item object.\n    clock.item = {}\n\n    clock.item.clear = null\n    clock.item.interval = settings.interval || 30\n    clock.item.disable = ( settings.disable || [] ).slice( 0 )\n    clock.item.enable = -(function( collectionDisabled ) {\n        return collectionDisabled[ 0 ] === true ? collectionDisabled.shift() : -1\n    })( clock.item.disable )\n\n    clock.\n        set( 'min', settings.min ).\n        set( 'max', settings.max ).\n        set( 'now' )\n\n    // When there’s a value, set the `select`, which in turn\n    // also sets the `highlight` and `view`.\n    if ( valueString ) {\n        clock.set( 'select', valueString, {\n            format: formatString\n        })\n    }\n\n    // If there’s no value, default to highlighting “today”.\n    else {\n        clock.\n            set( 'select', null ).\n            set( 'highlight', clock.item.now )\n    }\n\n    // The keycode to movement mapping.\n    clock.key = {\n        40: 1, // Down\n        38: -1, // Up\n        39: 1, // Right\n        37: -1, // Left\n        go: function( timeChange ) {\n            clock.set(\n                'highlight',\n                clock.item.highlight.pick + timeChange * clock.item.interval,\n                { interval: timeChange * clock.item.interval }\n            )\n            this.render()\n        }\n    }\n\n\n    // Bind some picker events.\n    picker.\n        on( 'render', function() {\n            var $pickerHolder = picker.$root.children(),\n                $viewset = $pickerHolder.find( '.' + settings.klass.viewset ),\n                vendors = function( prop ) {\n                    return ['webkit', 'moz', 'ms', 'o', ''].map(function( vendor ) {\n                        return ( vendor ? '-' + vendor + '-' : '' ) + prop\n                    })\n                },\n                animations = function( $el, state ) {\n                    vendors( 'transform' ).map(function( prop ) {\n                        $el.css( prop, state )\n                    })\n                    vendors( 'transition' ).map(function( prop ) {\n                        $el.css( prop, state )\n                    })\n                }\n            if ( $viewset.length ) {\n                animations( $pickerHolder, 'none' )\n                $pickerHolder[ 0 ].scrollTop = ~~$viewset.position().top - ( $viewset[ 0 ].clientHeight * 2 )\n                animations( $pickerHolder, '' )\n            }\n        }, 1 ).\n        on( 'open', function() {\n            picker.$root.find( 'button' ).attr( 'disabled', false )\n        }, 1 ).\n        on( 'close', function() {\n            picker.$root.find( 'button' ).attr( 'disabled', true )\n        }, 1 )\n\n} //TimePicker\n\n\n/**\n * Set a timepicker item object.\n */\nTimePicker.prototype.set = function( type, value, options ) {\n\n    var clock = this,\n        clockItem = clock.item\n\n    // If the value is `null` just set it immediately.\n    if ( value === null ) {\n        if ( type == 'clear' ) type = 'select'\n        clockItem[ type ] = value\n        return clock\n    }\n\n    // Otherwise go through the queue of methods, and invoke the functions.\n    // Update this as the time unit, and set the final value as this item.\n    // * In the case of `enable`, keep the queue but set `disable` instead.\n    //   And in the case of `flip`, keep the queue but set `enable` instead.\n    clockItem[ ( type == 'enable' ? 'disable' : type == 'flip' ? 'enable' : type ) ] = clock.queue[ type ].split( ' ' ).map( function( method ) {\n        value = clock[ method ]( type, value, options )\n        return value\n    }).pop()\n\n    // Check if we need to cascade through more updates.\n    if ( type == 'select' ) {\n        clock.set( 'highlight', clockItem.select, options )\n    }\n    else if ( type == 'highlight' ) {\n        clock.set( 'view', clockItem.highlight, options )\n    }\n    else if ( type == 'interval' ) {\n        clock.\n            set( 'min', clockItem.min, options ).\n            set( 'max', clockItem.max, options )\n    }\n    else if ( type.match( /^(flip|min|max|disable|enable)$/ ) ) {\n        if ( clockItem.select && clock.disabled( clockItem.select ) ) {\n            clock.set( 'select', value, options )\n        }\n        if ( clockItem.highlight && clock.disabled( clockItem.highlight ) ) {\n            clock.set( 'highlight', value, options )\n        }\n        if ( type == 'min' ) {\n            clock.set( 'max', clockItem.max, options )\n        }\n    }\n\n    return clock\n} //TimePicker.prototype.set\n\n\n/**\n * Get a timepicker item object.\n */\nTimePicker.prototype.get = function( type ) {\n    return this.item[ type ]\n} //TimePicker.prototype.get\n\n\n/**\n * Create a picker time object.\n */\nTimePicker.prototype.create = function( type, value, options ) {\n\n    var clock = this\n\n    // If there’s no value, use the type as the value.\n    value = value === undefined ? type : value\n\n    // If it’s a date object, convert it into an array.\n    if ( _.isDate( value ) ) {\n        value = [ value.getHours(), value.getMinutes() ]\n    }\n\n    // If it’s an object, use the “pick” value.\n    if ( $.isPlainObject( value ) && _.isInteger( value.pick ) ) {\n        value = value.pick\n    }\n\n    // If it’s an array, convert it into minutes.\n    else if ( $.isArray( value ) ) {\n        value = +value[ 0 ] * MINUTES_IN_HOUR + (+value[ 1 ])\n    }\n\n    // If no valid value is passed, set it to “now”.\n    else if ( !_.isInteger( value ) ) {\n        value = clock.now( type, value, options )\n    }\n\n    // If we’re setting the max, make sure it’s greater than the min.\n    if ( type == 'max' && value < clock.item.min.pick ) {\n        value += MINUTES_IN_DAY\n    }\n\n    // If the value doesn’t fall directly on the interval,\n    // add one interval to indicate it as “passed”.\n    if ( type != 'min' && type != 'max' && (value - clock.item.min.pick) % clock.item.interval !== 0 ) {\n        value += clock.item.interval\n    }\n\n    // Normalize it into a “reachable” interval.\n    value = clock.normalize( type, value, options )\n\n    // Return the compiled object.\n    return {\n\n        // Divide to get hours from minutes.\n        hour: ~~( HOURS_IN_DAY + value / MINUTES_IN_HOUR ) % HOURS_IN_DAY,\n\n        // The remainder is the minutes.\n        mins: ( MINUTES_IN_HOUR + value % MINUTES_IN_HOUR ) % MINUTES_IN_HOUR,\n\n        // The time in total minutes.\n        time: ( MINUTES_IN_DAY + value ) % MINUTES_IN_DAY,\n\n        // Reference to the “relative” value to pick.\n        pick: value % MINUTES_IN_DAY\n    }\n} //TimePicker.prototype.create\n\n\n/**\n * Create a range limit object using an array, date object,\n * literal “true”, or integer relative to another time.\n */\nTimePicker.prototype.createRange = function( from, to ) {\n\n    var clock = this,\n        createTime = function( time ) {\n            if ( time === true || $.isArray( time ) || _.isDate( time ) ) {\n                return clock.create( time )\n            }\n            return time\n        }\n\n    // Create objects if possible.\n    if ( !_.isInteger( from ) ) {\n        from = createTime( from )\n    }\n    if ( !_.isInteger( to ) ) {\n        to = createTime( to )\n    }\n\n    // Create relative times.\n    if ( _.isInteger( from ) && $.isPlainObject( to ) ) {\n        from = [ to.hour, to.mins + ( from * clock.settings.interval ) ];\n    }\n    else if ( _.isInteger( to ) && $.isPlainObject( from ) ) {\n        to = [ from.hour, from.mins + ( to * clock.settings.interval ) ];\n    }\n\n    return {\n        from: createTime( from ),\n        to: createTime( to )\n    }\n} //TimePicker.prototype.createRange\n\n\n/**\n * Check if a time unit falls within a time range object.\n */\nTimePicker.prototype.withinRange = function( range, timeUnit ) {\n    range = this.createRange(range.from, range.to)\n    return timeUnit.pick >= range.from.pick && timeUnit.pick <= range.to.pick\n}\n\n\n/**\n * Check if two time range objects overlap.\n */\nTimePicker.prototype.overlapRanges = function( one, two ) {\n\n    var clock = this\n\n    // Convert the ranges into comparable times.\n    one = clock.createRange( one.from, one.to )\n    two = clock.createRange( two.from, two.to )\n\n    return clock.withinRange( one, two.from ) || clock.withinRange( one, two.to ) ||\n        clock.withinRange( two, one.from ) || clock.withinRange( two, one.to )\n}\n\n\n/**\n * Get the time relative to now.\n */\nTimePicker.prototype.now = function( type, value/*, options*/ ) {\n\n    var interval = this.item.interval,\n        date = new Date(),\n        nowMinutes = date.getHours() * MINUTES_IN_HOUR + date.getMinutes(),\n        isValueInteger = _.isInteger( value ),\n        isBelowInterval\n\n    // Make sure “now” falls within the interval range.\n    nowMinutes -= nowMinutes % interval\n\n    // Check if the difference is less than the interval itself.\n    isBelowInterval = value < 0 && interval * value + nowMinutes <= -interval\n\n    // Add an interval because the time has “passed”.\n    nowMinutes += type == 'min' && isBelowInterval ? 0 : interval\n\n    // If the value is a number, adjust by that many intervals.\n    if ( isValueInteger ) {\n        nowMinutes += interval * (\n            isBelowInterval && type != 'max' ?\n                value + 1 :\n                value\n            )\n    }\n\n    // Return the final calculation.\n    return nowMinutes\n} //TimePicker.prototype.now\n\n\n/**\n * Normalize minutes to be “reachable” based on the min and interval.\n */\nTimePicker.prototype.normalize = function( type, value/*, options*/ ) {\n\n    var interval = this.item.interval,\n        minTime = this.item.min && this.item.min.pick || 0\n\n    // If setting min time, don’t shift anything.\n    // Otherwise get the value and min difference and then\n    // normalize the difference with the interval.\n    value -= type == 'min' ? 0 : ( value - minTime ) % interval\n\n    // Return the adjusted value.\n    return value\n} //TimePicker.prototype.normalize\n\n\n/**\n * Measure the range of minutes.\n */\nTimePicker.prototype.measure = function( type, value, options ) {\n\n    var clock = this\n\n    // If it’s anything false-y, set it to the default.\n    if ( !value ) {\n        value = type == 'min' ? [ 0, 0 ] : [ HOURS_IN_DAY - 1, MINUTES_IN_HOUR - 1 ]\n    }\n\n    // If it’s a string, parse it.\n    if ( typeof value == 'string' ) {\n        value = clock.parse( type, value )\n    }\n\n    // If it’s a literal true, or an integer, make it relative to now.\n    else if ( value === true || _.isInteger( value ) ) {\n        value = clock.now( type, value, options )\n    }\n\n    // If it’s an object already, just normalize it.\n    else if ( $.isPlainObject( value ) && _.isInteger( value.pick ) ) {\n        value = clock.normalize( type, value.pick, options )\n    }\n\n    return value\n} ///TimePicker.prototype.measure\n\n\n/**\n * Validate an object as enabled.\n */\nTimePicker.prototype.validate = function( type, timeObject, options ) {\n\n    var clock = this,\n        interval = options && options.interval ? options.interval : clock.item.interval\n\n    // Check if the object is disabled.\n    if ( clock.disabled( timeObject ) ) {\n\n        // Shift with the interval until we reach an enabled time.\n        timeObject = clock.shift( timeObject, interval )\n    }\n\n    // Scope the object into range.\n    timeObject = clock.scope( timeObject )\n\n    // Do a second check to see if we landed on a disabled min/max.\n    // In that case, shift using the opposite interval as before.\n    if ( clock.disabled( timeObject ) ) {\n        timeObject = clock.shift( timeObject, interval * -1 )\n    }\n\n    // Return the final object.\n    return timeObject\n} //TimePicker.prototype.validate\n\n\n/**\n * Check if an object is disabled.\n */\nTimePicker.prototype.disabled = function( timeToVerify ) {\n\n    var clock = this,\n\n        // Filter through the disabled times to check if this is one.\n        isDisabledMatch = clock.item.disable.filter( function( timeToDisable ) {\n\n            // If the time is a number, match the hours.\n            if ( _.isInteger( timeToDisable ) ) {\n                return timeToVerify.hour == timeToDisable\n            }\n\n            // If it’s an array, create the object and match the times.\n            if ( $.isArray( timeToDisable ) || _.isDate( timeToDisable ) ) {\n                return timeToVerify.pick == clock.create( timeToDisable ).pick\n            }\n\n            // If it’s an object, match a time within the “from” and “to” range.\n            if ( $.isPlainObject( timeToDisable ) ) {\n                return clock.withinRange( timeToDisable, timeToVerify )\n            }\n        })\n\n    // If this time matches a disabled time, confirm it’s not inverted.\n    isDisabledMatch = isDisabledMatch.length && !isDisabledMatch.filter(function( timeToDisable ) {\n        return $.isArray( timeToDisable ) && timeToDisable[2] == 'inverted' ||\n            $.isPlainObject( timeToDisable ) && timeToDisable.inverted\n    }).length\n\n    // If the clock is \"enabled\" flag is flipped, flip the condition.\n    return clock.item.enable === -1 ? !isDisabledMatch : isDisabledMatch ||\n        timeToVerify.pick < clock.item.min.pick ||\n        timeToVerify.pick > clock.item.max.pick\n} //TimePicker.prototype.disabled\n\n\n/**\n * Shift an object by an interval until we reach an enabled object.\n */\nTimePicker.prototype.shift = function( timeObject, interval ) {\n\n    var clock = this,\n        minLimit = clock.item.min.pick,\n        maxLimit = clock.item.max.pick/*,\n        safety = 1000*/\n\n    interval = interval || clock.item.interval\n\n    // Keep looping as long as the time is disabled.\n    while ( /*safety &&*/ clock.disabled( timeObject ) ) {\n\n        /*safety -= 1\n        if ( !safety ) {\n            throw 'Fell into an infinite loop while shifting to ' + timeObject.hour + ':' + timeObject.mins + '.'\n        }*/\n\n        // Increase/decrease the time by the interval and keep looping.\n        timeObject = clock.create( timeObject.pick += interval )\n\n        // If we've looped beyond the limits, break out of the loop.\n        if ( timeObject.pick <= minLimit || timeObject.pick >= maxLimit ) {\n            break\n        }\n    }\n\n    // Return the final object.\n    return timeObject\n} //TimePicker.prototype.shift\n\n\n/**\n * Scope an object to be within range of min and max.\n */\nTimePicker.prototype.scope = function( timeObject ) {\n    var minLimit = this.item.min.pick,\n        maxLimit = this.item.max.pick\n    return this.create( timeObject.pick > maxLimit ? maxLimit : timeObject.pick < minLimit ? minLimit : timeObject )\n} //TimePicker.prototype.scope\n\n\n/**\n * Parse a string into a usable type.\n */\nTimePicker.prototype.parse = function( type, value, options ) {\n\n    var hour, minutes, isPM, item, parseValue,\n        clock = this,\n        parsingObject = {}\n\n    // If it’s already parsed, we’re good.\n    if ( !value || typeof value != 'string' ) {\n        return value\n    }\n\n    // We need a `.format` to parse the value with.\n    if ( !( options && options.format ) ) {\n        options = options || {}\n        options.format = clock.settings.format\n    }\n\n    // Convert the format into an array and then map through it.\n    clock.formats.toArray( options.format ).map( function( label ) {\n\n        var\n            substring,\n\n            // Grab the formatting label.\n            formattingLabel = clock.formats[ label ],\n\n            // The format length is from the formatting label function or the\n            // label length without the escaping exclamation (!) mark.\n            formatLength = formattingLabel ?\n                _.trigger( formattingLabel, clock, [ value, parsingObject ] ) :\n                label.replace( /^!/, '' ).length\n\n        // If there's a format label, split the value up to the format length.\n        // Then add it to the parsing object with appropriate label.\n        if ( formattingLabel ) {\n            substring = value.substr( 0, formatLength )\n            parsingObject[ label ] = substring.match(/^\\d+$/) ? +substring : substring\n        }\n\n        // Update the time value as the substring from format length to end.\n        value = value.substr( formatLength )\n    })\n\n    // Grab the hour and minutes from the parsing object.\n    for ( item in parsingObject ) {\n        parseValue = parsingObject[item]\n        if ( _.isInteger(parseValue) ) {\n            if ( item.match(/^(h|hh)$/i) ) {\n                hour = parseValue\n                if ( item == 'h' || item == 'hh' ) {\n                    hour %= 12\n                }\n            }\n            else if ( item == 'i' ) {\n                minutes = parseValue\n            }\n        }\n        else if ( item.match(/^a$/i) && parseValue.match(/^p/i) && ('h' in parsingObject || 'hh' in parsingObject) ) {\n            isPM = true\n        }\n    }\n\n    // Calculate it in minutes and return.\n    return (isPM ? hour + 12 : hour) * MINUTES_IN_HOUR + minutes\n} //TimePicker.prototype.parse\n\n\n/**\n * Various formats to display the object in.\n */\nTimePicker.prototype.formats = {\n\n    h: function( string, timeObject ) {\n\n        // If there's string, then get the digits length.\n        // Otherwise return the selected hour in \"standard\" format.\n        return string ? _.digits( string ) : timeObject.hour % HOURS_TO_NOON || HOURS_TO_NOON\n    },\n    hh: function( string, timeObject ) {\n\n        // If there's a string, then the length is always 2.\n        // Otherwise return the selected hour in \"standard\" format with a leading zero.\n        return string ? 2 : _.lead( timeObject.hour % HOURS_TO_NOON || HOURS_TO_NOON )\n    },\n    H: function( string, timeObject ) {\n\n        // If there's string, then get the digits length.\n        // Otherwise return the selected hour in \"military\" format as a string.\n        return string ? _.digits( string ) : '' + ( timeObject.hour % 24 )\n    },\n    HH: function( string, timeObject ) {\n\n        // If there's string, then get the digits length.\n        // Otherwise return the selected hour in \"military\" format with a leading zero.\n        return string ? _.digits( string ) : _.lead( timeObject.hour % 24 )\n    },\n    i: function( string, timeObject ) {\n\n        // If there's a string, then the length is always 2.\n        // Otherwise return the selected minutes.\n        return string ? 2 : _.lead( timeObject.mins )\n    },\n    a: function( string, timeObject ) {\n\n        // If there's a string, then the length is always 4.\n        // Otherwise check if it's more than \"noon\" and return either am/pm.\n        return string ? 4 : MINUTES_IN_DAY / 2 > timeObject.time % MINUTES_IN_DAY ? 'a.m.' : 'p.m.'\n    },\n    A: function( string, timeObject ) {\n\n        // If there's a string, then the length is always 2.\n        // Otherwise check if it's more than \"noon\" and return either am/pm.\n        return string ? 2 : MINUTES_IN_DAY / 2 > timeObject.time % MINUTES_IN_DAY ? 'AM' : 'PM'\n    },\n\n    // Create an array by splitting the formatting string passed.\n    toArray: function( formatString ) { return formatString.split( /(h{1,2}|H{1,2}|i|a|A|!.)/g ) },\n\n    // Format an object into a string using the formatting options.\n    toString: function ( formatString, itemObject ) {\n        var clock = this\n        return clock.formats.toArray( formatString ).map( function( label ) {\n            return _.trigger( clock.formats[ label ], clock, [ 0, itemObject ] ) || label.replace( /^!/, '' )\n        }).join( '' )\n    }\n} //TimePicker.prototype.formats\n\n\n\n\n/**\n * Check if two time units are the exact.\n */\nTimePicker.prototype.isTimeExact = function( one, two ) {\n\n    var clock = this\n\n    // When we’re working with minutes, do a direct comparison.\n    if (\n        ( _.isInteger( one ) && _.isInteger( two ) ) ||\n        ( typeof one == 'boolean' && typeof two == 'boolean' )\n     ) {\n        return one === two\n    }\n\n    // When we’re working with time representations, compare the “pick” value.\n    if (\n        ( _.isDate( one ) || $.isArray( one ) ) &&\n        ( _.isDate( two ) || $.isArray( two ) )\n    ) {\n        return clock.create( one ).pick === clock.create( two ).pick\n    }\n\n    // When we’re working with range objects, compare the “from” and “to”.\n    if ( $.isPlainObject( one ) && $.isPlainObject( two ) ) {\n        return clock.isTimeExact( one.from, two.from ) && clock.isTimeExact( one.to, two.to )\n    }\n\n    return false\n}\n\n\n/**\n * Check if two time units overlap.\n */\nTimePicker.prototype.isTimeOverlap = function( one, two ) {\n\n    var clock = this\n\n    // When we’re working with an integer, compare the hours.\n    if ( _.isInteger( one ) && ( _.isDate( two ) || $.isArray( two ) ) ) {\n        return one === clock.create( two ).hour\n    }\n    if ( _.isInteger( two ) && ( _.isDate( one ) || $.isArray( one ) ) ) {\n        return two === clock.create( one ).hour\n    }\n\n    // When we’re working with range objects, check if the ranges overlap.\n    if ( $.isPlainObject( one ) && $.isPlainObject( two ) ) {\n        return clock.overlapRanges( one, two )\n    }\n\n    return false\n}\n\n\n/**\n * Flip the “enabled” state.\n */\nTimePicker.prototype.flipEnable = function(val) {\n    var itemObject = this.item\n    itemObject.enable = val || (itemObject.enable == -1 ? 1 : -1)\n}\n\n\n/**\n * Mark a collection of times as “disabled”.\n */\nTimePicker.prototype.deactivate = function( type, timesToDisable ) {\n\n    var clock = this,\n        disabledItems = clock.item.disable.slice(0)\n\n\n    // If we’re flipping, that’s all we need to do.\n    if ( timesToDisable == 'flip' ) {\n        clock.flipEnable()\n    }\n\n    else if ( timesToDisable === false ) {\n        clock.flipEnable(1)\n        disabledItems = []\n    }\n\n    else if ( timesToDisable === true ) {\n        clock.flipEnable(-1)\n        disabledItems = []\n    }\n\n    // Otherwise go through the times to disable.\n    else {\n\n        timesToDisable.map(function( unitToDisable ) {\n\n            var matchFound\n\n            // When we have disabled items, check for matches.\n            // If something is matched, immediately break out.\n            for ( var index = 0; index < disabledItems.length; index += 1 ) {\n                if ( clock.isTimeExact( unitToDisable, disabledItems[index] ) ) {\n                    matchFound = true\n                    break\n                }\n            }\n\n            // If nothing was found, add the validated unit to the collection.\n            if ( !matchFound ) {\n                if (\n                    _.isInteger( unitToDisable ) ||\n                    _.isDate( unitToDisable ) ||\n                    $.isArray( unitToDisable ) ||\n                    ( $.isPlainObject( unitToDisable ) && unitToDisable.from && unitToDisable.to )\n                ) {\n                    disabledItems.push( unitToDisable )\n                }\n            }\n        })\n    }\n\n    // Return the updated collection.\n    return disabledItems\n} //TimePicker.prototype.deactivate\n\n\n/**\n * Mark a collection of times as “enabled”.\n */\nTimePicker.prototype.activate = function( type, timesToEnable ) {\n\n    var clock = this,\n        disabledItems = clock.item.disable,\n        disabledItemsCount = disabledItems.length\n\n    // If we’re flipping, that’s all we need to do.\n    if ( timesToEnable == 'flip' ) {\n        clock.flipEnable()\n    }\n\n    else if ( timesToEnable === true ) {\n        clock.flipEnable(1)\n        disabledItems = []\n    }\n\n    else if ( timesToEnable === false ) {\n        clock.flipEnable(-1)\n        disabledItems = []\n    }\n\n    // Otherwise go through the disabled times.\n    else {\n\n        timesToEnable.map(function( unitToEnable ) {\n\n            var matchFound,\n                disabledUnit,\n                index,\n                isRangeMatched\n\n            // Go through the disabled items and try to find a match.\n            for ( index = 0; index < disabledItemsCount; index += 1 ) {\n\n                disabledUnit = disabledItems[index]\n\n                // When an exact match is found, remove it from the collection.\n                if ( clock.isTimeExact( disabledUnit, unitToEnable ) ) {\n                    matchFound = disabledItems[index] = null\n                    isRangeMatched = true\n                    break\n                }\n\n                // When an overlapped match is found, add the “inverted” state to it.\n                else if ( clock.isTimeOverlap( disabledUnit, unitToEnable ) ) {\n                    if ( $.isPlainObject( unitToEnable ) ) {\n                        unitToEnable.inverted = true\n                        matchFound = unitToEnable\n                    }\n                    else if ( $.isArray( unitToEnable ) ) {\n                        matchFound = unitToEnable\n                        if ( !matchFound[2] ) matchFound.push( 'inverted' )\n                    }\n                    else if ( _.isDate( unitToEnable ) ) {\n                        matchFound = [ unitToEnable.getFullYear(), unitToEnable.getMonth(), unitToEnable.getDate(), 'inverted' ]\n                    }\n                    break\n                }\n            }\n\n            // If a match was found, remove a previous duplicate entry.\n            if ( matchFound ) for ( index = 0; index < disabledItemsCount; index += 1 ) {\n                if ( clock.isTimeExact( disabledItems[index], unitToEnable ) ) {\n                    disabledItems[index] = null\n                    break\n                }\n            }\n\n            // In the event that we’re dealing with an overlap of range times,\n            // make sure there are no “inverted” times because of it.\n            if ( isRangeMatched ) for ( index = 0; index < disabledItemsCount; index += 1 ) {\n                if ( clock.isTimeOverlap( disabledItems[index], unitToEnable ) ) {\n                    disabledItems[index] = null\n                    break\n                }\n            }\n\n            // If something is still matched, add it into the collection.\n            if ( matchFound ) {\n                disabledItems.push( matchFound )\n            }\n        })\n    }\n\n    // Return the updated collection.\n    return disabledItems.filter(function( val ) { return val != null })\n} //TimePicker.prototype.activate\n\n\n/**\n * The division to use for the range intervals.\n */\nTimePicker.prototype.i = function( type, value/*, options*/ ) {\n    return _.isInteger( value ) && value > 0 ? value : this.item.interval\n}\n\n\n/**\n * Create a string for the nodes in the picker.\n */\nTimePicker.prototype.nodes = function( isOpen ) {\n\n    var\n        clock = this,\n        settings = clock.settings,\n        selectedObject = clock.item.select,\n        highlightedObject = clock.item.highlight,\n        viewsetObject = clock.item.view,\n        disabledCollection = clock.item.disable\n\n    return _.node(\n        'ul',\n        _.group({\n            min: clock.item.min.pick,\n            max: clock.item.max.pick,\n            i: clock.item.interval,\n            node: 'li',\n            item: function( loopedTime ) {\n                loopedTime = clock.create( loopedTime )\n                var timeMinutes = loopedTime.pick,\n                    isSelected = selectedObject && selectedObject.pick == timeMinutes,\n                    isHighlighted = highlightedObject && highlightedObject.pick == timeMinutes,\n                    isDisabled = disabledCollection && clock.disabled( loopedTime ),\n                    formattedTime = _.trigger( clock.formats.toString, clock, [ settings.format, loopedTime ] )\n                return [\n                    _.trigger( clock.formats.toString, clock, [ _.trigger( settings.formatLabel, clock, [ loopedTime ] ) || settings.format, loopedTime ] ),\n                    (function( klasses ) {\n\n                        if ( isSelected ) {\n                            klasses.push( settings.klass.selected )\n                        }\n\n                        if ( isHighlighted ) {\n                            klasses.push( settings.klass.highlighted )\n                        }\n\n                        if ( viewsetObject && viewsetObject.pick == timeMinutes ) {\n                            klasses.push( settings.klass.viewset )\n                        }\n\n                        if ( isDisabled ) {\n                            klasses.push( settings.klass.disabled )\n                        }\n\n                        return klasses.join( ' ' )\n                    })( [ settings.klass.listItem ] ),\n                    'data-pick=' + loopedTime.pick + ' ' + _.ariaAttr({\n                        role: 'option',\n                        label: formattedTime,\n                        selected: isSelected && clock.$node.val() === formattedTime ? true : null,\n                        activedescendant: isHighlighted ? true : null,\n                        disabled: isDisabled ? true : null\n                    })\n                ]\n            }\n        }) +\n\n        // * For Firefox forms to submit, make sure to set the button’s `type` attribute as “button”.\n        _.node(\n            'li',\n            _.node(\n                'button',\n                settings.clear,\n                settings.klass.buttonClear,\n                'type=button data-clear=1' + ( isOpen ? '' : ' disabled' ) + ' ' +\n                _.ariaAttr({ controls: clock.$node[0].id })\n            ),\n            '', _.ariaAttr({ role: 'presentation' })\n        ),\n        settings.klass.list,\n        _.ariaAttr({ role: 'listbox', controls: clock.$node[0].id })\n    )\n} //TimePicker.prototype.nodes\n\n\n\n\n\n\n\n/**\n * Extend the picker to add the component with the defaults.\n */\nTimePicker.defaults = (function( prefix ) {\n\n    return {\n\n        // Clear\n        clear: 'Clear',\n\n        // The format to show on the `input` element\n        format: 'h:i A',\n\n        // The interval between each time\n        interval: 30,\n\n        // Picker close behavior\n        closeOnSelect: true,\n        closeOnClear: true,\n\n        // Classes\n        klass: {\n\n            picker: prefix + ' ' + prefix + '--time',\n            holder: prefix + '__holder',\n\n            list: prefix + '__list',\n            listItem: prefix + '__list-item',\n\n            disabled: prefix + '__list-item--disabled',\n            selected: prefix + '__list-item--selected',\n            highlighted: prefix + '__list-item--highlighted',\n            viewset: prefix + '__list-item--viewset',\n            now: prefix + '__list-item--now',\n\n            buttonClear: prefix + '__button--clear'\n        }\n    }\n})( Picker.klasses().picker )\n\n\n\n\n\n/**\n * Extend the picker to add the time picker.\n */\nPicker.extend( 'pickatime', TimePicker )\n\n\n}));\n\n\n\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/picker.date.js":"/*!\n * Date picker for pickadate.js v3.5.6\n * http://amsul.github.io/pickadate.js/date.htm\n */\n!function(a){\"function\"==typeof define&&define.amd?define([\"picker\",\"jquery\"],a):\"object\"==typeof exports?module.exports=a(require(\"./picker.js\"),require(\"jquery\")):a(Picker,jQuery)}(function(a,b){function c(a,b){var c=this,d=a.$node[0],e=d.value,f=a.$node.data(\"value\"),g=f||e,h=f?b.formatSubmit:b.format,i=function(){return d.currentStyle?\"rtl\"==d.currentStyle.direction:\"rtl\"==getComputedStyle(a.$root[0]).direction};c.settings=b,c.$node=a.$node,c.queue={min:\"measure create\",max:\"measure create\",now:\"now create\",select:\"parse create validate\",highlight:\"parse navigate create validate\",view:\"parse create validate viewset\",disable:\"deactivate\",enable:\"activate\"},c.item={},c.item.clear=null,c.item.disable=(b.disable||[]).slice(0),c.item.enable=-function(a){return a[0]===!0?a.shift():-1}(c.item.disable),c.set(\"min\",b.min).set(\"max\",b.max).set(\"now\"),g?c.set(\"select\",g,{format:h,defaultValue:!0}):c.set(\"select\",null).set(\"highlight\",c.item.now),c.key={40:7,38:-7,39:function(){return i()?-1:1},37:function(){return i()?1:-1},go:function(a){var b=c.item.highlight,d=new Date(b.year,b.month,b.date+a);c.set(\"highlight\",d,{interval:a}),this.render()}},a.on(\"render\",function(){a.$root.find(\".\"+b.klass.selectMonth).on(\"change\",function(){var c=this.value;c&&(a.set(\"highlight\",[a.get(\"view\").year,c,a.get(\"highlight\").date]),a.$root.find(\".\"+b.klass.selectMonth).trigger(\"focus\"))}),a.$root.find(\".\"+b.klass.selectYear).on(\"change\",function(){var c=this.value;c&&(a.set(\"highlight\",[c,a.get(\"view\").month,a.get(\"highlight\").date]),a.$root.find(\".\"+b.klass.selectYear).trigger(\"focus\"))})},1).on(\"open\",function(){var d=\"\";c.disabled(c.get(\"now\"))&&(d=\":not(.\"+b.klass.buttonToday+\")\"),a.$root.find(\"button\"+d+\", select\").attr(\"disabled\",!1)},1).on(\"close\",function(){a.$root.find(\"button, select\").attr(\"disabled\",!0)},1)}var d=7,e=6,f=a._;c.prototype.set=function(a,b,c){var d=this,e=d.item;return null===b?(\"clear\"==a&&(a=\"select\"),e[a]=b,d):(e[\"enable\"==a?\"disable\":\"flip\"==a?\"enable\":a]=d.queue[a].split(\" \").map(function(e){return b=d[e](a,b,c)}).pop(),\"select\"==a?d.set(\"highlight\",e.select,c):\"highlight\"==a?d.set(\"view\",e.highlight,c):a.match(/^(flip|min|max|disable|enable)$/)&&(e.select&&d.disabled(e.select)&&d.set(\"select\",e.select,c),e.highlight&&d.disabled(e.highlight)&&d.set(\"highlight\",e.highlight,c)),d)},c.prototype.get=function(a){return this.item[a]},c.prototype.create=function(a,c,d){var e,g=this;return c=void 0===c?a:c,c==-(1/0)||c==1/0?e=c:b.isPlainObject(c)&&f.isInteger(c.pick)?c=c.obj:b.isArray(c)?(c=new Date(c[0],c[1],c[2]),c=f.isDate(c)?c:g.create().obj):c=f.isInteger(c)||f.isDate(c)?g.normalize(new Date(c),d):g.now(a,c,d),{year:e||c.getFullYear(),month:e||c.getMonth(),date:e||c.getDate(),day:e||c.getDay(),obj:e||c,pick:e||c.getTime()}},c.prototype.createRange=function(a,c){var d=this,e=function(a){return a===!0||b.isArray(a)||f.isDate(a)?d.create(a):a};return f.isInteger(a)||(a=e(a)),f.isInteger(c)||(c=e(c)),f.isInteger(a)&&b.isPlainObject(c)?a=[c.year,c.month,c.date+a]:f.isInteger(c)&&b.isPlainObject(a)&&(c=[a.year,a.month,a.date+c]),{from:e(a),to:e(c)}},c.prototype.withinRange=function(a,b){return a=this.createRange(a.from,a.to),b.pick>=a.from.pick&&b.pick<=a.to.pick},c.prototype.overlapRanges=function(a,b){var c=this;return a=c.createRange(a.from,a.to),b=c.createRange(b.from,b.to),c.withinRange(a,b.from)||c.withinRange(a,b.to)||c.withinRange(b,a.from)||c.withinRange(b,a.to)},c.prototype.now=function(a,b,c){return b=new Date,c&&c.rel&&b.setDate(b.getDate()+c.rel),this.normalize(b,c)},c.prototype.navigate=function(a,c,d){var e,f,g,h,i=b.isArray(c),j=b.isPlainObject(c),k=this.item.view;if(i||j){for(j?(f=c.year,g=c.month,h=c.date):(f=+c[0],g=+c[1],h=+c[2]),d&&d.nav&&k&&k.month!==g&&(f=k.year,g=k.month),e=new Date(f,g+(d&&d.nav?d.nav:0),1),f=e.getFullYear(),g=e.getMonth();new Date(f,g,h).getMonth()!==g;)h-=1;c=[f,g,h]}return c},c.prototype.normalize=function(a){return a.setHours(0,0,0,0),a},c.prototype.measure=function(a,b){var c=this;return b?\"string\"==typeof b?b=c.parse(a,b):f.isInteger(b)&&(b=c.now(a,b,{rel:b})):b=\"min\"==a?-(1/0):1/0,b},c.prototype.viewset=function(a,b){return this.create([b.year,b.month,1])},c.prototype.validate=function(a,c,d){var e,g,h,i,j=this,k=c,l=d&&d.interval?d.interval:1,m=-1===j.item.enable,n=j.item.min,o=j.item.max,p=m&&j.item.disable.filter(function(a){if(b.isArray(a)){var d=j.create(a).pick;d<c.pick?e=!0:d>c.pick&&(g=!0)}return f.isInteger(a)}).length;if((!d||!d.nav&&!d.defaultValue)&&(!m&&j.disabled(c)||m&&j.disabled(c)&&(p||e||g)||!m&&(c.pick<=n.pick||c.pick>=o.pick)))for(m&&!p&&(!g&&l>0||!e&&0>l)&&(l*=-1);j.disabled(c)&&(Math.abs(l)>1&&(c.month<k.month||c.month>k.month)&&(c=k,l=l>0?1:-1),c.pick<=n.pick?(h=!0,l=1,c=j.create([n.year,n.month,n.date+(c.pick===n.pick?0:-1)])):c.pick>=o.pick&&(i=!0,l=-1,c=j.create([o.year,o.month,o.date+(c.pick===o.pick?0:1)])),!h||!i);)c=j.create([c.year,c.month,c.date+l]);return c},c.prototype.disabled=function(a){var c=this,d=c.item.disable.filter(function(d){return f.isInteger(d)?a.day===(c.settings.firstDay?d:d-1)%7:b.isArray(d)||f.isDate(d)?a.pick===c.create(d).pick:b.isPlainObject(d)?c.withinRange(d,a):void 0});return d=d.length&&!d.filter(function(a){return b.isArray(a)&&\"inverted\"==a[3]||b.isPlainObject(a)&&a.inverted}).length,-1===c.item.enable?!d:d||a.pick<c.item.min.pick||a.pick>c.item.max.pick},c.prototype.parse=function(a,b,c){var d=this,e={};return b&&\"string\"==typeof b?(c&&c.format||(c=c||{},c.format=d.settings.format),d.formats.toArray(c.format).map(function(a){var c=d.formats[a],g=c?f.trigger(c,d,[b,e]):a.replace(/^!/,\"\").length;c&&(e[a]=b.substr(0,g)),b=b.substr(g)}),[e.yyyy||e.yy,+(e.mm||e.m)-1,e.dd||e.d]):b},c.prototype.formats=function(){function a(a,b,c){var d=a.match(/[^\\x00-\\x7F]+|\\w+/)[0];return c.mm||c.m||(c.m=b.indexOf(d)+1),d.length}function b(a){return a.match(/\\w+/)[0].length}return{d:function(a,b){return a?f.digits(a):b.date},dd:function(a,b){return a?2:f.lead(b.date)},ddd:function(a,c){return a?b(a):this.settings.weekdaysShort[c.day]},dddd:function(a,c){return a?b(a):this.settings.weekdaysFull[c.day]},m:function(a,b){return a?f.digits(a):b.month+1},mm:function(a,b){return a?2:f.lead(b.month+1)},mmm:function(b,c){var d=this.settings.monthsShort;return b?a(b,d,c):d[c.month]},mmmm:function(b,c){var d=this.settings.monthsFull;return b?a(b,d,c):d[c.month]},yy:function(a,b){return a?2:(\"\"+b.year).slice(2)},yyyy:function(a,b){return a?4:b.year},toArray:function(a){return a.split(/(d{1,4}|m{1,4}|y{4}|yy|!.)/g)},toString:function(a,b){var c=this;return c.formats.toArray(a).map(function(a){return f.trigger(c.formats[a],c,[0,b])||a.replace(/^!/,\"\")}).join(\"\")}}}(),c.prototype.isDateExact=function(a,c){var d=this;return f.isInteger(a)&&f.isInteger(c)||\"boolean\"==typeof a&&\"boolean\"==typeof c?a===c:(f.isDate(a)||b.isArray(a))&&(f.isDate(c)||b.isArray(c))?d.create(a).pick===d.create(c).pick:b.isPlainObject(a)&&b.isPlainObject(c)?d.isDateExact(a.from,c.from)&&d.isDateExact(a.to,c.to):!1},c.prototype.isDateOverlap=function(a,c){var d=this,e=d.settings.firstDay?1:0;return f.isInteger(a)&&(f.isDate(c)||b.isArray(c))?(a=a%7+e,a===d.create(c).day+1):f.isInteger(c)&&(f.isDate(a)||b.isArray(a))?(c=c%7+e,c===d.create(a).day+1):b.isPlainObject(a)&&b.isPlainObject(c)?d.overlapRanges(a,c):!1},c.prototype.flipEnable=function(a){var b=this.item;b.enable=a||(-1==b.enable?1:-1)},c.prototype.deactivate=function(a,c){var d=this,e=d.item.disable.slice(0);return\"flip\"==c?d.flipEnable():c===!1?(d.flipEnable(1),e=[]):c===!0?(d.flipEnable(-1),e=[]):c.map(function(a){for(var c,g=0;g<e.length;g+=1)if(d.isDateExact(a,e[g])){c=!0;break}c||(f.isInteger(a)||f.isDate(a)||b.isArray(a)||b.isPlainObject(a)&&a.from&&a.to)&&e.push(a)}),e},c.prototype.activate=function(a,c){var d=this,e=d.item.disable,g=e.length;return\"flip\"==c?d.flipEnable():c===!0?(d.flipEnable(1),e=[]):c===!1?(d.flipEnable(-1),e=[]):c.map(function(a){var c,h,i,j;for(i=0;g>i;i+=1){if(h=e[i],d.isDateExact(h,a)){c=e[i]=null,j=!0;break}if(d.isDateOverlap(h,a)){b.isPlainObject(a)?(a.inverted=!0,c=a):b.isArray(a)?(c=a,c[3]||c.push(\"inverted\")):f.isDate(a)&&(c=[a.getFullYear(),a.getMonth(),a.getDate(),\"inverted\"]);break}}if(c)for(i=0;g>i;i+=1)if(d.isDateExact(e[i],a)){e[i]=null;break}if(j)for(i=0;g>i;i+=1)if(d.isDateOverlap(e[i],a)){e[i]=null;break}c&&e.push(c)}),e.filter(function(a){return null!=a})},c.prototype.nodes=function(a){var b=this,c=b.settings,g=b.item,h=g.now,i=g.select,j=g.highlight,k=g.view,l=g.disable,m=g.min,n=g.max,o=function(a,b){return c.firstDay&&(a.push(a.shift()),b.push(b.shift())),f.node(\"thead\",f.node(\"tr\",f.group({min:0,max:d-1,i:1,node:\"th\",item:function(d){return[a[d],c.klass.weekdays,'scope=col title=\"'+b[d]+'\"']}})))}((c.showWeekdaysFull?c.weekdaysFull:c.weekdaysShort).slice(0),c.weekdaysFull.slice(0)),p=function(a){return f.node(\"div\",\" \",c.klass[\"nav\"+(a?\"Next\":\"Prev\")]+(a&&k.year>=n.year&&k.month>=n.month||!a&&k.year<=m.year&&k.month<=m.month?\" \"+c.klass.navDisabled:\"\"),\"data-nav=\"+(a||-1)+\" \"+f.ariaAttr({role:\"button\",controls:b.$node[0].id+\"_table\"})+' title=\"'+(a?c.labelMonthNext:c.labelMonthPrev)+'\"')},q=function(){var d=c.showMonthsShort?c.monthsShort:c.monthsFull;return c.selectMonths?f.node(\"select\",f.group({min:0,max:11,i:1,node:\"option\",item:function(a){return[d[a],0,\"value=\"+a+(k.month==a?\" selected\":\"\")+(k.year==m.year&&a<m.month||k.year==n.year&&a>n.month?\" disabled\":\"\")]}}),c.klass.selectMonth,(a?\"\":\"disabled\")+\" \"+f.ariaAttr({controls:b.$node[0].id+\"_table\"})+' title=\"'+c.labelMonthSelect+'\"'):f.node(\"div\",d[k.month],c.klass.month)},r=function(){var d=k.year,e=c.selectYears===!0?5:~~(c.selectYears/2);if(e){var g=m.year,h=n.year,i=d-e,j=d+e;if(g>i&&(j+=g-i,i=g),j>h){var l=i-g,o=j-h;i-=l>o?o:l,j=h}return f.node(\"select\",f.group({min:i,max:j,i:1,node:\"option\",item:function(a){return[a,0,\"value=\"+a+(d==a?\" selected\":\"\")]}}),c.klass.selectYear,(a?\"\":\"disabled\")+\" \"+f.ariaAttr({controls:b.$node[0].id+\"_table\"})+' title=\"'+c.labelYearSelect+'\"')}return f.node(\"div\",d,c.klass.year)};return f.node(\"div\",(c.selectYears?r()+q():q()+r())+p()+p(1),c.klass.header)+f.node(\"table\",o+f.node(\"tbody\",f.group({min:0,max:e-1,i:1,node:\"tr\",item:function(a){var e=c.firstDay&&0===b.create([k.year,k.month,1]).day?-7:0;return[f.group({min:d*a-k.day+e+1,max:function(){return this.min+d-1},i:1,node:\"td\",item:function(a){a=b.create([k.year,k.month,a+(c.firstDay?1:0)]);var d=i&&i.pick==a.pick,e=j&&j.pick==a.pick,g=l&&b.disabled(a)||a.pick<m.pick||a.pick>n.pick,o=f.trigger(b.formats.toString,b,[c.format,a]);return[f.node(\"div\",a.date,function(b){return b.push(k.month==a.month?c.klass.infocus:c.klass.outfocus),h.pick==a.pick&&b.push(c.klass.now),d&&b.push(c.klass.selected),e&&b.push(c.klass.highlighted),g&&b.push(c.klass.disabled),b.join(\" \")}([c.klass.day]),\"data-pick=\"+a.pick+\" \"+f.ariaAttr({role:\"gridcell\",label:o,selected:d&&b.$node.val()===o?!0:null,activedescendant:e?!0:null,disabled:g?!0:null})),\"\",f.ariaAttr({role:\"presentation\"})]}})]}})),c.klass.table,'id=\"'+b.$node[0].id+'_table\" '+f.ariaAttr({role:\"grid\",controls:b.$node[0].id,readonly:!0}))+f.node(\"div\",f.node(\"button\",c.today,c.klass.buttonToday,\"type=button data-pick=\"+h.pick+(a&&!b.disabled(h)?\"\":\" disabled\")+\" \"+f.ariaAttr({controls:b.$node[0].id}))+f.node(\"button\",c.clear,c.klass.buttonClear,\"type=button data-clear=1\"+(a?\"\":\" disabled\")+\" \"+f.ariaAttr({controls:b.$node[0].id}))+f.node(\"button\",c.close,c.klass.buttonClose,\"type=button data-close=true \"+(a?\"\":\" disabled\")+\" \"+f.ariaAttr({controls:b.$node[0].id})),c.klass.footer)},c.defaults=function(a){return{labelMonthNext:\"Next month\",labelMonthPrev:\"Previous month\",labelMonthSelect:\"Select a month\",labelYearSelect:\"Select a year\",monthsFull:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthsShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],weekdaysFull:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],weekdaysShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],today:\"Today\",clear:\"Clear\",close:\"Close\",closeOnSelect:!0,closeOnClear:!0,format:\"d mmmm, yyyy\",klass:{table:a+\"table\",header:a+\"header\",navPrev:a+\"nav--prev\",navNext:a+\"nav--next\",navDisabled:a+\"nav--disabled\",month:a+\"month\",year:a+\"year\",selectMonth:a+\"select--month\",selectYear:a+\"select--year\",weekdays:a+\"weekday\",day:a+\"day\",disabled:a+\"day--disabled\",selected:a+\"day--selected\",highlighted:a+\"day--highlighted\",now:a+\"day--today\",infocus:a+\"day--infocus\",outfocus:a+\"day--outfocus\",footer:a+\"footer\",buttonClear:a+\"button--clear\",buttonToday:a+\"button--today\",buttonClose:a+\"button--close\"}}}(a.klasses().picker+\"__\"),a.extend(\"pickadate\",c)});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/picker.js":"/*!\n * pickadate.js v3.5.6, 2015/04/20\n * By Amsul, http://amsul.ca\n * Hosted on http://amsul.github.io/pickadate.js\n * Licensed under MIT\n */\n!function(a){\"function\"==typeof define&&define.amd?define(\"picker\",[\"jquery\"],a):\"object\"==typeof exports?module.exports=a(require(\"jquery\")):this.Picker=a(jQuery)}(function(a){function b(f,g,i,m){function n(){return b._.node(\"div\",b._.node(\"div\",b._.node(\"div\",b._.node(\"div\",B.component.nodes(w.open),y.box),y.wrap),y.frame),y.holder,'tabindex=\"-1\"')}function o(){z.data(g,B).addClass(y.input).val(z.data(\"value\")?B.get(\"select\",x.format):f.value),x.editable||z.on(\"focus.\"+w.id+\" click.\"+w.id,function(a){a.preventDefault(),B.open()}).on(\"keydown.\"+w.id,u),e(f,{haspopup:!0,expanded:!1,readonly:!1,owns:f.id+\"_root\"})}function p(){e(B.$root[0],\"hidden\",!0)}function q(){B.$holder.on({keydown:u,\"focus.toOpen\":t,blur:function(){z.removeClass(y.target)},focusin:function(a){B.$root.removeClass(y.focused),a.stopPropagation()},\"mousedown click\":function(b){var c=b.target;c!=B.$holder[0]&&(b.stopPropagation(),\"mousedown\"!=b.type||a(c).is(\"input, select, textarea, button, option\")||(b.preventDefault(),B.$holder[0].focus()))}}).on(\"click\",\"[data-pick], [data-nav], [data-clear], [data-close]\",function(){var b=a(this),c=b.data(),d=b.hasClass(y.navDisabled)||b.hasClass(y.disabled),e=h();e=e&&(e.type||e.href),(d||e&&!a.contains(B.$root[0],e))&&B.$holder[0].focus(),!d&&c.nav?B.set(\"highlight\",B.component.item.highlight,{nav:c.nav}):!d&&\"pick\"in c?(B.set(\"select\",c.pick),x.closeOnSelect&&B.close(!0)):c.clear?(B.clear(),x.closeOnClear&&B.close(!0)):c.close&&B.close(!0)})}function r(){var b;x.hiddenName===!0?(b=f.name,f.name=\"\"):(b=[\"string\"==typeof x.hiddenPrefix?x.hiddenPrefix:\"\",\"string\"==typeof x.hiddenSuffix?x.hiddenSuffix:\"_submit\"],b=b[0]+f.name+b[1]),B._hidden=a('<input type=hidden name=\"'+b+'\"'+(z.data(\"value\")||f.value?' value=\"'+B.get(\"select\",x.formatSubmit)+'\"':\"\")+\">\")[0],z.on(\"change.\"+w.id,function(){B._hidden.value=f.value?B.get(\"select\",x.formatSubmit):\"\"})}function s(){v&&l?B.$holder.find(\".\"+y.frame).one(\"transitionend\",function(){B.$holder[0].focus()}):B.$holder[0].focus()}function t(a){a.stopPropagation(),z.addClass(y.target),B.$root.addClass(y.focused),B.open()}function u(a){var b=a.keyCode,c=/^(8|46)$/.test(b);return 27==b?(B.close(!0),!1):void((32==b||c||!w.open&&B.component.key[b])&&(a.preventDefault(),a.stopPropagation(),c?B.clear().close():B.open()))}if(!f)return b;var v=!1,w={id:f.id||\"P\"+Math.abs(~~(Math.random()*new Date))},x=i?a.extend(!0,{},i.defaults,m):m||{},y=a.extend({},b.klasses(),x.klass),z=a(f),A=function(){return this.start()},B=A.prototype={constructor:A,$node:z,start:function(){return w&&w.start?B:(w.methods={},w.start=!0,w.open=!1,w.type=f.type,f.autofocus=f==h(),f.readOnly=!x.editable,f.id=f.id||w.id,\"text\"!=f.type&&(f.type=\"text\"),B.component=new i(B,x),B.$root=a('<div class=\"'+y.picker+'\" id=\"'+f.id+'_root\" />'),p(),B.$holder=a(n()).appendTo(B.$root),q(),x.formatSubmit&&r(),o(),x.containerHidden?a(x.containerHidden).append(B._hidden):z.after(B._hidden),x.container?a(x.container).append(B.$root):z.after(B.$root),B.on({start:B.component.onStart,render:B.component.onRender,stop:B.component.onStop,open:B.component.onOpen,close:B.component.onClose,set:B.component.onSet}).on({start:x.onStart,render:x.onRender,stop:x.onStop,open:x.onOpen,close:x.onClose,set:x.onSet}),v=c(B.$holder[0]),f.autofocus&&B.open(),B.trigger(\"start\").trigger(\"render\"))},render:function(b){return b?(B.$holder=a(n()),q(),B.$root.html(B.$holder)):B.$root.find(\".\"+y.box).html(B.component.nodes(w.open)),B.trigger(\"render\")},stop:function(){return w.start?(B.close(),B._hidden&&B._hidden.parentNode.removeChild(B._hidden),B.$root.remove(),z.removeClass(y.input).removeData(g),setTimeout(function(){z.off(\".\"+w.id)},0),f.type=w.type,f.readOnly=!1,B.trigger(\"stop\"),w.methods={},w.start=!1,B):B},open:function(c){return w.open?B:(z.addClass(y.active),e(f,\"expanded\",!0),setTimeout(function(){B.$root.addClass(y.opened),e(B.$root[0],\"hidden\",!1)},0),c!==!1&&(w.open=!0,v&&k.css(\"overflow\",\"hidden\").css(\"padding-right\",\"+=\"+d()),s(),j.on(\"click.\"+w.id+\" focusin.\"+w.id,function(a){var b=a.target;b!=f&&b!=document&&3!=a.which&&B.close(b===B.$holder[0])}).on(\"keydown.\"+w.id,function(c){var d=c.keyCode,e=B.component.key[d],f=c.target;27==d?B.close(!0):f!=B.$holder[0]||!e&&13!=d?a.contains(B.$root[0],f)&&13==d&&(c.preventDefault(),f.click()):(c.preventDefault(),e?b._.trigger(B.component.key.go,B,[b._.trigger(e)]):B.$root.find(\".\"+y.highlighted).hasClass(y.disabled)||(B.set(\"select\",B.component.item.highlight),x.closeOnSelect&&B.close(!0)))})),B.trigger(\"open\"))},close:function(a){return a&&(x.editable?f.focus():(B.$holder.off(\"focus.toOpen\").focus(),setTimeout(function(){B.$holder.on(\"focus.toOpen\",t)},0))),z.removeClass(y.active),e(f,\"expanded\",!1),setTimeout(function(){B.$root.removeClass(y.opened+\" \"+y.focused),e(B.$root[0],\"hidden\",!0)},0),w.open?(w.open=!1,v&&k.css(\"overflow\",\"\").css(\"padding-right\",\"-=\"+d()),j.off(\".\"+w.id),B.trigger(\"close\")):B},clear:function(a){return B.set(\"clear\",null,a)},set:function(b,c,d){var e,f,g=a.isPlainObject(b),h=g?b:{};if(d=g&&a.isPlainObject(c)?c:d||{},b){g||(h[b]=c);for(e in h)f=h[e],e in B.component.item&&(void 0===f&&(f=null),B.component.set(e,f,d)),(\"select\"==e||\"clear\"==e)&&z.val(\"clear\"==e?\"\":B.get(e,x.format)).trigger(\"change\");B.render()}return d.muted?B:B.trigger(\"set\",h)},get:function(a,c){if(a=a||\"value\",null!=w[a])return w[a];if(\"valueSubmit\"==a){if(B._hidden)return B._hidden.value;a=\"value\"}if(\"value\"==a)return f.value;if(a in B.component.item){if(\"string\"==typeof c){var d=B.component.get(a);return d?b._.trigger(B.component.formats.toString,B.component,[c,d]):\"\"}return B.component.get(a)}},on:function(b,c,d){var e,f,g=a.isPlainObject(b),h=g?b:{};if(b){g||(h[b]=c);for(e in h)f=h[e],d&&(e=\"_\"+e),w.methods[e]=w.methods[e]||[],w.methods[e].push(f)}return B},off:function(){var a,b,c=arguments;for(a=0,namesCount=c.length;a<namesCount;a+=1)b=c[a],b in w.methods&&delete w.methods[b];return B},trigger:function(a,c){var d=function(a){var d=w.methods[a];d&&d.map(function(a){b._.trigger(a,B,[c])})};return d(\"_\"+a),d(a),B}};return new A}function c(a){var b,c=\"position\";return a.currentStyle?b=a.currentStyle[c]:window.getComputedStyle&&(b=getComputedStyle(a)[c]),\"fixed\"==b}function d(){if(k.height()<=i.height())return 0;var b=a('<div style=\"visibility:hidden;width:100px\" />').appendTo(\"body\"),c=b[0].offsetWidth;b.css(\"overflow\",\"scroll\");var d=a('<div style=\"width:100%\" />').appendTo(b),e=d[0].offsetWidth;return b.remove(),c-e}function e(b,c,d){if(a.isPlainObject(c))for(var e in c)f(b,e,c[e]);else f(b,c,d)}function f(a,b,c){a.setAttribute((\"role\"==b?\"\":\"aria-\")+b,c)}function g(b,c){a.isPlainObject(b)||(b={attribute:c}),c=\"\";for(var d in b){var e=(\"role\"==d?\"\":\"aria-\")+d,f=b[d];c+=null==f?\"\":e+'=\"'+b[d]+'\"'}return c}function h(){try{return document.activeElement}catch(a){}}var i=a(window),j=a(document),k=a(document.documentElement),l=null!=document.documentElement.style.transition;return b.klasses=function(a){return a=a||\"picker\",{picker:a,opened:a+\"--opened\",focused:a+\"--focused\",input:a+\"__input\",active:a+\"__input--active\",target:a+\"__input--target\",holder:a+\"__holder\",frame:a+\"__frame\",wrap:a+\"__wrap\",box:a+\"__box\"}},b._={group:function(a){for(var c,d=\"\",e=b._.trigger(a.min,a);e<=b._.trigger(a.max,a,[e]);e+=a.i)c=b._.trigger(a.item,a,[e]),d+=b._.node(a.node,c[0],c[1],c[2]);return d},node:function(b,c,d,e){return c?(c=a.isArray(c)?c.join(\"\"):c,d=d?' class=\"'+d+'\"':\"\",e=e?\" \"+e:\"\",\"<\"+b+d+e+\">\"+c+\"</\"+b+\">\"):\"\"},lead:function(a){return(10>a?\"0\":\"\")+a},trigger:function(a,b,c){return\"function\"==typeof a?a.apply(b,c||[]):a},digits:function(a){return/\\d/.test(a[1])?2:1},isDate:function(a){return{}.toString.call(a).indexOf(\"Date\")>-1&&this.isInteger(a.getDate())},isInteger:function(a){return{}.toString.call(a).indexOf(\"Number\")>-1&&a%1===0},ariaAttr:g},b.extend=function(c,d){a.fn[c]=function(e,f){var g=this.data(c);return\"picker\"==e?g:g&&\"string\"==typeof e?b._.trigger(g[e],g,[f]):this.each(function(){var f=a(this);f.data(c)||new b(this,c,d,e)})},a.fn[c].defaults=d.defaults},b});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/picker.time.js":"/*!\n * Time picker for pickadate.js v3.5.6\n * http://amsul.github.io/pickadate.js/time.htm\n */\n!function(a){\"function\"==typeof define&&define.amd?define([\"picker\",\"jquery\"],a):\"object\"==typeof exports?module.exports=a(require(\"./picker.js\"),require(\"jquery\")):a(Picker,jQuery)}(function(a,b){function c(a,b){var c=this,d=a.$node[0].value,e=a.$node.data(\"value\"),f=e||d,g=e?b.formatSubmit:b.format;c.settings=b,c.$node=a.$node,c.queue={interval:\"i\",min:\"measure create\",max:\"measure create\",now:\"now create\",select:\"parse create validate\",highlight:\"parse create validate\",view:\"parse create validate\",disable:\"deactivate\",enable:\"activate\"},c.item={},c.item.clear=null,c.item.interval=b.interval||30,c.item.disable=(b.disable||[]).slice(0),c.item.enable=-function(a){return a[0]===!0?a.shift():-1}(c.item.disable),c.set(\"min\",b.min).set(\"max\",b.max).set(\"now\"),f?c.set(\"select\",f,{format:g}):c.set(\"select\",null).set(\"highlight\",c.item.now),c.key={40:1,38:-1,39:1,37:-1,go:function(a){c.set(\"highlight\",c.item.highlight.pick+a*c.item.interval,{interval:a*c.item.interval}),this.render()}},a.on(\"render\",function(){var c=a.$root.children(),d=c.find(\".\"+b.klass.viewset),e=function(a){return[\"webkit\",\"moz\",\"ms\",\"o\",\"\"].map(function(b){return(b?\"-\"+b+\"-\":\"\")+a})},f=function(a,b){e(\"transform\").map(function(c){a.css(c,b)}),e(\"transition\").map(function(c){a.css(c,b)})};d.length&&(f(c,\"none\"),c[0].scrollTop=~~d.position().top-2*d[0].clientHeight,f(c,\"\"))},1).on(\"open\",function(){a.$root.find(\"button\").attr(\"disabled\",!1)},1).on(\"close\",function(){a.$root.find(\"button\").attr(\"disabled\",!0)},1)}var d=24,e=60,f=12,g=d*e,h=a._;c.prototype.set=function(a,b,c){var d=this,e=d.item;return null===b?(\"clear\"==a&&(a=\"select\"),e[a]=b,d):(e[\"enable\"==a?\"disable\":\"flip\"==a?\"enable\":a]=d.queue[a].split(\" \").map(function(e){return b=d[e](a,b,c)}).pop(),\"select\"==a?d.set(\"highlight\",e.select,c):\"highlight\"==a?d.set(\"view\",e.highlight,c):\"interval\"==a?d.set(\"min\",e.min,c).set(\"max\",e.max,c):a.match(/^(flip|min|max|disable|enable)$/)&&(e.select&&d.disabled(e.select)&&d.set(\"select\",b,c),e.highlight&&d.disabled(e.highlight)&&d.set(\"highlight\",b,c),\"min\"==a&&d.set(\"max\",e.max,c)),d)},c.prototype.get=function(a){return this.item[a]},c.prototype.create=function(a,c,f){var i=this;return c=void 0===c?a:c,h.isDate(c)&&(c=[c.getHours(),c.getMinutes()]),b.isPlainObject(c)&&h.isInteger(c.pick)?c=c.pick:b.isArray(c)?c=+c[0]*e+ +c[1]:h.isInteger(c)||(c=i.now(a,c,f)),\"max\"==a&&c<i.item.min.pick&&(c+=g),\"min\"!=a&&\"max\"!=a&&(c-i.item.min.pick)%i.item.interval!==0&&(c+=i.item.interval),c=i.normalize(a,c,f),{hour:~~(d+c/e)%d,mins:(e+c%e)%e,time:(g+c)%g,pick:c%g}},c.prototype.createRange=function(a,c){var d=this,e=function(a){return a===!0||b.isArray(a)||h.isDate(a)?d.create(a):a};return h.isInteger(a)||(a=e(a)),h.isInteger(c)||(c=e(c)),h.isInteger(a)&&b.isPlainObject(c)?a=[c.hour,c.mins+a*d.settings.interval]:h.isInteger(c)&&b.isPlainObject(a)&&(c=[a.hour,a.mins+c*d.settings.interval]),{from:e(a),to:e(c)}},c.prototype.withinRange=function(a,b){return a=this.createRange(a.from,a.to),b.pick>=a.from.pick&&b.pick<=a.to.pick},c.prototype.overlapRanges=function(a,b){var c=this;return a=c.createRange(a.from,a.to),b=c.createRange(b.from,b.to),c.withinRange(a,b.from)||c.withinRange(a,b.to)||c.withinRange(b,a.from)||c.withinRange(b,a.to)},c.prototype.now=function(a,b){var c,d=this.item.interval,f=new Date,g=f.getHours()*e+f.getMinutes(),i=h.isInteger(b);return g-=g%d,c=0>b&&-d>=d*b+g,g+=\"min\"==a&&c?0:d,i&&(g+=d*(c&&\"max\"!=a?b+1:b)),g},c.prototype.normalize=function(a,b){var c=this.item.interval,d=this.item.min&&this.item.min.pick||0;return b-=\"min\"==a?0:(b-d)%c},c.prototype.measure=function(a,c,f){var g=this;return c||(c=\"min\"==a?[0,0]:[d-1,e-1]),\"string\"==typeof c?c=g.parse(a,c):c===!0||h.isInteger(c)?c=g.now(a,c,f):b.isPlainObject(c)&&h.isInteger(c.pick)&&(c=g.normalize(a,c.pick,f)),c},c.prototype.validate=function(a,b,c){var d=this,e=c&&c.interval?c.interval:d.item.interval;return d.disabled(b)&&(b=d.shift(b,e)),b=d.scope(b),d.disabled(b)&&(b=d.shift(b,-1*e)),b},c.prototype.disabled=function(a){var c=this,d=c.item.disable.filter(function(d){return h.isInteger(d)?a.hour==d:b.isArray(d)||h.isDate(d)?a.pick==c.create(d).pick:b.isPlainObject(d)?c.withinRange(d,a):void 0});return d=d.length&&!d.filter(function(a){return b.isArray(a)&&\"inverted\"==a[2]||b.isPlainObject(a)&&a.inverted}).length,-1===c.item.enable?!d:d||a.pick<c.item.min.pick||a.pick>c.item.max.pick},c.prototype.shift=function(a,b){var c=this,d=c.item.min.pick,e=c.item.max.pick;for(b=b||c.item.interval;c.disabled(a)&&(a=c.create(a.pick+=b),!(a.pick<=d||a.pick>=e)););return a},c.prototype.scope=function(a){var b=this.item.min.pick,c=this.item.max.pick;return this.create(a.pick>c?c:a.pick<b?b:a)},c.prototype.parse=function(a,b,c){var d,f,g,i,j,k=this,l={};if(!b||\"string\"!=typeof b)return b;c&&c.format||(c=c||{},c.format=k.settings.format),k.formats.toArray(c.format).map(function(a){var c,d=k.formats[a],e=d?h.trigger(d,k,[b,l]):a.replace(/^!/,\"\").length;d&&(c=b.substr(0,e),l[a]=c.match(/^\\d+$/)?+c:c),b=b.substr(e)});for(i in l)j=l[i],h.isInteger(j)?i.match(/^(h|hh)$/i)?(d=j,(\"h\"==i||\"hh\"==i)&&(d%=12)):\"i\"==i&&(f=j):i.match(/^a$/i)&&j.match(/^p/i)&&(\"h\"in l||\"hh\"in l)&&(g=!0);return(g?d+12:d)*e+f},c.prototype.formats={h:function(a,b){return a?h.digits(a):b.hour%f||f},hh:function(a,b){return a?2:h.lead(b.hour%f||f)},H:function(a,b){return a?h.digits(a):\"\"+b.hour%24},HH:function(a,b){return a?h.digits(a):h.lead(b.hour%24)},i:function(a,b){return a?2:h.lead(b.mins)},a:function(a,b){return a?4:g/2>b.time%g?\"a.m.\":\"p.m.\"},A:function(a,b){return a?2:g/2>b.time%g?\"AM\":\"PM\"},toArray:function(a){return a.split(/(h{1,2}|H{1,2}|i|a|A|!.)/g)},toString:function(a,b){var c=this;return c.formats.toArray(a).map(function(a){return h.trigger(c.formats[a],c,[0,b])||a.replace(/^!/,\"\")}).join(\"\")}},c.prototype.isTimeExact=function(a,c){var d=this;return h.isInteger(a)&&h.isInteger(c)||\"boolean\"==typeof a&&\"boolean\"==typeof c?a===c:(h.isDate(a)||b.isArray(a))&&(h.isDate(c)||b.isArray(c))?d.create(a).pick===d.create(c).pick:b.isPlainObject(a)&&b.isPlainObject(c)?d.isTimeExact(a.from,c.from)&&d.isTimeExact(a.to,c.to):!1},c.prototype.isTimeOverlap=function(a,c){var d=this;return h.isInteger(a)&&(h.isDate(c)||b.isArray(c))?a===d.create(c).hour:h.isInteger(c)&&(h.isDate(a)||b.isArray(a))?c===d.create(a).hour:b.isPlainObject(a)&&b.isPlainObject(c)?d.overlapRanges(a,c):!1},c.prototype.flipEnable=function(a){var b=this.item;b.enable=a||(-1==b.enable?1:-1)},c.prototype.deactivate=function(a,c){var d=this,e=d.item.disable.slice(0);return\"flip\"==c?d.flipEnable():c===!1?(d.flipEnable(1),e=[]):c===!0?(d.flipEnable(-1),e=[]):c.map(function(a){for(var c,f=0;f<e.length;f+=1)if(d.isTimeExact(a,e[f])){c=!0;break}c||(h.isInteger(a)||h.isDate(a)||b.isArray(a)||b.isPlainObject(a)&&a.from&&a.to)&&e.push(a)}),e},c.prototype.activate=function(a,c){var d=this,e=d.item.disable,f=e.length;return\"flip\"==c?d.flipEnable():c===!0?(d.flipEnable(1),e=[]):c===!1?(d.flipEnable(-1),e=[]):c.map(function(a){var c,g,i,j;for(i=0;f>i;i+=1){if(g=e[i],d.isTimeExact(g,a)){c=e[i]=null,j=!0;break}if(d.isTimeOverlap(g,a)){b.isPlainObject(a)?(a.inverted=!0,c=a):b.isArray(a)?(c=a,c[2]||c.push(\"inverted\")):h.isDate(a)&&(c=[a.getFullYear(),a.getMonth(),a.getDate(),\"inverted\"]);break}}if(c)for(i=0;f>i;i+=1)if(d.isTimeExact(e[i],a)){e[i]=null;break}if(j)for(i=0;f>i;i+=1)if(d.isTimeOverlap(e[i],a)){e[i]=null;break}c&&e.push(c)}),e.filter(function(a){return null!=a})},c.prototype.i=function(a,b){return h.isInteger(b)&&b>0?b:this.item.interval},c.prototype.nodes=function(a){var b=this,c=b.settings,d=b.item.select,e=b.item.highlight,f=b.item.view,g=b.item.disable;return h.node(\"ul\",h.group({min:b.item.min.pick,max:b.item.max.pick,i:b.item.interval,node:\"li\",item:function(a){a=b.create(a);var i=a.pick,j=d&&d.pick==i,k=e&&e.pick==i,l=g&&b.disabled(a),m=h.trigger(b.formats.toString,b,[c.format,a]);return[h.trigger(b.formats.toString,b,[h.trigger(c.formatLabel,b,[a])||c.format,a]),function(a){return j&&a.push(c.klass.selected),k&&a.push(c.klass.highlighted),f&&f.pick==i&&a.push(c.klass.viewset),l&&a.push(c.klass.disabled),a.join(\" \")}([c.klass.listItem]),\"data-pick=\"+a.pick+\" \"+h.ariaAttr({role:\"option\",label:m,selected:j&&b.$node.val()===m?!0:null,activedescendant:k?!0:null,disabled:l?!0:null})]}})+h.node(\"li\",h.node(\"button\",c.clear,c.klass.buttonClear,\"type=button data-clear=1\"+(a?\"\":\" disabled\")+\" \"+h.ariaAttr({controls:b.$node[0].id})),\"\",h.ariaAttr({role:\"presentation\"})),c.klass.list,h.ariaAttr({role:\"listbox\",controls:b.$node[0].id}))},c.defaults=function(a){return{clear:\"Clear\",format:\"h:i A\",interval:30,closeOnSelect:!0,closeOnClear:!0,klass:{picker:a+\" \"+a+\"--time\",holder:a+\"__holder\",list:a+\"__list\",listItem:a+\"__list-item\",disabled:a+\"__list-item--disabled\",selected:a+\"__list-item--selected\",highlighted:a+\"__list-item--highlighted\",viewset:a+\"__list-item--viewset\",now:a+\"__list-item--now\",buttonClear:a+\"__button--clear\"}}}(a.klasses().picker),a.extend(\"pickatime\",c)});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/ar.js":"// Arabic\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'يناير', 'فبراير', 'مارس', 'ابريل', 'مايو', 'يونيو', 'يوليو', 'اغسطس', 'سبتمبر', 'اكتوبر', 'نوفمبر', 'ديسمبر' ],\n    monthsShort: [ 'يناير', 'فبراير', 'مارس', 'ابريل', 'مايو', 'يونيو', 'يوليو', 'اغسطس', 'سبتمبر', 'اكتوبر', 'نوفمبر', 'ديسمبر' ],\n    weekdaysFull: [ 'الاحد', 'الاثنين', 'الثلاثاء', 'الاربعاء', 'الخميس', 'الجمعة', 'السبت' ],\n    weekdaysShort: [ 'الاحد', 'الاثنين', 'الثلاثاء', 'الاربعاء', 'الخميس', 'الجمعة', 'السبت' ],\n    today: 'اليوم',\n    clear: 'مسح',\n    format: 'yyyy mmmm dd',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'مسح'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/bg_BG.js":"// Bulgarian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'януари','февруари','март','април','май','юни','юли','август','септември','октомври','ноември','декември' ],\n    monthsShort: [ 'янр','фев','мар','апр','май','юни','юли','авг','сеп','окт','ное','дек' ],\n    weekdaysFull: [ 'неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота' ],\n    weekdaysShort: [ 'нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб' ],\n    today: 'днес',\n    clear: 'изтривам',\n    firstDay: 1,\n    format: 'd mmmm yyyy г.',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'изтривам'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/bs_BA.js":"// Bosnian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'januar', 'februar', 'mart', 'april', 'maj', 'juni', 'juli', 'august', 'septembar', 'oktobar', 'novembar', 'decembar' ],\n    monthsShort: [ 'jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec' ],\n    weekdaysFull: [ 'nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'cetvrtak', 'petak', 'subota' ],\n    weekdaysShort: [ 'ne', 'po', 'ut', 'sr', 'če', 'pe', 'su' ],\n    today: 'danas',\n    clear: 'izbrisati',\n    firstDay: 1,\n    format: 'dd. mmmm yyyy.',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'izbrisati'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/ca_ES.js":"// Catalan\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Gener', 'Febrer', 'Març', 'Abril', 'Maig', 'juny', 'Juliol', 'Agost', 'Setembre', 'Octubre', 'Novembre', 'Desembre' ],\n    monthsShort: [ 'Gen', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Oct', 'Nov', 'Des' ],\n    weekdaysFull: [ 'diumenge', 'dilluns', 'dimarts', 'dimecres', 'dijous', 'divendres', 'dissabte' ],\n    weekdaysShort: [ 'diu', 'dil', 'dim', 'dmc', 'dij', 'div', 'dis' ],\n    today: 'avui',\n    clear: 'esborrar',\n    close: 'tancar',\n    firstDay: 1,\n    format: 'dddd d !de mmmm !de yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'esborrar'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/cs_CZ.js":"// Czech\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'leden', 'únor', 'březen', 'duben', 'květen', 'červen', 'červenec', 'srpen', 'září', 'říjen', 'listopad', 'prosinec' ],\n    monthsShort: [ 'led', 'úno', 'bře', 'dub', 'kvě', 'čer', 'čvc', 'srp', 'zář', 'říj', 'lis', 'pro' ],\n    weekdaysFull: [ 'neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota' ],\n    weekdaysShort: [ 'ne', 'po', 'út', 'st', 'čt', 'pá', 'so' ],\n    today: 'dnes',\n    clear: 'vymazat',\n    firstDay: 1,\n    format: 'd. mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'vymazat'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/da_DK.js":"// Danish\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'januar', 'februar', 'marts', 'april', 'maj', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'december' ],\n    monthsShort: [ 'jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec' ],\n    weekdaysFull: [ 'søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag' ],\n    weekdaysShort: [ 'søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør' ],\n    today: 'i dag',\n    clear: 'slet',\n    close: 'luk',\n    firstDay: 1,\n    format: 'd. mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'slet'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/de_DE.js":"// German\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember' ],\n    monthsShort: [ 'Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez' ],\n    weekdaysFull: [ 'Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag' ],\n    weekdaysShort: [ 'So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa' ],\n    today: 'Heute',\n    clear: 'Löschen',\n    close: 'Schließen',\n    firstDay: 1,\n    format: 'dddd, dd. mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Löschen'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/el_GR.js":"// Greek\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος' ],\n    monthsShort: [ 'Ιαν', 'Φεβ', 'Μαρ', 'Απρ', 'Μαι', 'Ιουν', 'Ιουλ', 'Αυγ', 'Σεπ', 'Οκτ', 'Νοε', 'Δεκ' ],\n    weekdaysFull: [ 'Κυριακή', 'Δευτέρα', 'Τρίτη', 'Τετάρτη', 'Πέμπτη', 'Παρασκευή', 'Σάββατο' ],\n    weekdaysShort: [ 'Κυρ', 'Δευ', 'Τρι', 'Τετ', 'Πεμ', 'Παρ', 'Σαβ' ],\n    today: 'σήμερα',\n    clear: 'Διαγραφή',\n    firstDay: 1,\n    format: 'd mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Διαγραφή'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/es_ES.js":"// Spanish\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre' ],\n    monthsShort: [ 'ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic' ],\n    weekdaysFull: [ 'domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado' ],\n    weekdaysShort: [ 'dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb' ],\n    today: 'hoy',\n    clear: 'borrar',\n    close: 'cerrar',\n    firstDay: 1,\n    format: 'dddd d !de mmmm !de yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'borrar'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/et_EE.js":"// Estonian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'jaanuar', 'veebruar', 'märts', 'aprill', 'mai', 'juuni', 'juuli', 'august', 'september', 'oktoober', 'november', 'detsember' ],\n    monthsShort: [ 'jaan', 'veebr', 'märts', 'apr', 'mai', 'juuni', 'juuli', 'aug', 'sept', 'okt', 'nov', 'dets' ],\n    weekdaysFull: [ 'pühapäev', 'esmaspäev', 'teisipäev', 'kolmapäev', 'neljapäev', 'reede', 'laupäev' ],\n    weekdaysShort: [ 'püh', 'esm', 'tei', 'kol', 'nel', 'ree', 'lau' ],\n    today: 'täna',\n    clear: 'kustutama',\n    firstDay: 1,\n    format: 'd. mmmm yyyy. a',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'kustutama'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/eu_ES.js":"// Basque\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'urtarrila', 'otsaila', 'martxoa', 'apirila', 'maiatza', 'ekaina', 'uztaila', 'abuztua', 'iraila', 'urria', 'azaroa', 'abendua' ],\n    monthsShort: [ 'urt', 'ots', 'mar', 'api', 'mai', 'eka', 'uzt', 'abu', 'ira', 'urr', 'aza', 'abe' ],\n    weekdaysFull: [ 'igandea', 'astelehena', 'asteartea', 'asteazkena', 'osteguna', 'ostirala', 'larunbata' ],\n    weekdaysShort: [ 'ig.', 'al.', 'ar.', 'az.', 'og.', 'or.', 'lr.' ],\n    today: 'gaur',\n    clear: 'garbitu',\n    firstDay: 1,\n    format: 'dddd, yyyy(e)ko mmmmren da',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'garbitu'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/fa_IR.js":"// Farsi\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'ژانویه', 'فوریه', 'مارس', 'آوریل', 'مه', 'ژوئن', 'ژوئیه', 'اوت', 'سپتامبر', 'اکتبر', 'نوامبر', 'دسامبر'],\n    monthsShort: [ 'ژانویه', 'فوریه', 'مارس', 'آوریل', 'مه', 'ژوئن', 'ژوئیه', 'اوت', 'سپتامبر', 'اکتبر', 'نوامبر', 'دسامبر' ],\n    weekdaysFull: [ 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه' ],\n    weekdaysShort: [ 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه' ],\n    today: 'امروز',\n    clear: 'پاک کردن',\n    close: 'بستن',\n    format: 'yyyy mmmm dd',\n    formatSubmit: 'yyyy/mm/dd',\n    labelMonthNext: 'ماه بعدی',\n\tlabelMonthPrev: 'ماه قبلی'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'پاک کردن'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/fi_FI.js":"// Finnish\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesäkuu', 'heinäkuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu' ],\n    monthsShort: [ 'tammi', 'helmi', 'maalis', 'huhti', 'touko', 'kesä', 'heinä', 'elo', 'syys', 'loka', 'marras', 'joulu' ],\n    weekdaysFull: [ 'sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai' ],\n    weekdaysShort: [ 'su', 'ma', 'ti', 'ke', 'to', 'pe', 'la' ],\n    today: 'tänään',\n    clear: 'tyhjennä',\n    firstDay: 1,\n    format: 'd.m.yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'tyhjennä'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/fr_FR.js":"// French\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre' ],\n    monthsShort: [ 'Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec' ],\n    weekdaysFull: [ 'Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi' ],\n    weekdaysShort: [ 'Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam' ],\n    today: 'Aujourd\\'hui',\n    clear: 'Effacer',\n    close: 'Fermer',\n    firstDay: 1,\n    format: 'dd mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd',\n    labelMonthNext:\"Mois suivant\",\n    labelMonthPrev:\"Mois précédent\",\n    labelMonthSelect:\"Sélectionner un mois\",\n    labelYearSelect:\"Sélectionner une année\"\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Effacer'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/gl_ES.js":"// Galician\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Xaneiro', 'Febreiro', 'Marzo', 'Abril', 'Maio', 'Xuño', 'Xullo', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Decembro' ],\n    monthsShort: [ 'xan', 'feb', 'mar', 'abr', 'mai', 'xun', 'xul', 'ago', 'sep', 'out', 'nov', 'dec' ],\n    weekdaysFull: [ 'domingo', 'luns', 'martes', 'mércores', 'xoves', 'venres', 'sábado' ],\n    weekdaysShort: [ 'dom', 'lun', 'mar', 'mér', 'xov', 'ven', 'sab' ],\n    today: 'hoxe',\n    clear: 'borrar',\n    firstDay: 1,\n    format: 'dddd d !de mmmm !de yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'borrar'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/he_IL.js":"// Hebrew\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר' ],\n    monthsShort: [ 'ינו', 'פבר', 'מרץ', 'אפר', 'מאי', 'יונ', 'יול', 'אוג', 'ספט', 'אוק', 'נוב', 'דצמ' ],\n    weekdaysFull: [ 'יום ראשון', 'יום שני', 'יום שלישי', 'יום רביעי', 'יום חמישי', 'יום ששי', 'יום שבת' ],\n    weekdaysShort: [ 'א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ש' ],\n    today: 'היום',\n    clear: 'למחוק',\n    format: 'yyyy mmmmב d dddd',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'למחוק'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/hi_IN.js":"jQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर' ],\n    monthsShort: [ 'जन', 'फर', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जु', 'अग', 'सित', 'अक्टू', 'नव', 'दिस' ],\n    weekdaysFull: [ 'रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'गुरुवार', 'शुक्रवार', 'शनिवार' ],\n    weekdaysShort: [ 'रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र','शनि' ],\n    today: 'आज की तारीख चयन करें',\n    clear: 'चुनी हुई तारीख को मिटाएँ',\n    close: 'विंडो बंद करे',\n    firstDay: 1,\n    format: 'dd/mm/yyyy',\n    formatSubmit: 'yyyy/mm/dd',\n    labelMonthNext: 'अगले माह का चयन करें',\n    labelMonthPrev: 'पिछले माह का चयन करें',\n    labelMonthSelect: 'किसि एक महीने का चयन करें',\n    labelYearSelect: 'किसि एक वर्ष का चयन करें'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'चुनी हुई तारीख को मिटाएँ'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/hr_HR.js":"// Croatian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'sijećanj', 'veljača', 'ožujak', 'travanj', 'svibanj', 'lipanj', 'srpanj', 'kolovoz', 'rujan', 'listopad', 'studeni', 'prosinac' ],\n    monthsShort: [ 'sij', 'velj', 'ožu', 'tra', 'svi', 'lip', 'srp', 'kol', 'ruj', 'lis', 'stu', 'pro' ],\n    weekdaysFull: [ 'nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota' ],\n    weekdaysShort: [ 'ned', 'pon', 'uto', 'sri', 'čet', 'pet', 'sub' ],\n    today: 'danas',\n    clear: 'izbrisati',\n    firstDay: 1,\n    format: 'd. mmmm yyyy.',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'izbrisati'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/hu_HU.js":"// Hungarian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'január', 'február', 'március', 'április', 'május', 'június', 'július', 'augusztus', 'szeptember', 'október', 'november', 'december' ],\n    monthsShort: [ 'jan', 'febr', 'márc', 'ápr', 'máj', 'jún', 'júl', 'aug', 'szept', 'okt', 'nov', 'dec' ],\n    weekdaysFull: [ 'vasárnap', 'hétfő', 'kedd', 'szerda', 'csütörtök', 'péntek', 'szombat' ],\n    weekdaysShort: [ 'V', 'H', 'K', 'SZe', 'CS', 'P', 'SZo' ],\n    today: 'Ma',\n    clear: 'Törlés',\n    firstDay: 1,\n    format: 'yyyy. mmmm dd.',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Törlés'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/id_ID.js":"// Indonesian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember' ],\n    monthsShort: [ 'Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des' ],\n    weekdaysFull: [ 'Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu' ],\n    weekdaysShort: [ 'Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab' ],\n    today: 'hari ini',\n    clear: 'menghapus',\n    firstDay: 1,\n    format: 'd mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'menghapus'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/is_IS.js":"// Icelandic\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'janúar', 'febrúar', 'mars', 'apríl', 'maí', 'júní', 'júlí', 'ágúst', 'september', 'október', 'nóvember', 'desember' ],\n    monthsShort: [ 'jan', 'feb', 'mar', 'apr', 'maí', 'jún', 'júl', 'ágú', 'sep', 'okt', 'nóv', 'des' ],\n    weekdaysFull: [ 'sunnudagur', 'mánudagur', 'þriðjudagur', 'miðvikudagur', 'fimmtudagur', 'föstudagur', 'laugardagur' ],\n    weekdaysShort: [ 'sun', 'mán', 'þri', 'mið', 'fim', 'fös', 'lau' ],\n    today: 'Í dag',\n    clear: 'Hreinsa',\n    firstDay: 1,\n    format: 'dd. mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Hreinsa'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/it_IT.js":"// Italian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre' ],\n    monthsShort: [ 'gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic' ],\n    weekdaysFull: [ 'domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato' ],\n    weekdaysShort: [ 'dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab' ],\n    today: 'Oggi',\n    clear: 'Cancella',\n    close: 'Chiudi',\n    firstDay: 1,\n    format: 'dddd d mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd',\n    labelMonthNext: 'Mese successivo',\n    labelMonthPrev: 'Mese precedente',\n    labelMonthSelect: 'Seleziona un mese',\n    labelYearSelect: 'Seleziona un anno'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Cancella',\n    format: 'HH:i',\n    formatSubmit: 'HH:i'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/ja_JP.js":"// Japanese\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ '1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月' ],\n    monthsShort: [ '1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月' ],\n    weekdaysFull: [ '日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日' ],\n    weekdaysShort: [ '日', '月', '火', '水', '木', '金', '土' ],\n    today: '今日',\n    clear: '消去',\n    firstDay: 1,\n    format: 'yyyy mm dd',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: '消去'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/ko_KR.js":"// Korean\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ '1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월' ],\n    monthsShort: [ '1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월' ],\n    weekdaysFull: [ '일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일' ],\n    weekdaysShort: [ '일', '월', '화', '수', '목', '금', '토' ],\n    today: '오늘',\n    clear: '취소',\n    firstDay: 1,\n    format: 'yyyy 년 mm 월 dd 일',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: '취소'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/lt_LT.js":"// Lietuviškai\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    labelMonthNext: 'Sekantis mėnuo',\n    labelMonthPrev: 'Ankstesnis mėnuo',\n    labelMonthSelect: 'Pasirinkite mėnesį',\n    labelYearSelect: 'Pasirinkite metus',\n    monthsFull: ['Sausis', 'Vasaris', 'Kovas', 'Balandis', 'Gegužė', 'Birželis', 'Liepa', 'Rugpjūtis', 'Rugsėjis', 'Spalis', 'Lapkritis', 'Gruodis'],\n    monthsShort: ['Sau', 'Vas', 'Kov', 'Bal', 'Geg', 'Bir', 'Lie', 'Rgp', 'Rgs', 'Spa', 'Lap', 'Grd'],\n    weekdaysFull: ['Sekmadienis', 'Pirmadienis', 'Antradienis', 'Trečiadienis', 'Ketvirtadienis', 'Penktadienis', 'Šeštadienis'],\n    weekdaysShort: ['Sk', 'Pr', 'An', 'Tr', 'Kt', 'Pn', 'Št'],\n    today: 'Šiandien',\n    clear: 'Išvalyti',\n    close: 'Uždaryti',\n    firstDay: 1,\n    //format: 'yyyy !m. mmmm d !d.', // need to have diffrent case of full months name\n    format: 'yyyy-mm-dd',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Išvalyti',\n    format: 'HH:i'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/lv_LV.js":"// Latvian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Janvāris', 'Februāris', 'Marts', 'Aprīlis', 'Maijs', 'Jūnijs', 'Jūlijs', 'Augusts', 'Septembris', 'Oktobris', 'Novembris', 'Decembris' ],\n    monthsShort: [ 'Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jūn', 'Jūl', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec' ],\n    weekdaysFull: [ 'Svētdiena', 'Pirmdiena', 'Otrdiena', 'Trešdiena', 'Ceturtdiena', 'Piektdiena', 'Sestdiena' ],\n    weekdaysShort: [ 'Sv', 'P', 'O', 'T', 'C', 'Pk', 'S' ],\n    today: 'Šodiena',\n    clear: 'Atcelt',\n    firstDay: 1,\n    format: 'yyyy.mm.dd. dddd',\n    formatSubmit: 'yyyy/mm/dd'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/nb_NO.js":"// Norwegian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember' ],\n    monthsShort: [ 'jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des' ],\n    weekdaysFull: [ 'søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag' ],\n    weekdaysShort: [ 'søn','man','tir', 'ons', 'tor', 'fre', 'lør' ],\n    today: 'i dag',\n    clear: 'nullstill',\n    close: 'lukk',\n    firstDay: 1,\n    format: 'dd. mmm. yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'nullstill'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/ne_NP.js":"// Nepali\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'जनवरी', 'फेब्रुअरी', 'मार्च', 'अप्रिल', 'मे', 'जुन', 'जुलाई', 'अगस्त', 'सेप्टेम्बर', 'अक्टोबर', 'नोवेम्बर', 'डिसेम्बर' ],\n    monthsShort: [ 'जन', 'फेब्रु', 'मार्च', 'अप्रिल', 'मे', 'जुन', 'जुल', 'अग', 'सेप्टे', 'अक्टो', 'नोभे', 'डिसे' ],\n    weekdaysFull: [ 'सोमबार', 'मङ्लबार', 'बुधबार', 'बिहीबार', 'शुक्रबार', 'शनिबार', 'आईतबार' ],\n    weekdaysShort: [ 'सोम', 'मंगल्', 'बुध', 'बिही', 'शुक्र', 'शनि', 'आईत' ],\n    numbers: [ '०', '१', '२', '३', '४', '५', '६', '७', '८', '९' ],\n    today: 'आज',\n    clear: 'मेटाउनुहोस्',\n    format: 'dddd, dd mmmm, yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'मेटाउनुहोस्'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/nl_NL.js":"// Dutch\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december' ],\n    monthsShort: [ 'jan', 'feb', 'maa', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec' ],\n    weekdaysFull: [ 'zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag' ],\n    weekdaysShort: [ 'zo', 'ma', 'di', 'wo', 'do', 'vr', 'za' ],\n    today: 'vandaag',\n    clear: 'verwijderen',\n    close: 'sluiten',\n    firstDay: 1,\n    format: 'dddd d mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'verwijderen'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/pl_PL.js":"// Polish\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'styczeń', 'luty', 'marzec', 'kwiecień', 'maj', 'czerwiec', 'lipiec', 'sierpień', 'wrzesień', 'październik', 'listopad', 'grudzień' ],\n    monthsShort: [ 'sty', 'lut', 'mar', 'kwi', 'maj', 'cze', 'lip', 'sie', 'wrz', 'paź', 'lis', 'gru' ],\n    weekdaysFull: [ 'niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota' ],\n    weekdaysShort: [ 'niedz.', 'pn.', 'wt.', 'śr.', 'cz.', 'pt.', 'sob.' ],\n    today: 'Dzisiaj',\n    clear: 'Usuń',\n    close: 'Zamknij',\n    firstDay: 1,\n    format: 'd mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'usunąć'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/pt_BR.js":"// Brazilian Portuguese\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro' ],\n    monthsShort: [ 'jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez' ],\n    weekdaysFull: [ 'domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado' ],\n    weekdaysShort: [ 'dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sab' ],\n    today: 'hoje',\n    clear: 'limpar',\n    close: 'fechar',\n    format: 'dddd, d !de mmmm !de yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'limpar'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/pt_PT.js":"// Portuguese\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro' ],\n    monthsShort: [ 'jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez' ],\n    weekdaysFull: [ 'Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado' ],\n    weekdaysShort: [ 'dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sab' ],\n    today: 'Hoje',\n    clear: 'Limpar',\n    close: 'Fechar',\n    format: 'd !de mmmm !de yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Limpar'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/ro_RO.js":"// Romanian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'ianuarie', 'februarie', 'martie', 'aprilie', 'mai', 'iunie', 'iulie', 'august', 'septembrie', 'octombrie', 'noiembrie', 'decembrie' ],\n    monthsShort: [ 'ian', 'feb', 'mar', 'apr', 'mai', 'iun', 'iul', 'aug', 'sep', 'oct', 'noi', 'dec' ],\n    weekdaysFull: [ 'duminică', 'luni', 'marţi', 'miercuri', 'joi', 'vineri', 'sâmbătă' ],\n    weekdaysShort: [ 'D', 'L', 'Ma', 'Mi', 'J', 'V', 'S' ],\n    today: 'azi',\n    clear: 'șterge',\n    firstDay: 1,\n    format: 'dd mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'șterge'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/ru_RU.js":"// Russian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря' ],\n    monthsShort: [ 'янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек' ],\n    weekdaysFull: [ 'воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота' ],\n    weekdaysShort: [ 'вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб' ],\n    today: 'сегодня',\n    clear: 'удалить',\n    close: 'закрыть',\n    firstDay: 1,\n    format: 'd mmmm yyyy г.',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'удалить'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/sk_SK.js":"// Slovak\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'január', 'február', 'marec', 'apríl', 'máj', 'jún', 'júl', 'august', 'september', 'október', 'november', 'december' ],\n    monthsShort: [ 'jan', 'feb', 'mar', 'apr', 'máj', 'jún', 'júl', 'aug', 'sep', 'okt', 'nov', 'dec' ],\n    weekdaysFull: [ 'nedeľa', 'pondelok', 'utorok', 'streda', 'štvrtok', 'piatok', 'sobota' ],\n    weekdaysShort: [ 'Ne', 'Po', 'Ut', 'St', 'Št', 'Pi', 'So' ],\n    today: 'dnes',\n    clear: 'vymazať',\n    close: 'zavrieť',\n    firstDay: 1,\n    format: 'd. mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'vymazať'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/sl_SI.js":"// Slovenian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'januar', 'februar', 'marec', 'april', 'maj', 'junij', 'julij', 'avgust', 'september', 'oktober', 'november', 'december' ],\n    monthsShort: [ 'jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'avg', 'sep', 'okt', 'nov', 'dec' ],\n    weekdaysFull: [ 'nedelja', 'ponedeljek', 'torek', 'sreda', 'četrtek', 'petek', 'sobota' ],\n    weekdaysShort: [ 'ned', 'pon', 'tor', 'sre', 'čet', 'pet', 'sob' ],\n    today: 'danes',\n    clear: 'izbriši',\n    close: 'zapri',\n    firstDay: 1,\n    format: 'd. mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'izbriši'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/sv_SE.js":"// Swedish\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'januari', 'februari', 'mars', 'april', 'maj', 'juni', 'juli', 'augusti', 'september', 'oktober', 'november', 'december' ],\n    monthsShort: [ 'jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec' ],\n    weekdaysFull: [ 'söndag', 'måndag', 'tisdag', 'onsdag', 'torsdag', 'fredag', 'lördag' ],\n    weekdaysShort: [ 'sön', 'mån', 'tis', 'ons', 'tor', 'fre', 'lör' ],\n    today: 'Idag',\n    clear: 'Rensa',\n    close: 'Stäng',\n    firstDay: 1,\n    format: 'yyyy-mm-dd',\n    formatSubmit: 'yyyy/mm/dd',\n    labelMonthNext: 'Nästa månad',\n    labelMonthPrev: 'Föregående månad',\n    labelMonthSelect: 'Välj månad',\n    labelYearSelect: 'Välj år'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Rensa'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/th_TH.js":"// Thai\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม' ],\n    monthsShort: [ 'ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.', 'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.' ],\n    weekdaysFull: [ 'อาทติย', 'จันทร', 'องัคาร', 'พุธ', 'พฤหสั บดี', 'ศกุร', 'เสาร' ],\n    weekdaysShort: [ 'อ.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.' ],\n    today: 'วันนี้',\n    clear: 'ลบ',\n    format: 'd mmmm yyyy',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'ลบ'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/tr_TR.js":"// Turkish\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık' ],\n    monthsShort: [ 'Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara' ],\n    weekdaysFull: [ 'Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi' ],\n    weekdaysShort: [ 'Pzr', 'Pzt', 'Sal', 'Çrş', 'Prş', 'Cum', 'Cmt' ],\n    today: 'Bugün',\n    clear: 'Sil',\n    close: 'Kapat',\n    firstDay: 1,\n    format: 'dd mmmm yyyy dddd',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'sil'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/uk_UA.js":"// Ukrainian\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'січень', 'лютий', 'березень', 'квітень', 'травень', 'червень', 'липень', 'серпень', 'вересень', 'жовтень', 'листопад', 'грудень' ],\n    monthsShort: [ 'січ', 'лют', 'бер', 'кві', 'тра', 'чер', 'лип', 'сер', 'вер', 'жов', 'лис', 'гру' ],\n    weekdaysFull: [ 'неділя', 'понеділок', 'вівторок', 'середа', 'четвер', 'п‘ятниця', 'субота' ],\n    weekdaysShort: [ 'нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб' ],\n    today: 'сьогодні',\n    clear: 'викреслити',\n    firstDay: 1,\n    format: 'dd mmmm yyyy p.',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'викреслити'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/vi_VN.js":"// Vietnamese\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ 'Tháng Một', 'Tháng Hai', 'Tháng Ba', 'Tháng Tư', 'Tháng Năm', 'Tháng Sáu', 'Tháng Bảy', 'Tháng Tám', 'Tháng Chín', 'Tháng Mười', 'Tháng Mười Một', 'Tháng Mười Hai' ],\n    monthsShort: [ 'Một', 'Hai', 'Ba', 'Tư', 'Năm', 'Sáu', 'Bảy', 'Tám', 'Chín', 'Mưới', 'Mười Một', 'Mười Hai' ],\n    weekdaysFull: [ 'Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy' ],\n    weekdaysShort: [ 'C.Nhật', 'T.Hai', 'T.Ba', 'T.Tư', 'T.Năm', 'T.Sáu', 'T.Bảy' ],\n    today: 'Hôm Nay',\n    clear: 'Xoá',\n    firstDay: 1\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: 'Xoá'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/zh_CN.js":"// Simplified Chinese\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ '一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月' ],\n    monthsShort: [ '一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二' ],\n    weekdaysFull: [ '星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六' ],\n    weekdaysShort: [ '日', '一', '二', '三', '四', '五', '六' ],\n    today: '今日',\n    clear: '清除',\n    close: '关闭',\n    firstDay: 1,\n    format: 'yyyy 年 mm 月 dd 日',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: '清除'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/translations/zh_TW.js":"// Traditional Chinese\n\njQuery.extend( jQuery.fn.pickadate.defaults, {\n    monthsFull: [ '一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月' ],\n    monthsShort: [ '一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二' ],\n    weekdaysFull: [ '星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六' ],\n    weekdaysShort: [ '日', '一', '二', '三', '四', '五', '六' ],\n    today: '今天',\n    clear: '清除',\n    close: '关闭',\n    firstDay: 1,\n    format: 'yyyy 年 mm 月 dd 日',\n    formatSubmit: 'yyyy/mm/dd'\n});\n\njQuery.extend( jQuery.fn.pickatime.defaults, {\n    clear: '清除'\n});\n","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/ar.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"يناير\",\"فبراير\",\"مارس\",\"ابريل\",\"مايو\",\"يونيو\",\"يوليو\",\"اغسطس\",\"سبتمبر\",\"اكتوبر\",\"نوفمبر\",\"ديسمبر\"],monthsShort:[\"يناير\",\"فبراير\",\"مارس\",\"ابريل\",\"مايو\",\"يونيو\",\"يوليو\",\"اغسطس\",\"سبتمبر\",\"اكتوبر\",\"نوفمبر\",\"ديسمبر\"],weekdaysFull:[\"الاحد\",\"الاثنين\",\"الثلاثاء\",\"الاربعاء\",\"الخميس\",\"الجمعة\",\"السبت\"],weekdaysShort:[\"الاحد\",\"الاثنين\",\"الثلاثاء\",\"الاربعاء\",\"الخميس\",\"الجمعة\",\"السبت\"],today:\"اليوم\",clear:\"مسح\",format:\"yyyy mmmm dd\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"مسح\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/bg_BG.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"януари\",\"февруари\",\"март\",\"април\",\"май\",\"юни\",\"юли\",\"август\",\"септември\",\"октомври\",\"ноември\",\"декември\"],monthsShort:[\"янр\",\"фев\",\"мар\",\"апр\",\"май\",\"юни\",\"юли\",\"авг\",\"сеп\",\"окт\",\"ное\",\"дек\"],weekdaysFull:[\"неделя\",\"понеделник\",\"вторник\",\"сряда\",\"четвъртък\",\"петък\",\"събота\"],weekdaysShort:[\"нд\",\"пн\",\"вт\",\"ср\",\"чт\",\"пт\",\"сб\"],today:\"днес\",clear:\"изтривам\",firstDay:1,format:\"d mmmm yyyy г.\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"изтривам\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/bs_BA.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"januar\",\"februar\",\"mart\",\"april\",\"maj\",\"juni\",\"juli\",\"august\",\"septembar\",\"oktobar\",\"novembar\",\"decembar\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"maj\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"dec\"],weekdaysFull:[\"nedjelja\",\"ponedjeljak\",\"utorak\",\"srijeda\",\"cetvrtak\",\"petak\",\"subota\"],weekdaysShort:[\"ne\",\"po\",\"ut\",\"sr\",\"če\",\"pe\",\"su\"],today:\"danas\",clear:\"izbrisati\",firstDay:1,format:\"dd. mmmm yyyy.\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"izbrisati\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/ca_ES.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Gener\",\"Febrer\",\"Març\",\"Abril\",\"Maig\",\"juny\",\"Juliol\",\"Agost\",\"Setembre\",\"Octubre\",\"Novembre\",\"Desembre\"],monthsShort:[\"Gen\",\"Feb\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\"Jul\",\"Ago\",\"Set\",\"Oct\",\"Nov\",\"Des\"],weekdaysFull:[\"diumenge\",\"dilluns\",\"dimarts\",\"dimecres\",\"dijous\",\"divendres\",\"dissabte\"],weekdaysShort:[\"diu\",\"dil\",\"dim\",\"dmc\",\"dij\",\"div\",\"dis\"],today:\"avui\",clear:\"esborrar\",close:\"tancar\",firstDay:1,format:\"dddd d !de mmmm !de yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"esborrar\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/cs_CZ.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"leden\",\"únor\",\"březen\",\"duben\",\"květen\",\"červen\",\"červenec\",\"srpen\",\"září\",\"říjen\",\"listopad\",\"prosinec\"],monthsShort:[\"led\",\"úno\",\"bře\",\"dub\",\"kvě\",\"čer\",\"čvc\",\"srp\",\"zář\",\"říj\",\"lis\",\"pro\"],weekdaysFull:[\"neděle\",\"pondělí\",\"úterý\",\"středa\",\"čtvrtek\",\"pátek\",\"sobota\"],weekdaysShort:[\"ne\",\"po\",\"út\",\"st\",\"čt\",\"pá\",\"so\"],today:\"dnes\",clear:\"vymazat\",firstDay:1,format:\"d. mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"vymazat\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/da_DK.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"januar\",\"februar\",\"marts\",\"april\",\"maj\",\"juni\",\"juli\",\"august\",\"september\",\"oktober\",\"november\",\"december\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"maj\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"dec\"],weekdaysFull:[\"søndag\",\"mandag\",\"tirsdag\",\"onsdag\",\"torsdag\",\"fredag\",\"lørdag\"],weekdaysShort:[\"søn\",\"man\",\"tir\",\"ons\",\"tor\",\"fre\",\"lør\"],today:\"i dag\",clear:\"slet\",close:\"luk\",firstDay:1,format:\"d. mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"slet\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/de_DE.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"],monthsShort:[\"Jan\",\"Feb\",\"Mär\",\"Apr\",\"Mai\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dez\"],weekdaysFull:[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"],weekdaysShort:[\"So\",\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\"],today:\"Heute\",clear:\"Löschen\",close:\"Schließen\",firstDay:1,format:\"dddd, dd. mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Löschen\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/el_GR.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Ιανουάριος\",\"Φεβρουάριος\",\"Μάρτιος\",\"Απρίλιος\",\"Μάιος\",\"Ιούνιος\",\"Ιούλιος\",\"Αύγουστος\",\"Σεπτέμβριος\",\"Οκτώβριος\",\"Νοέμβριος\",\"Δεκέμβριος\"],monthsShort:[\"Ιαν\",\"Φεβ\",\"Μαρ\",\"Απρ\",\"Μαι\",\"Ιουν\",\"Ιουλ\",\"Αυγ\",\"Σεπ\",\"Οκτ\",\"Νοε\",\"Δεκ\"],weekdaysFull:[\"Κυριακή\",\"Δευτέρα\",\"Τρίτη\",\"Τετάρτη\",\"Πέμπτη\",\"Παρασκευή\",\"Σάββατο\"],weekdaysShort:[\"Κυρ\",\"Δευ\",\"Τρι\",\"Τετ\",\"Πεμ\",\"Παρ\",\"Σαβ\"],today:\"σήμερα\",clear:\"Διαγραφή\",firstDay:1,format:\"d mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Διαγραφή\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/es_ES.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"enero\",\"febrero\",\"marzo\",\"abril\",\"mayo\",\"junio\",\"julio\",\"agosto\",\"septiembre\",\"octubre\",\"noviembre\",\"diciembre\"],monthsShort:[\"ene\",\"feb\",\"mar\",\"abr\",\"may\",\"jun\",\"jul\",\"ago\",\"sep\",\"oct\",\"nov\",\"dic\"],weekdaysFull:[\"domingo\",\"lunes\",\"martes\",\"miércoles\",\"jueves\",\"viernes\",\"sábado\"],weekdaysShort:[\"dom\",\"lun\",\"mar\",\"mié\",\"jue\",\"vie\",\"sáb\"],today:\"hoy\",clear:\"borrar\",close:\"cerrar\",firstDay:1,format:\"dddd d !de mmmm !de yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"borrar\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/et_EE.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"jaanuar\",\"veebruar\",\"märts\",\"aprill\",\"mai\",\"juuni\",\"juuli\",\"august\",\"september\",\"oktoober\",\"november\",\"detsember\"],monthsShort:[\"jaan\",\"veebr\",\"märts\",\"apr\",\"mai\",\"juuni\",\"juuli\",\"aug\",\"sept\",\"okt\",\"nov\",\"dets\"],weekdaysFull:[\"pühapäev\",\"esmaspäev\",\"teisipäev\",\"kolmapäev\",\"neljapäev\",\"reede\",\"laupäev\"],weekdaysShort:[\"püh\",\"esm\",\"tei\",\"kol\",\"nel\",\"ree\",\"lau\"],today:\"täna\",clear:\"kustutama\",firstDay:1,format:\"d. mmmm yyyy. a\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"kustutama\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/eu_ES.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"urtarrila\",\"otsaila\",\"martxoa\",\"apirila\",\"maiatza\",\"ekaina\",\"uztaila\",\"abuztua\",\"iraila\",\"urria\",\"azaroa\",\"abendua\"],monthsShort:[\"urt\",\"ots\",\"mar\",\"api\",\"mai\",\"eka\",\"uzt\",\"abu\",\"ira\",\"urr\",\"aza\",\"abe\"],weekdaysFull:[\"igandea\",\"astelehena\",\"asteartea\",\"asteazkena\",\"osteguna\",\"ostirala\",\"larunbata\"],weekdaysShort:[\"ig.\",\"al.\",\"ar.\",\"az.\",\"og.\",\"or.\",\"lr.\"],today:\"gaur\",clear:\"garbitu\",firstDay:1,format:\"dddd, yyyy(e)ko mmmmren da\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"garbitu\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/fa_IR.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"ژانویه\",\"فوریه\",\"مارس\",\"آوریل\",\"مه\",\"ژوئن\",\"ژوئیه\",\"اوت\",\"سپتامبر\",\"اکتبر\",\"نوامبر\",\"دسامبر\"],monthsShort:[\"ژانویه\",\"فوریه\",\"مارس\",\"آوریل\",\"مه\",\"ژوئن\",\"ژوئیه\",\"اوت\",\"سپتامبر\",\"اکتبر\",\"نوامبر\",\"دسامبر\"],weekdaysFull:[\"یکشنبه\",\"دوشنبه\",\"سه شنبه\",\"چهارشنبه\",\"پنجشنبه\",\"جمعه\",\"شنبه\"],weekdaysShort:[\"یکشنبه\",\"دوشنبه\",\"سه شنبه\",\"چهارشنبه\",\"پنجشنبه\",\"جمعه\",\"شنبه\"],today:\"امروز\",clear:\"پاک کردن\",close:\"بستن\",format:\"yyyy mmmm dd\",formatSubmit:\"yyyy/mm/dd\",labelMonthNext:\"ماه بعدی\",labelMonthPrev:\"ماه قبلی\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"پاک کردن\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/fi_FI.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"tammikuu\",\"helmikuu\",\"maaliskuu\",\"huhtikuu\",\"toukokuu\",\"kesäkuu\",\"heinäkuu\",\"elokuu\",\"syyskuu\",\"lokakuu\",\"marraskuu\",\"joulukuu\"],monthsShort:[\"tammi\",\"helmi\",\"maalis\",\"huhti\",\"touko\",\"kesä\",\"heinä\",\"elo\",\"syys\",\"loka\",\"marras\",\"joulu\"],weekdaysFull:[\"sunnuntai\",\"maanantai\",\"tiistai\",\"keskiviikko\",\"torstai\",\"perjantai\",\"lauantai\"],weekdaysShort:[\"su\",\"ma\",\"ti\",\"ke\",\"to\",\"pe\",\"la\"],today:\"tänään\",clear:\"tyhjennä\",firstDay:1,format:\"d.m.yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"tyhjennä\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/fr_FR.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Janvier\",\"Février\",\"Mars\",\"Avril\",\"Mai\",\"Juin\",\"Juillet\",\"Août\",\"Septembre\",\"Octobre\",\"Novembre\",\"Décembre\"],monthsShort:[\"Jan\",\"Fev\",\"Mar\",\"Avr\",\"Mai\",\"Juin\",\"Juil\",\"Aou\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],weekdaysFull:[\"Dimanche\",\"Lundi\",\"Mardi\",\"Mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\"],weekdaysShort:[\"Dim\",\"Lun\",\"Mar\",\"Mer\",\"Jeu\",\"Ven\",\"Sam\"],today:\"Aujourd'hui\",clear:\"Effacer\",close:\"Fermer\",firstDay:1,format:\"dd mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\",labelMonthNext:\"Mois suivant\",labelMonthPrev:\"Mois précédent\",labelMonthSelect:\"Sélectionner un mois\",labelYearSelect:\"Sélectionner une année\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Effacer\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/gl_ES.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Xaneiro\",\"Febreiro\",\"Marzo\",\"Abril\",\"Maio\",\"Xuño\",\"Xullo\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Decembro\"],monthsShort:[\"xan\",\"feb\",\"mar\",\"abr\",\"mai\",\"xun\",\"xul\",\"ago\",\"sep\",\"out\",\"nov\",\"dec\"],weekdaysFull:[\"domingo\",\"luns\",\"martes\",\"mércores\",\"xoves\",\"venres\",\"sábado\"],weekdaysShort:[\"dom\",\"lun\",\"mar\",\"mér\",\"xov\",\"ven\",\"sab\"],today:\"hoxe\",clear:\"borrar\",firstDay:1,format:\"dddd d !de mmmm !de yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"borrar\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/he_IL.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"ינואר\",\"פברואר\",\"מרץ\",\"אפריל\",\"מאי\",\"יוני\",\"יולי\",\"אוגוסט\",\"ספטמבר\",\"אוקטובר\",\"נובמבר\",\"דצמבר\"],monthsShort:[\"ינו\",\"פבר\",\"מרץ\",\"אפר\",\"מאי\",\"יונ\",\"יול\",\"אוג\",\"ספט\",\"אוק\",\"נוב\",\"דצמ\"],weekdaysFull:[\"יום ראשון\",\"יום שני\",\"יום שלישי\",\"יום רביעי\",\"יום חמישי\",\"יום ששי\",\"יום שבת\"],weekdaysShort:[\"א\",\"ב\",\"ג\",\"ד\",\"ה\",\"ו\",\"ש\"],today:\"היום\",clear:\"למחוק\",format:\"yyyy mmmmב d dddd\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"למחוק\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/hi_IN.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"जनवरी\",\"फरवरी\",\"मार्च\",\"अप्रैल\",\"मई\",\"जून\",\"जुलाई\",\"अगस्त\",\"सितम्बर\",\"अक्टूबर\",\"नवम्बर\",\"दिसम्बर\"],monthsShort:[\"जन\",\"फर\",\"मार्च\",\"अप्रैल\",\"मई\",\"जून\",\"जु\",\"अग\",\"सित\",\"अक्टू\",\"नव\",\"दिस\"],weekdaysFull:[\"रविवार\",\"सोमवार\",\"मंगलवार\",\"बुधवार\",\"गुरुवार\",\"शुक्रवार\",\"शनिवार\"],weekdaysShort:[\"रवि\",\"सोम\",\"मंगल\",\"बुध\",\"गुरु\",\"शुक्र\",\"शनि\"],today:\"आज की तारीख चयन करें\",clear:\"चुनी हुई तारीख को मिटाएँ\",close:\"विंडो बंद करे\",firstDay:1,format:\"dd/mm/yyyy\",formatSubmit:\"yyyy/mm/dd\",labelMonthNext:\"अगले माह का चयन करें\",labelMonthPrev:\"पिछले माह का चयन करें\",labelMonthSelect:\"किसि एक महीने का चयन करें\",labelYearSelect:\"किसि एक वर्ष का चयन करें\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"चुनी हुई तारीख को मिटाएँ\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/hr_HR.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"sijećanj\",\"veljača\",\"ožujak\",\"travanj\",\"svibanj\",\"lipanj\",\"srpanj\",\"kolovoz\",\"rujan\",\"listopad\",\"studeni\",\"prosinac\"],monthsShort:[\"sij\",\"velj\",\"ožu\",\"tra\",\"svi\",\"lip\",\"srp\",\"kol\",\"ruj\",\"lis\",\"stu\",\"pro\"],weekdaysFull:[\"nedjelja\",\"ponedjeljak\",\"utorak\",\"srijeda\",\"četvrtak\",\"petak\",\"subota\"],weekdaysShort:[\"ned\",\"pon\",\"uto\",\"sri\",\"čet\",\"pet\",\"sub\"],today:\"danas\",clear:\"izbrisati\",firstDay:1,format:\"d. mmmm yyyy.\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"izbrisati\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/hu_HU.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"január\",\"február\",\"március\",\"április\",\"május\",\"június\",\"július\",\"augusztus\",\"szeptember\",\"október\",\"november\",\"december\"],monthsShort:[\"jan\",\"febr\",\"márc\",\"ápr\",\"máj\",\"jún\",\"júl\",\"aug\",\"szept\",\"okt\",\"nov\",\"dec\"],weekdaysFull:[\"vasárnap\",\"hétfő\",\"kedd\",\"szerda\",\"csütörtök\",\"péntek\",\"szombat\"],weekdaysShort:[\"V\",\"H\",\"K\",\"SZe\",\"CS\",\"P\",\"SZo\"],today:\"Ma\",clear:\"Törlés\",firstDay:1,format:\"yyyy. mmmm dd.\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Törlés\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/id_ID.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Januari\",\"Februari\",\"Maret\",\"April\",\"Mei\",\"Juni\",\"Juli\",\"Agustus\",\"September\",\"Oktober\",\"November\",\"Desember\"],monthsShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"Mei\",\"Jun\",\"Jul\",\"Agu\",\"Sep\",\"Okt\",\"Nov\",\"Des\"],weekdaysFull:[\"Minggu\",\"Senin\",\"Selasa\",\"Rabu\",\"Kamis\",\"Jumat\",\"Sabtu\"],weekdaysShort:[\"Min\",\"Sen\",\"Sel\",\"Rab\",\"Kam\",\"Jum\",\"Sab\"],today:\"hari ini\",clear:\"menghapus\",firstDay:1,format:\"d mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"menghapus\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/is_IS.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"janúar\",\"febrúar\",\"mars\",\"apríl\",\"maí\",\"júní\",\"júlí\",\"ágúst\",\"september\",\"október\",\"nóvember\",\"desember\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"maí\",\"jún\",\"júl\",\"ágú\",\"sep\",\"okt\",\"nóv\",\"des\"],weekdaysFull:[\"sunnudagur\",\"mánudagur\",\"þriðjudagur\",\"miðvikudagur\",\"fimmtudagur\",\"föstudagur\",\"laugardagur\"],weekdaysShort:[\"sun\",\"mán\",\"þri\",\"mið\",\"fim\",\"fös\",\"lau\"],today:\"Í dag\",clear:\"Hreinsa\",firstDay:1,format:\"dd. mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Hreinsa\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/it_IT.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"gennaio\",\"febbraio\",\"marzo\",\"aprile\",\"maggio\",\"giugno\",\"luglio\",\"agosto\",\"settembre\",\"ottobre\",\"novembre\",\"dicembre\"],monthsShort:[\"gen\",\"feb\",\"mar\",\"apr\",\"mag\",\"giu\",\"lug\",\"ago\",\"set\",\"ott\",\"nov\",\"dic\"],weekdaysFull:[\"domenica\",\"lunedì\",\"martedì\",\"mercoledì\",\"giovedì\",\"venerdì\",\"sabato\"],weekdaysShort:[\"dom\",\"lun\",\"mar\",\"mer\",\"gio\",\"ven\",\"sab\"],today:\"Oggi\",clear:\"Cancella\",close:\"Chiudi\",firstDay:1,format:\"dddd d mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\",labelMonthNext:\"Mese successivo\",labelMonthPrev:\"Mese precedente\",labelMonthSelect:\"Seleziona un mese\",labelYearSelect:\"Seleziona un anno\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Cancella\",format:\"HH:i\",formatSubmit:\"HH:i\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/ja_JP.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"1月\",\"2月\",\"3月\",\"4月\",\"5月\",\"6月\",\"7月\",\"8月\",\"9月\",\"10月\",\"11月\",\"12月\"],monthsShort:[\"1月\",\"2月\",\"3月\",\"4月\",\"5月\",\"6月\",\"7月\",\"8月\",\"9月\",\"10月\",\"11月\",\"12月\"],weekdaysFull:[\"日曜日\",\"月曜日\",\"火曜日\",\"水曜日\",\"木曜日\",\"金曜日\",\"土曜日\"],weekdaysShort:[\"日\",\"月\",\"火\",\"水\",\"木\",\"金\",\"土\"],today:\"今日\",clear:\"消去\",firstDay:1,format:\"yyyy mm dd\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"消去\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/ko_KR.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\",\"12월\"],monthsShort:[\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\",\"12월\"],weekdaysFull:[\"일요일\",\"월요일\",\"화요일\",\"수요일\",\"목요일\",\"금요일\",\"토요일\"],weekdaysShort:[\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"],today:\"오늘\",clear:\"취소\",firstDay:1,format:\"yyyy 년 mm 월 dd 일\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"취소\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/lt_LT.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{labelMonthNext:\"Sekantis mėnuo\",labelMonthPrev:\"Ankstesnis mėnuo\",labelMonthSelect:\"Pasirinkite mėnesį\",labelYearSelect:\"Pasirinkite metus\",monthsFull:[\"Sausis\",\"Vasaris\",\"Kovas\",\"Balandis\",\"Gegužė\",\"Birželis\",\"Liepa\",\"Rugpjūtis\",\"Rugsėjis\",\"Spalis\",\"Lapkritis\",\"Gruodis\"],monthsShort:[\"Sau\",\"Vas\",\"Kov\",\"Bal\",\"Geg\",\"Bir\",\"Lie\",\"Rgp\",\"Rgs\",\"Spa\",\"Lap\",\"Grd\"],weekdaysFull:[\"Sekmadienis\",\"Pirmadienis\",\"Antradienis\",\"Trečiadienis\",\"Ketvirtadienis\",\"Penktadienis\",\"Šeštadienis\"],weekdaysShort:[\"Sk\",\"Pr\",\"An\",\"Tr\",\"Kt\",\"Pn\",\"Št\"],today:\"Šiandien\",clear:\"Išvalyti\",close:\"Uždaryti\",firstDay:1,format:\"yyyy-mm-dd\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Išvalyti\",format:\"HH:i\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/lv_LV.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Janvāris\",\"Februāris\",\"Marts\",\"Aprīlis\",\"Maijs\",\"Jūnijs\",\"Jūlijs\",\"Augusts\",\"Septembris\",\"Oktobris\",\"Novembris\",\"Decembris\"],monthsShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"Mai\",\"Jūn\",\"Jūl\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dec\"],weekdaysFull:[\"Svētdiena\",\"Pirmdiena\",\"Otrdiena\",\"Trešdiena\",\"Ceturtdiena\",\"Piektdiena\",\"Sestdiena\"],weekdaysShort:[\"Sv\",\"P\",\"O\",\"T\",\"C\",\"Pk\",\"S\"],today:\"Šodiena\",clear:\"Atcelt\",firstDay:1,format:\"yyyy.mm.dd. dddd\",formatSubmit:\"yyyy/mm/dd\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/nb_NO.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"januar\",\"februar\",\"mars\",\"april\",\"mai\",\"juni\",\"juli\",\"august\",\"september\",\"oktober\",\"november\",\"desember\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"mai\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"des\"],weekdaysFull:[\"søndag\",\"mandag\",\"tirsdag\",\"onsdag\",\"torsdag\",\"fredag\",\"lørdag\"],weekdaysShort:[\"søn\",\"man\",\"tir\",\"ons\",\"tor\",\"fre\",\"lør\"],today:\"i dag\",clear:\"nullstill\",close:\"lukk\",firstDay:1,format:\"dd. mmm. yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"nullstill\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/ne_NP.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"जनवरी\",\"फेब्रुअरी\",\"मार्च\",\"अप्रिल\",\"मे\",\"जुन\",\"जुलाई\",\"अगस्त\",\"सेप्टेम्बर\",\"अक्टोबर\",\"नोवेम्बर\",\"डिसेम्बर\"],monthsShort:[\"जन\",\"फेब्रु\",\"मार्च\",\"अप्रिल\",\"मे\",\"जुन\",\"जुल\",\"अग\",\"सेप्टे\",\"अक्टो\",\"नोभे\",\"डिसे\"],weekdaysFull:[\"सोमबार\",\"मङ्लबार\",\"बुधबार\",\"बिहीबार\",\"शुक्रबार\",\"शनिबार\",\"आईतबार\"],weekdaysShort:[\"सोम\",\"मंगल्\",\"बुध\",\"बिही\",\"शुक्र\",\"शनि\",\"आईत\"],numbers:[\"०\",\"१\",\"२\",\"३\",\"४\",\"५\",\"६\",\"७\",\"८\",\"९\"],today:\"आज\",clear:\"मेटाउनुहोस्\",format:\"dddd, dd mmmm, yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"मेटाउनुहोस्\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/nl_NL.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"januari\",\"februari\",\"maart\",\"april\",\"mei\",\"juni\",\"juli\",\"augustus\",\"september\",\"oktober\",\"november\",\"december\"],monthsShort:[\"jan\",\"feb\",\"maa\",\"apr\",\"mei\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"dec\"],weekdaysFull:[\"zondag\",\"maandag\",\"dinsdag\",\"woensdag\",\"donderdag\",\"vrijdag\",\"zaterdag\"],weekdaysShort:[\"zo\",\"ma\",\"di\",\"wo\",\"do\",\"vr\",\"za\"],today:\"vandaag\",clear:\"verwijderen\",close:\"sluiten\",firstDay:1,format:\"dddd d mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"verwijderen\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/no_NO.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"januar\",\"februar\",\"mars\",\"april\",\"mai\",\"juni\",\"juli\",\"august\",\"september\",\"oktober\",\"november\",\"desember\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"mai\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"des\"],weekdaysFull:[\"søndag\",\"mandag\",\"tirsdag\",\"onsdag\",\"torsdag\",\"fredag\",\"lørdag\"],weekdaysShort:[\"søn\",\"man\",\"tir\",\"ons\",\"tor\",\"fre\",\"lør\"],today:\"i dag\",clear:\"nullstill\",firstDay:1,format:\"dd. mmm. yyyy\",formatSubmit:\"yyyy/mm/dd\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/pl_PL.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"styczeń\",\"luty\",\"marzec\",\"kwiecień\",\"maj\",\"czerwiec\",\"lipiec\",\"sierpień\",\"wrzesień\",\"październik\",\"listopad\",\"grudzień\"],monthsShort:[\"sty\",\"lut\",\"mar\",\"kwi\",\"maj\",\"cze\",\"lip\",\"sie\",\"wrz\",\"paź\",\"lis\",\"gru\"],weekdaysFull:[\"niedziela\",\"poniedziałek\",\"wtorek\",\"środa\",\"czwartek\",\"piątek\",\"sobota\"],weekdaysShort:[\"niedz.\",\"pn.\",\"wt.\",\"śr.\",\"cz.\",\"pt.\",\"sob.\"],today:\"Dzisiaj\",clear:\"Usuń\",close:\"Zamknij\",firstDay:1,format:\"d mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"usunąć\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/pt_BR.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"janeiro\",\"fevereiro\",\"março\",\"abril\",\"maio\",\"junho\",\"julho\",\"agosto\",\"setembro\",\"outubro\",\"novembro\",\"dezembro\"],monthsShort:[\"jan\",\"fev\",\"mar\",\"abr\",\"mai\",\"jun\",\"jul\",\"ago\",\"set\",\"out\",\"nov\",\"dez\"],weekdaysFull:[\"domingo\",\"segunda-feira\",\"terça-feira\",\"quarta-feira\",\"quinta-feira\",\"sexta-feira\",\"sábado\"],weekdaysShort:[\"dom\",\"seg\",\"ter\",\"qua\",\"qui\",\"sex\",\"sab\"],today:\"hoje\",clear:\"limpar\",close:\"fechar\",format:\"dddd, d !de mmmm !de yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"limpar\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/pt_PT.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Janeiro\",\"Fevereiro\",\"Março\",\"Abril\",\"Maio\",\"Junho\",\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\"],monthsShort:[\"jan\",\"fev\",\"mar\",\"abr\",\"mai\",\"jun\",\"jul\",\"ago\",\"set\",\"out\",\"nov\",\"dez\"],weekdaysFull:[\"Domingo\",\"Segunda\",\"Terça\",\"Quarta\",\"Quinta\",\"Sexta\",\"Sábado\"],weekdaysShort:[\"dom\",\"seg\",\"ter\",\"qua\",\"qui\",\"sex\",\"sab\"],today:\"Hoje\",clear:\"Limpar\",close:\"Fechar\",format:\"d !de mmmm !de yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Limpar\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/ro_RO.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"ianuarie\",\"februarie\",\"martie\",\"aprilie\",\"mai\",\"iunie\",\"iulie\",\"august\",\"septembrie\",\"octombrie\",\"noiembrie\",\"decembrie\"],monthsShort:[\"ian\",\"feb\",\"mar\",\"apr\",\"mai\",\"iun\",\"iul\",\"aug\",\"sep\",\"oct\",\"noi\",\"dec\"],weekdaysFull:[\"duminică\",\"luni\",\"marţi\",\"miercuri\",\"joi\",\"vineri\",\"sâmbătă\"],weekdaysShort:[\"D\",\"L\",\"Ma\",\"Mi\",\"J\",\"V\",\"S\"],today:\"azi\",clear:\"șterge\",firstDay:1,format:\"dd mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"șterge\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/ru_RU.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"января\",\"февраля\",\"марта\",\"апреля\",\"мая\",\"июня\",\"июля\",\"августа\",\"сентября\",\"октября\",\"ноября\",\"декабря\"],monthsShort:[\"янв\",\"фев\",\"мар\",\"апр\",\"май\",\"июн\",\"июл\",\"авг\",\"сен\",\"окт\",\"ноя\",\"дек\"],weekdaysFull:[\"воскресенье\",\"понедельник\",\"вторник\",\"среда\",\"четверг\",\"пятница\",\"суббота\"],weekdaysShort:[\"вс\",\"пн\",\"вт\",\"ср\",\"чт\",\"пт\",\"сб\"],today:\"сегодня\",clear:\"удалить\",close:\"закрыть\",firstDay:1,format:\"d mmmm yyyy г.\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"удалить\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/sk_SK.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"január\",\"február\",\"marec\",\"apríl\",\"máj\",\"jún\",\"júl\",\"august\",\"september\",\"október\",\"november\",\"december\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"máj\",\"jún\",\"júl\",\"aug\",\"sep\",\"okt\",\"nov\",\"dec\"],weekdaysFull:[\"nedeľa\",\"pondelok\",\"utorok\",\"streda\",\"štvrtok\",\"piatok\",\"sobota\"],weekdaysShort:[\"Ne\",\"Po\",\"Ut\",\"St\",\"Št\",\"Pi\",\"So\"],today:\"dnes\",clear:\"vymazať\",close:\"zavrieť\",firstDay:1,format:\"d. mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"vymazať\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/sl_SI.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"januar\",\"februar\",\"marec\",\"april\",\"maj\",\"junij\",\"julij\",\"avgust\",\"september\",\"oktober\",\"november\",\"december\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"maj\",\"jun\",\"jul\",\"avg\",\"sep\",\"okt\",\"nov\",\"dec\"],weekdaysFull:[\"nedelja\",\"ponedeljek\",\"torek\",\"sreda\",\"četrtek\",\"petek\",\"sobota\"],weekdaysShort:[\"ned\",\"pon\",\"tor\",\"sre\",\"čet\",\"pet\",\"sob\"],today:\"danes\",clear:\"izbriši\",close:\"zapri\",firstDay:1,format:\"d. mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"izbriši\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/sv_SE.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"januari\",\"februari\",\"mars\",\"april\",\"maj\",\"juni\",\"juli\",\"augusti\",\"september\",\"oktober\",\"november\",\"december\"],monthsShort:[\"jan\",\"feb\",\"mar\",\"apr\",\"maj\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"dec\"],weekdaysFull:[\"söndag\",\"måndag\",\"tisdag\",\"onsdag\",\"torsdag\",\"fredag\",\"lördag\"],weekdaysShort:[\"sön\",\"mån\",\"tis\",\"ons\",\"tor\",\"fre\",\"lör\"],today:\"Idag\",clear:\"Rensa\",close:\"Stäng\",firstDay:1,format:\"yyyy-mm-dd\",formatSubmit:\"yyyy/mm/dd\",labelMonthNext:\"Nästa månad\",labelMonthPrev:\"Föregående månad\",labelMonthSelect:\"Välj månad\",labelYearSelect:\"Välj år\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Rensa\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/th_TH.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"มกราคม\",\"กุมภาพันธ์\",\"มีนาคม\",\"เมษายน\",\"พฤษภาคม\",\"มิถุนายน\",\"กรกฎาคม\",\"สิงหาคม\",\"กันยายน\",\"ตุลาคม\",\"พฤศจิกายน\",\"ธันวาคม\"],monthsShort:[\"ม.ค.\",\"ก.พ.\",\"มี.ค.\",\"เม.ย.\",\"พ.ค.\",\"มิ.ย.\",\"ก.ค.\",\"ส.ค.\",\"ก.ย.\",\"ต.ค.\",\"พ.ย.\",\"ธ.ค.\"],weekdaysFull:[\"อาทติย\",\"จันทร\",\"องัคาร\",\"พุธ\",\"พฤหสั บดี\",\"ศกุร\",\"เสาร\"],weekdaysShort:[\"อ.\",\"จ.\",\"อ.\",\"พ.\",\"พฤ.\",\"ศ.\",\"ส.\"],today:\"วันนี้\",clear:\"ลบ\",format:\"d mmmm yyyy\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"ลบ\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/tr_TR.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Ocak\",\"Şubat\",\"Mart\",\"Nisan\",\"Mayıs\",\"Haziran\",\"Temmuz\",\"Ağustos\",\"Eylül\",\"Ekim\",\"Kasım\",\"Aralık\"],monthsShort:[\"Oca\",\"Şub\",\"Mar\",\"Nis\",\"May\",\"Haz\",\"Tem\",\"Ağu\",\"Eyl\",\"Eki\",\"Kas\",\"Ara\"],weekdaysFull:[\"Pazar\",\"Pazartesi\",\"Salı\",\"Çarşamba\",\"Perşembe\",\"Cuma\",\"Cumartesi\"],weekdaysShort:[\"Pzr\",\"Pzt\",\"Sal\",\"Çrş\",\"Prş\",\"Cum\",\"Cmt\"],today:\"Bugün\",clear:\"Sil\",close:\"Kapat\",firstDay:1,format:\"dd mmmm yyyy dddd\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"sil\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/uk_UA.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"січень\",\"лютий\",\"березень\",\"квітень\",\"травень\",\"червень\",\"липень\",\"серпень\",\"вересень\",\"жовтень\",\"листопад\",\"грудень\"],monthsShort:[\"січ\",\"лют\",\"бер\",\"кві\",\"тра\",\"чер\",\"лип\",\"сер\",\"вер\",\"жов\",\"лис\",\"гру\"],weekdaysFull:[\"неділя\",\"понеділок\",\"вівторок\",\"середа\",\"четвер\",\"п‘ятниця\",\"субота\"],weekdaysShort:[\"нд\",\"пн\",\"вт\",\"ср\",\"чт\",\"пт\",\"сб\"],today:\"сьогодні\",clear:\"викреслити\",firstDay:1,format:\"dd mmmm yyyy p.\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"викреслити\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/vi_VN.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"Tháng Một\",\"Tháng Hai\",\"Tháng Ba\",\"Tháng Tư\",\"Tháng Năm\",\"Tháng Sáu\",\"Tháng Bảy\",\"Tháng Tám\",\"Tháng Chín\",\"Tháng Mười\",\"Tháng Mười Một\",\"Tháng Mười Hai\"],monthsShort:[\"Một\",\"Hai\",\"Ba\",\"Tư\",\"Năm\",\"Sáu\",\"Bảy\",\"Tám\",\"Chín\",\"Mưới\",\"Mười Một\",\"Mười Hai\"],weekdaysFull:[\"Chủ Nhật\",\"Thứ Hai\",\"Thứ Ba\",\"Thứ Tư\",\"Thứ Năm\",\"Thứ Sáu\",\"Thứ Bảy\"],weekdaysShort:[\"C.Nhật\",\"T.Hai\",\"T.Ba\",\"T.Tư\",\"T.Năm\",\"T.Sáu\",\"T.Bảy\"],today:\"Hôm Nay\",clear:\"Xoá\",firstDay:1}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"Xoá\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/zh_CN.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],monthsShort:[\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\",\"十一\",\"十二\"],weekdaysFull:[\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"],weekdaysShort:[\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"],today:\"今日\",clear:\"清除\",close:\"关闭\",firstDay:1,format:\"yyyy 年 mm 月 dd 日\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"清除\"});","/home/travis/build/npmtest/node-npmtest-pickadate/node_modules/pickadate/lib/compressed/translations/zh_TW.js":"jQuery.extend(jQuery.fn.pickadate.defaults,{monthsFull:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],monthsShort:[\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\",\"十一\",\"十二\"],weekdaysFull:[\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"],weekdaysShort:[\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"],today:\"今天\",clear:\"清除\",close:\"关闭\",firstDay:1,format:\"yyyy 年 mm 月 dd 日\",formatSubmit:\"yyyy/mm/dd\"}),jQuery.extend(jQuery.fn.pickatime.defaults,{clear:\"清除\"});"}